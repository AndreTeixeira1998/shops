{"version":3,"mappings":"qOAEO,MAAMA,EAAwBC;;;;EAMxBC,EAAkBD;;;;iBCCxB,QAGLE,YACUC,EACEC,EACFC,EACAC,GAHAC,mBACEA,mBACFA,sBACAA,2BAERA,KAAKC,YAAcD,KAAKE,YAAYC,MAAM,CACxCC,IAAK,CAAC,sBAAuBC,iBAI3BC,+DACEN,KAAKO,YACRC,MAAMd,GACNe,UAAWb,GAAWA,EAAEc,SACxBC,UAAWf,GACVI,KAAKC,YAAYW,SAASR,IAAOS,SAASjB,MAI1CkB,qDACJ,IACE,GAAId,KAAKC,YAAYc,MAAO,CAC1B,MAAMnB,EAAYI,KAAKC,YAAYe,YAC7BhB,KAAKO,YACRU,OAAOzB,EAAuB,CAAEY,IAAKR,EAAUQ,MAC/Cc,YAELlB,KAAKC,YAAYkB,iBACjBnB,KAAKoB,eAAeC,eACpBrB,KAAKsB,oBAAoBC,QAAQ,+BAAgC,CAC/DC,OAAQ,kBAEH5B,GACPI,KAAKsB,oBAAoBG,MAAM,6BAA8B,CAC3DD,OAAQ,sDAtCHE,GAAgBC,6EAAhBD,EAAgBE,iSCT7BD,iBACEA,iBACEA,kBACEA,qBACEA,4BACEA,mBACFA,QACAA,oBAEEA,gCAAS9B,WAGT8B,kBACFA,QACFA,QACFA,QACFA,QACFA,eAfuBA,0CAQbA,mJCoBH,+CAAME,6DAbA,IACTC,OACE,CACEC,GAAI,UACJC,MAAO,UACPC,WAAY,CAAC,uBACbC,KAAM,oBAER,aAEHC,SArBQ,CACPL,MACAM,cAAsB,CACpB,CACEC,KAAM,GACNC,UAAW,OACXC,UAAWb,EACXc,KAAM,CAAEC,WAAY","names":["b","l","k","constructor","e","s","m","f","this","webhookForm","formBuilder","group","url","r","ngOnInit","dataService","query","mapStream","webhook","subscribe","controls","setValue","save","dirty","value","mutate","toPromise","markAsPristine","changeDetector","markForCheck","notificationService","success","entity","error","u","o","selectors","n","i","id","label","routerLink","icon","imports","d","path","pathMatch","component","data","breadcrumb"],"sources":["webpack:///src/extensions/61aa03f5e7fe5ea0996e6a8141107bbcf069eea135181d18c537e2570aca2d56/queries.ts","webpack:///src/extensions/61aa03f5e7fe5ea0996e6a8141107bbcf069eea135181d18c537e2570aca2d56/webhook.component.ts","webpack:///src/extensions/61aa03f5e7fe5ea0996e6a8141107bbcf069eea135181d18c537e2570aca2d56/webhook.component.html","webpack:///src/extensions/61aa03f5e7fe5ea0996e6a8141107bbcf069eea135181d18c537e2570aca2d56/webhook.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const updateWebhookMutation = gql`\n  mutation updateWebhook($url: String!) {\n    updateWebhook(url: $url)\n  }\n`;\n\nexport const getWebhookQuery = gql`\n  query webhook {\n    webhook\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport { getWebhookQuery, updateWebhookMutation } from './queries';\n\n@Component({\n  selector: 'webhook-component',\n  templateUrl: './webhook.component.html',\n})\nexport class WebhookComponent implements OnInit {\n  webhookForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.webhookForm = this.formBuilder.group({\n      url: ['https://example.com', Validators.required],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(getWebhookQuery)\n      .mapStream((d: any) => d.webhook)\n      .subscribe((webhook) =>\n        this.webhookForm.controls['url'].setValue(webhook)\n      );\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.webhookForm.dirty) {\n        const formValue = this.webhookForm.value;\n        await this.dataService\n          .mutate(updateWebhookMutation, { url: formValue.url })\n          .toPromise();\n      }\n      this.webhookForm.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'Webhook',\n      });\n    } catch (e) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'Webhook',\n      });\n    }\n  }\n}\n","<div class=\"clr-row\">\n  <div class=\"clr-col\">\n    <form class=\"form\" [formGroup]=\"webhookForm\">\n      <section class=\"form-block\">\n        <vdr-form-field label=\"Webhook url\" for=\"url\">\n          <input id=\"url\" type=\"text\" formControlName=\"url\" />\n        </vdr-form-field>\n        <button\n          class=\"btn btn-primary\"\n          (click)=\"save()\"\n          [disabled]=\"webhookForm.invalid || webhookForm.pristine\"\n        >\n          Save\n        </button>\n      </section>\n    </form>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { WebhookComponent } from './webhook.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: WebhookComponent,\n        data: { breadcrumb: 'Webhook' },\n      },\n    ]),\n  ],\n  providers: [\n    addNavMenuItem(\n      {\n        id: 'webhook',\n        label: 'Webhook',\n        routerLink: ['/extensions/webhook'],\n        icon: 'cursor-hand-open',\n      },\n      'settings'\n    ),\n  ],\n  declarations: [WebhookComponent],\n})\nexport class WebhookModule {}\n"]}