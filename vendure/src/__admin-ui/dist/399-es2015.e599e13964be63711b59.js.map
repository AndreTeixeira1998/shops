{"version":3,"mappings":"4NAEO,MAAMA,EAA0BC;;;;;;;;EAU1BC,EAAuBD;;;;;;;;4BCmB7B,QAGLE,YACUC,EACEC,EACFC,EACAC,GAHAC,mBACEA,mBACFA,sBACAA,2BAERA,KAAKC,KAAOD,KAAKE,YAAYC,MAAM,CACjCC,OAAQ,CAAC,eACTC,UAAW,CAAC,qBAIVC,+DACEN,KAAKO,YACRC,MAAMd,GACNe,UAAWb,GAAWA,EAAEc,iBACxBC,UAAWf,IACVI,KAAKC,KAAKW,SAASR,OAAUS,SAASjB,EAAOQ,QAC7CJ,KAAKC,KAAKW,SAASP,UAAaQ,SAASjB,EAAOS,eAIhDS,qDACJ,IACE,GAAId,KAAKC,KAAKc,MAAO,CACnB,MAAMnB,EAAYI,KAAKC,KAAKe,YACtBhB,KAAKO,YACRU,OAAOzB,EAAyB,CAC/B0B,MAAO,CAAEd,OAAQR,EAAUQ,OAAQC,UAAWT,EAAUS,aAEzDc,YAELnB,KAAKC,KAAKmB,iBACVpB,KAAKqB,eAAeC,eACpBtB,KAAKuB,oBAAoBC,QAAQ,+BAAgC,CAC/DC,OAAQ,2BAEH7B,GACPI,KAAKuB,oBAAoBG,MAAM,6BAA8B,CAC3DD,OAAQ,+DA1CHE,GAAkBC,6EAAlBD,EAAkBE,oaAvB3BD,iBACEA,iBACEA,kBACEA,qBACEA,4BACEA,mBACFA,QACAA,4BACEA,mBACFA,QACAA,oBAEEA,gCAAS/B,WAGT+B,kBACFA,QACFA,QACFA,QACFA,QACFA,eAlBuBA,mCAWbA,qICDP,+CAAME,6DAHA,GAAEC,SAXJ,CACPC,MACAC,cAAsB,CACpB,CACEC,KAAM,GACNC,UAAW,OACXC,UAAWT,EACXU,KAAM,CAAEC,WAAY","names":["p","a","y","constructor","o","r","m","v","this","form","formBuilder","group","secret","publicKey","ngOnInit","dataService","query","mapStream","sendCloudConfig","subscribe","controls","setValue","save","dirty","value","mutate","input","toPromise","markAsPristine","changeDetector","markForCheck","notificationService","success","entity","error","u","e","selectors","n","imports","c","f","path","pathMatch","component","data","breadcrumb"],"sources":["webpack:///src/extensions/fb7f8506373513100ed78ddac8513b479688a3f0598a9e860d7fddc3e44a9d43/queries.ts","webpack:///src/extensions/fb7f8506373513100ed78ddac8513b479688a3f0598a9e860d7fddc3e44a9d43/sendcloud.component.ts","webpack:///src/extensions/fb7f8506373513100ed78ddac8513b479688a3f0598a9e860d7fddc3e44a9d43/sendcloud.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const UPDATE_SENDCLOUD_CONFIG = gql`\n  mutation updateSendCloudConfig($input: SendCloudConfigInput) {\n    updateSendCloudConfig(input: $input) {\n      id\n      secret\n      publicKey\n    }\n  }\n`;\n\nexport const GET_SENDCLOUD_CONFIG = gql`\n  query sendCloudConfig {\n    sendCloudConfig {\n      id\n      secret\n      publicKey\n    }\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport { GET_SENDCLOUD_CONFIG, UPDATE_SENDCLOUD_CONFIG } from './queries';\n\n@Component({\n  selector: 'sendcloud-component',\n  template: `\n    <div class=\"clr-row\">\n      <div class=\"clr-col\">\n        <form class=\"form\" [formGroup]=\"form\">\n          <section class=\"form-block\">\n            <vdr-form-field label=\"SendCloud secret\" for=\"apiKey\">\n              <input id=\"secret\" type=\"text\" formControlName=\"secret\" />\n            </vdr-form-field>\n            <vdr-form-field label=\"SendCloud public key\" for=\"publicKey\">\n              <input id=\"publicKey\" type=\"text\" formControlName=\"publicKey\" />\n            </vdr-form-field>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"save()\"\n              [disabled]=\"form.invalid || form.pristine\"\n            >\n              Save\n            </button>\n          </section>\n        </form>\n      </div>\n    </div>\n  `,\n})\nexport class SendcloudComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.form = this.formBuilder.group({\n      secret: ['your-secret'],\n      publicKey: ['your-public-key'],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(GET_SENDCLOUD_CONFIG)\n      .mapStream((d: any) => d.sendCloudConfig)\n      .subscribe((config) => {\n        this.form.controls['secret'].setValue(config.secret);\n        this.form.controls['publicKey'].setValue(config.publicKey);\n      });\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.form.dirty) {\n        const formValue = this.form.value;\n        await this.dataService\n          .mutate(UPDATE_SENDCLOUD_CONFIG, {\n            input: { secret: formValue.secret, publicKey: formValue.publicKey },\n          })\n          .toPromise();\n      }\n      this.form.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'SendCloud config',\n      });\n    } catch (e) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'SendCloud config',\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { SendcloudComponent } from './sendcloud.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: SendcloudComponent,\n        data: { breadcrumb: 'SendCloud' },\n      },\n    ]),\n  ],\n  providers: [],\n  declarations: [SendcloudComponent],\n})\nexport class SendcloudModule {}\n"]}