{"version":3,"mappings":"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","names":["r","b","s","m","f","g","y","e","a","constructor","o","t","u","h","this","form","formBuilder","group","enabled","apiKey","webshopUuid","orderWebhookUrl","orderWebhookKey","stockWebhookUrl","stockWebhookKey","ngOnInit","dataService","query","mapStream","goedgepicktConfig","subscribe","controls","setValue","save","dirty","value","mutate","input","toPromise","updateGoedgepicktConfig","markAsPristine","changeDetector","markForCheck","notificationService","success","entity","error","fullSync","loadingSync","message","test","testFailed","testResultName","U","method","headers","Accept","Authorization","redirect","status","json","items","find","G","uuid","name","selectors","c","l","id","label","routerLink","icon","imports","path","pathMatch","component","data","breadcrumb"],"sources":["webpack:///node_modules/node-fetch/browser.js","webpack:///src/extensions/79dd65be1b10de15f35ec97ed089446708764ccf2a7352e7c43ec3ffc50569b9/queries.graphql.ts","webpack:///src/extensions/79dd65be1b10de15f35ec97ed089446708764ccf2a7352e7c43ec3ffc50569b9/goedgepickt.component.ts","webpack:///src/extensions/79dd65be1b10de15f35ec97ed089446708764ccf2a7352e7c43ec3ffc50569b9/goedgepickt.module.ts"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import gql from 'graphql-tag';\n\nexport const updateGoedgepicktConfig = gql`\n  mutation updateGoedgepicktConfig($input: GoedgepicktConfigInput!) {\n    updateGoedgepicktConfig(input: $input) {\n      ... on GoedgepicktConfig {\n        enabled\n        apiKey\n        webshopUuid\n        orderWebhookKey\n        orderWebhookUrl\n        stockWebhookKey\n        stockWebhookUrl\n      }\n      ... on GoedgepicktError {\n        message\n      }\n    }\n  }\n`;\n\nexport const getGoedgepicktConfig = gql`\n  query goedgepicktConfig {\n    goedgepicktConfig {\n      enabled\n      apiKey\n      webshopUuid\n      orderWebhookKey\n      orderWebhookUrl\n      stockWebhookKey\n      stockWebhookUrl\n    }\n  }\n`;\n\nexport const runGoedgepicktFullSync = gql`\n  mutation runGoedgepicktFullSync {\n    runGoedgepicktFullSync\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport {\n  getGoedgepicktConfig,\n  runGoedgepicktFullSync,\n  updateGoedgepicktConfig,\n} from './queries.graphql';\nimport fetch from 'node-fetch';\nimport { GoedgepicktConfig } from './generated/graphql';\n\n@Component({\n  selector: 'goedgepickt-component',\n  template: `\n    <div class=\"clr-row\">\n      <div class=\"clr-col\">\n        <button\n          class=\"btn btn-secondary\"\n          [disabled]=\"loadingSync\"\n          (click)=\"fullSync()\"\n        >\n          Synchronize\n        </button>\n        <vdr-help-tooltip\n          content=\"Pushes products and pulls stocklevels from Goedgepickt\"\n        ></vdr-help-tooltip>\n        <form class=\"form\" [formGroup]=\"form\">\n          <section class=\"form-block\">\n            <vdr-form-field label=\"Enabled\" for=\"enabled\">\n              <input\n                type=\"checkbox\"\n                name=\"enabled\"\n                clrCheckbox\n                formControlName=\"enabled\"\n              />\n            </vdr-form-field>\n            <vdr-form-field label=\"apikey\" for=\"apiKey\">\n              <input id=\"apiKey\" type=\"text\" formControlName=\"apiKey\" />\n            </vdr-form-field>\n            <vdr-form-field label=\"webshopUuid\" for=\"webshopUuid\">\n              <input\n                id=\"webshopUuid\"\n                type=\"text\"\n                formControlName=\"webshopUuid\"\n              />\n            </vdr-form-field>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"save()\"\n              [disabled]=\"form.invalid || form.pristine\"\n            >\n              Save\n            </button>\n            <button class=\"btn btn-secondary\" (click)=\"test()\">Test</button>\n            <vdr-chip *ngIf=\"testFailed\" title=\"Failed\" colorType=\"error\">\n              <clr-icon shape=\"error-standard\"></clr-icon>\n              {{ testFailed }}\n            </vdr-chip>\n            <vdr-chip\n              *ngIf=\"testResultName\"\n              title=\"Success!\"\n              colorType=\"success\"\n            >\n              <clr-icon shape=\"check-circle\"></clr-icon>\n              {{ testResultName }}\n            </vdr-chip>\n          </section>\n          <section class=\"form-block\">\n            <p>\n              The following settings are set automatically and cannot be edited\n            </p>\n            <br />\n            <vdr-form-field\n              label=\"Order webhook\"\n              for=\"orderWebhookUrl\"\n              tooltip=\"Goedgepickt will call this URL for order status updates\"\n            >\n              <input\n                id=\"orderWebhookUrl\"\n                type=\"text\"\n                formControlName=\"orderWebhookUrl\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n            <vdr-form-field label=\"Webhook auth secret\" for=\"orderWebhookKey\">\n              <input\n                id=\"orderWebhookKey\"\n                type=\"text\"\n                formControlName=\"orderWebhookKey\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n          </section>\n          <section class=\"form-block\">\n            <vdr-form-field\n              label=\"Stock webhook\"\n              for=\"stockWebhookUrl\"\n              tooltip=\"Goedgepickt will call this URL for stocklevel updates\"\n            >\n              <input\n                id=\"stockWebhookUrl\"\n                type=\"text\"\n                formControlName=\"stockWebhookUrl\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n            <vdr-form-field label=\"Webhook auth secret\" for=\"stockWebhookKey\">\n              <input\n                id=\"stockWebhookKey\"\n                type=\"text\"\n                formControlName=\"stockWebhookKey\"\n                disabled=\"disabled\"\n              />\n            </vdr-form-field>\n          </section>\n        </form>\n      </div>\n    </div>\n  `,\n})\nexport class GoedgepicktComponent implements OnInit {\n  form: FormGroup;\n  testFailed?: string;\n  testResultName?: string;\n  loadingSync = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.form = this.formBuilder.group({\n      enabled: ['enabled'],\n      apiKey: ['your-api-key'],\n      webshopUuid: ['webshopUuid'],\n      orderWebhookUrl: ['orderWebhookUrl'],\n      orderWebhookKey: ['orderWebhookKey'],\n      stockWebhookUrl: ['stockWebhookUrl'],\n      stockWebhookKey: ['stockWebhookKey'],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(getGoedgepicktConfig)\n      .mapStream((d: any) => d.goedgepicktConfig)\n      .subscribe((config: GoedgepicktConfig) => {\n        this.form.controls['enabled'].setValue(config.enabled);\n        this.form.controls['apiKey'].setValue(config.apiKey);\n        this.form.controls['webshopUuid'].setValue(config.webshopUuid);\n        this.form.controls['orderWebhookUrl'].setValue(config.orderWebhookUrl);\n        this.form.controls['orderWebhookKey'].setValue(config.orderWebhookKey);\n        this.form.controls['stockWebhookUrl'].setValue(config.stockWebhookUrl);\n        this.form.controls['stockWebhookKey'].setValue(config.stockWebhookKey);\n      });\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.form.dirty) {\n        const formValue = this.form.value;\n        const { updateGoedgepicktConfig: result } = (await this.dataService\n          .mutate(updateGoedgepicktConfig, {\n            input: {\n              enabled: formValue.enabled,\n              apiKey: formValue.apiKey,\n              webshopUuid: formValue.webshopUuid,\n            },\n          })\n          .toPromise()) as any;\n        this.form.controls['enabled'].setValue(result.enabled);\n        this.form.controls['apiKey'].setValue(result.apiKey);\n        this.form.controls['webshopUuid'].setValue(result.webshopUuid);\n        this.form.controls['orderWebhookUrl'].setValue(result.orderWebhookUrl);\n        this.form.controls['orderWebhookKey'].setValue(result.orderWebhookKey);\n        this.form.controls['stockWebhookUrl'].setValue(result.stockWebhookUrl);\n        this.form.controls['stockWebhookKey'].setValue(result.stockWebhookKey);\n      }\n      this.form.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'GoedgepicktConfig',\n      });\n    } catch (e) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'GoedgepicktConfig',\n      });\n    }\n  }\n\n  async fullSync(): Promise<void> {\n    try {\n      this.loadingSync = true;\n      await this.dataService.mutate(runGoedgepicktFullSync).toPromise();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'products and stocklevels',\n      });\n    } catch (e) {\n      this.notificationService.error(e.message);\n    } finally {\n      this.loadingSync = false;\n    }\n  }\n\n  async test(): Promise<void> {\n    this.testFailed = undefined;\n    this.testResultName = undefined;\n    const result = await fetch(\n      'https://account.goedgepickt.nl/api/v1/webshops',\n      {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this.form.controls['apiKey'].value}`,\n        },\n        redirect: 'follow',\n      }\n    );\n    if (result.status !== 200) {\n      this.testFailed = 'Invalid ApiKey';\n      return;\n    }\n    const json = await result.json();\n    const webshop = json.items?.find(\n      (item: { uuid: string }) =>\n        item.uuid === this.form.controls['webshopUuid'].value\n    );\n    if (!webshop) {\n      this.testFailed = 'Apikey is correct, but cannot find webshopUuid';\n    } else {\n      this.testResultName = webshop.name;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { GoedgepicktComponent } from './goedgepickt.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: GoedgepicktComponent,\n        data: { breadcrumb: 'Goedgepickt' },\n      },\n    ]),\n  ],\n  providers: [\n    addNavMenuItem(\n      {\n        id: 'goedgepickt',\n        label: 'Goedgepickt',\n        routerLink: ['/extensions/goedgepickt'],\n        icon: 'cursor-hand-open',\n      },\n      'settings'\n    ),\n  ],\n  declarations: [GoedgepicktComponent],\n})\nexport class GoedgepicktModule {}\n"]}