{"version":3,"file":"438.9783889d5ca3e415.js","mappings":"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","names":["PromotionDetailComponent_button_10_Template","rf","ctx","_r11","i0","ctx_r10","create","ctx_r0","saveButtonEnabled","PromotionDetailComponent_ng_template_12_button_0_Template","_r14","ctx_r13","save","ctx_r12","PromotionDetailComponent_ng_template_12_Template","PromotionDetailComponent_vdr_card_17_Template","PromotionDetailComponent_vdr_card_18_Template","entity_r15","ngIf","PromotionDetailComponent_vdr_card_44_Template","ctx_r5","customFields","detailForm","get","PromotionDetailComponent_div_48_Template","_r19","$event","ctx_r18","removeCondition","condition_r16","$implicit","i_r17","index","ctx_r6","getConditionDefinition","PromotionDetailComponent_vdr_dropdown_50_button_6_Template","_r23","condition_r21","ctx_r22","addCondition","description","PromotionDetailComponent_vdr_dropdown_50_Template","ctx_r7","getAvailableConditions","PromotionDetailComponent_div_53_Template","_r27","ctx_r26","removeAction","action_r24","i_r25","ctx_r8","getActionDefinition","PromotionDetailComponent_vdr_dropdown_55_button_6_Template","_r31","action_r29","ctx_r30","addAction","PromotionDetailComponent_vdr_dropdown_55_Template","ctx_r9","getAvailableActions","_c0","PromotionListComponent_a_8_Template","PromotionListComponent_ng_template_19_Template","promotion_r11","item","id","PromotionListComponent_ng_template_22_Template","promotion_r12","createdAt","PromotionListComponent_ng_template_25_Template","promotion_r13","updatedAt","_c1","a1","PromotionListComponent_ng_template_28_Template","promotion_r14","name","PromotionListComponent_ng_template_31_vdr_chip_0_Template","PromotionListComponent_ng_template_31_vdr_chip_1_Template","PromotionListComponent_ng_template_31_Template","promotion_r15","enabled","PromotionListComponent_ng_template_34_Template","promotion_r18","couponCode","PromotionListComponent_ng_template_37_Template","promotion_r19","startsAt","PromotionListComponent_ng_template_40_Template","promotion_r20","endsAt","PromotionListComponent_ng_template_43_Template","promotion_r21","perCustomerUsageLimit","PromotionListComponent_vdr_dt2_custom_field_column_44_Template","customField_r22","sorts","GET_PROMOTION_DETAIL","gql","PROMOTION_FRAGMENT","PromotionDetailComponent","TypedBaseDetailComponent","constructor","changeDetector","dataService","formBuilder","notificationService","super","this","getCustomFieldConfig","group","Validators","required","conditions","array","actions","getCustomFieldsDefaults","allConditions","allActions","ngOnInit","init","promotion","getPromotionActionsAndConditions","single$","subscribe","data","promotionActions","promotionConditions","markForCheck","ngOnDestroy","destroy","filter","o","find","c","code","condition","a","action","dirty","valid","length","value","addOperation","markAsDirty","removeOperation","formArrayOf","key","input","getUpdatedPromotion","translations","languageCode","createPromotion","__typename","success","marker","entity","markAsPristine","router","navigate","relativeTo","route","error","message","err","combineLatest","entity$","languageCode$","pipe","take","mergeMap","paymentMethod","updatePromotion","formGroup","formValue","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","mapOperationsToInputs","setFormValues","currentTranslation","findTranslation","patchValue","forEach","setCustomFieldFormValues","operations","formValueOperations","map","i","arguments","Object","values","args","j","encodeConfigArgValue","operation","operationsArray","collection","findIndex","argsHash","reduce","output","arg","getConfigArgValue","getDefaultArgValue","push","control","argName","def","argDef","getDefaultConfigArgValue","Error","removeAt","splice","static","ɵfac","t","i1","i2","ɵcmp","type","selectors","features","decls","vars","consts","template","setLanguage","_r1","isNew$","availableLanguages$","dependencies","i3","i4","i5","styles","changeDetection","deletePromotionsBulkAction","createBulkDeleteAction","location","requiresPermission","Permission","DeletePromotion","getItemName","bulkDelete","ids","deletePromotions","res","assignPromotionsToChannelBulkAction","createBulkAssignToChannelAction","UpdatePromotion","bulkAssignToChannel","promotionIds","channelId","mutate","AssignPromotionsToChannelDocument","assignPromotionsToChannel","removePromotionsFromChannelBulkAction","createBulkRemoveFromChannelAction","DeleteCatalog","bulkRemoveFromChannel","RemovePromotionsFromChannelDocument","removePromotionsFromChannel","GET_PROMOTION_LIST","PromotionListComponent","TypedBaseListComponent","filters","createFilterCollection","addIdFilter","addDateFilters","addFilters","kind","label","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSorts","addCustomFieldSorts","configure","document","GetPromotionListDocument","getItems","promotions","setVariables","skip","createQueryOptions","searchTermControl","refreshListOnChanges","valueChanges","searchTerm","createFilterInput","sort","createSortInput","filterOperator","LogicalOperator","AND","contains","OR","options","setPageNumber","setItemsPerPage","contentLanguage$","items$","itemsPerPage$","totalItems$","currentPage$","selectionManager","i3$1","createRoutes","pageService","path","component","PageComponent","locationId","breadcrumb","children","getPageTabRoutes","link","promotionBreadcrumb","params","detailBreadcrumb","breadcrumbKey","getName","MarketingModule","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","query","GetPromotionDetailDocument","entityKey","getBreadcrumbs","ɵmod","ɵinj","providers","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-marketing.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { PROMOTION_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, createUpdatedTranslatable, findTranslation, encodeConfigArgValue, getConfigArgValue, getDefaultConfigArgValue, createBulkDeleteAction, Permission, createBulkAssignToChannelAction, AssignPromotionsToChannelDocument, createBulkRemoveFromChannelAction, RemovePromotionsFromChannelDocument, TypedBaseListComponent, GetPromotionListDocument, LogicalOperator, PageComponent, detailBreadcrumb, detailComponentWithResolver, GetPromotionDetailDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { combineLatest } from 'rxjs';\nimport { take, mergeMap, map } from 'rxjs/operators';\nimport * as i3 from '@clr/angular';\nimport * as i4 from '@angular/common';\nimport { AsyncPipe } from '@angular/common';\nimport * as i5 from '@ngx-translate/core';\nimport * as i3$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\n\nconst GET_PROMOTION_DETAIL = gql `\r\n    query GetPromotionDetail($id: ID!) {\r\n        promotion(id: $id) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\nclass PromotionDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('Promotion');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            description: '',\r\n            enabled: true,\r\n            couponCode: null,\r\n            perCustomerUsageLimit: null,\r\n            startsAt: null,\r\n            endsAt: null,\r\n            conditions: this.formBuilder.array([]),\r\n            actions: this.formBuilder.array([]),\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.conditions = [];\r\n        this.actions = [];\r\n        this.allConditions = [];\r\n        this.allActions = [];\r\n        this.customFields = this.getCustomFieldConfig('Promotion');\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.promotion.getPromotionActionsAndConditions().single$.subscribe(data => {\r\n            this.allActions = data.promotionActions;\r\n            this.allConditions = data.promotionConditions;\r\n            this.changeDetector.markForCheck();\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    getAvailableConditions() {\r\n        return this.allConditions.filter(o => !this.conditions.find(c => c.code === o.code));\r\n    }\r\n    getConditionDefinition(condition) {\r\n        return this.allConditions.find(c => c.code === condition.code);\r\n    }\r\n    getAvailableActions() {\r\n        return this.allActions.filter(o => !this.actions.find(a => a.code === o.code));\r\n    }\r\n    getActionDefinition(action) {\r\n        return this.allActions.find(c => c.code === action.code);\r\n    }\r\n    saveButtonEnabled() {\r\n        return !!(this.detailForm.dirty &&\r\n            this.detailForm.valid &&\r\n            (this.conditions.length !== 0 || this.detailForm.value.couponCode) &&\r\n            this.actions.length !== 0);\r\n    }\r\n    addCondition(condition) {\r\n        this.addOperation('conditions', condition);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    addAction(action) {\r\n        this.addOperation('actions', action);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    removeCondition(condition) {\r\n        this.removeOperation('conditions', condition);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    removeAction(action) {\r\n        this.removeOperation('actions', action);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    formArrayOf(key) {\r\n        return this.detailForm.get(key);\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const input = this.getUpdatedPromotion({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            startsAt: '',\r\n            endsAt: '',\r\n            name: '',\r\n            description: '',\r\n            couponCode: null,\r\n            perCustomerUsageLimit: null,\r\n            enabled: false,\r\n            conditions: [],\r\n            actions: [],\r\n            translations: [],\r\n        }, this.detailForm, this.languageCode);\r\n        this.dataService.promotion.createPromotion(input).subscribe(({ createPromotion }) => {\r\n            switch (createPromotion.__typename) {\r\n                case 'Promotion':\r\n                    this.notificationService.success(marker('common.notify-create-success'), {\r\n                        entity: 'Promotion',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', createPromotion.id], { relativeTo: this.route });\r\n                    break;\r\n                case 'MissingConditionsError':\r\n                    this.notificationService.error(createPromotion.message);\r\n                    break;\r\n            }\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Promotion',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([paymentMethod, languageCode]) => {\r\n            const input = this.getUpdatedPromotion(paymentMethod, this.detailForm, languageCode);\r\n            return this.dataService.promotion.updatePromotion(input);\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Promotion',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Promotion',\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedPromotion(promotion, formGroup, languageCode) {\r\n        const formValue = formGroup.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: promotion,\r\n            updatedFields: formValue,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: promotion.name || '',\r\n                description: promotion.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...input,\r\n            conditions: this.mapOperationsToInputs(this.conditions, formValue.conditions),\r\n            actions: this.mapOperationsToInputs(this.actions, formValue.actions),\r\n        };\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        const currentTranslation = findTranslation(entity, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name,\r\n            description: currentTranslation?.description,\r\n            enabled: entity.enabled,\r\n            couponCode: entity.couponCode,\r\n            perCustomerUsageLimit: entity.perCustomerUsageLimit,\r\n            startsAt: entity.startsAt,\r\n            endsAt: entity.endsAt,\r\n        });\r\n        entity.conditions.forEach(o => {\r\n            this.addOperation('conditions', o);\r\n        });\r\n        entity.actions.forEach(o => this.addOperation('actions', o));\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    mapOperationsToInputs(operations, formValueOperations) {\r\n        return operations.map((o, i) => ({\r\n            code: o.code,\r\n            arguments: Object.values(formValueOperations[i].args).map((value, j) => ({\r\n                name: o.args[j].name,\r\n                value: encodeConfigArgValue(value),\r\n            })),\r\n        }));\r\n    }\r\n    /**\r\n     * Adds a new condition or action to the promotion.\r\n     */\r\n    addOperation(key, operation) {\r\n        const operationsArray = this.formArrayOf(key);\r\n        const collection = key === 'conditions' ? this.conditions : this.actions;\r\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\r\n        if (index === -1) {\r\n            const argsHash = operation.args.reduce((output, arg) => ({\r\n                ...output,\r\n                [arg.name]: getConfigArgValue(arg.value) ?? this.getDefaultArgValue(key, operation, arg.name),\r\n            }), {});\r\n            operationsArray.push(this.formBuilder.control({\r\n                code: operation.code,\r\n                args: argsHash,\r\n            }));\r\n            collection.push({\r\n                code: operation.code,\r\n                args: operation.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\r\n            });\r\n        }\r\n    }\r\n    getDefaultArgValue(key, operation, argName) {\r\n        const def = key === 'conditions'\r\n            ? this.allConditions.find(c => c.code === operation.code)\r\n            : this.allActions.find(a => a.code === operation.code);\r\n        if (def) {\r\n            const argDef = def.args.find(a => a.name === argName);\r\n            if (argDef) {\r\n                return getDefaultConfigArgValue(argDef);\r\n            }\r\n        }\r\n        throw new Error(`Could not determine default value for \"argName\"`);\r\n    }\r\n    /**\r\n     * Removes a condition or action from the promotion.\r\n     */\r\n    removeOperation(key, operation) {\r\n        const operationsArray = this.formArrayOf(key);\r\n        const collection = key === 'conditions' ? this.conditions : this.actions;\r\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\r\n        if (index !== -1) {\r\n            operationsArray.removeAt(index);\r\n            collection.splice(index, 1);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: PromotionDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: PromotionDetailComponent, selector: \"vdr-promotion-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\">\\r\\n                <vdr-language-selector\\r\\n                    [disabled]=\\\"isNew$ | async\\\"\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"promotion-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdatePromotion'\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                <clr-toggle-wrapper>\\r\\n                    <input type=\\\"checkbox\\\" clrToggle name=\\\"enabled\\\" formControlName=\\\"enabled\\\" />\\r\\n                    <label>{{ 'common.enabled' | translate }}</label>\\r\\n                </clr-toggle-wrapper>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.starts-at' | translate\\\" for=\\\"startsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"startsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.ends-at' | translate\\\" for=\\\"endsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"endsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.coupon-code' | translate\\\" for=\\\"couponCode\\\">\\r\\n                        <input\\r\\n                            id=\\\"couponCode\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"couponCode\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n                        for=\\\"perCustomerUsageLimit\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"perCustomerUsageLimit\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"1\\\"\\r\\n                            max=\\\"999\\\"\\r\\n                            formControlName=\\\"perCustomerUsageLimit\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Promotion\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"promotion-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'marketing.conditions' | translate\\\" formArrayName=\\\"conditions\\\">\\r\\n                <div *ngFor=\\\"let condition of conditions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeCondition($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operation]=\\\"condition\\\"\\r\\n                        [operationDefinition]=\\\"getConditionDefinition(condition)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-condition' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let condition of getAvailableConditions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addCondition(condition)\\\"\\r\\n                            >\\r\\n                                {{ condition.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'marketing.actions' | translate\\\" formArrayName=\\\"actions\\\">\\r\\n                <div *ngFor=\\\"let action of actions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeAction($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [operation]=\\\"action\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operationDefinition]=\\\"getActionDefinition(action)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-action' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let action of getAvailableActions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addAction(action)\\\"\\r\\n                            >\\r\\n                                {{ action.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".item-wrap{white-space:normal}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.DatetimePickerComponent, selector: \"vdr-datetime-picker\", inputs: [\"yearRange\", \"weekStartDay\", \"timeGranularityInterval\", \"min\", \"max\", \"readonly\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i4.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: PromotionDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-promotion-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-align-items-center\\\">\\r\\n                <vdr-language-selector\\r\\n                    [disabled]=\\\"isNew$ | async\\\"\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"promotion-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdatePromotion'\\\"\\r\\n                    [disabled]=\\\"!saveButtonEnabled()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                <clr-toggle-wrapper>\\r\\n                    <input type=\\\"checkbox\\\" clrToggle name=\\\"enabled\\\" formControlName=\\\"enabled\\\" />\\r\\n                    <label>{{ 'common.enabled' | translate }}</label>\\r\\n                </clr-toggle-wrapper>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-rich-text-editor\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        formControlName=\\\"description\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                    ></vdr-rich-text-editor>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.starts-at' | translate\\\" for=\\\"startsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"startsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.ends-at' | translate\\\" for=\\\"endsAt\\\">\\r\\n                        <vdr-datetime-picker formControlName=\\\"endsAt\\\"></vdr-datetime-picker>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'marketing.coupon-code' | translate\\\" for=\\\"couponCode\\\">\\r\\n                        <input\\r\\n                            id=\\\"couponCode\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"couponCode\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n                        for=\\\"perCustomerUsageLimit\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"perCustomerUsageLimit\\\"\\r\\n                            [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"1\\\"\\r\\n                            max=\\\"999\\\"\\r\\n                            formControlName=\\\"perCustomerUsageLimit\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Promotion\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"promotion-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card [title]=\\\"'marketing.conditions' | translate\\\" formArrayName=\\\"conditions\\\">\\r\\n                <div *ngFor=\\\"let condition of conditions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeCondition($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operation]=\\\"condition\\\"\\r\\n                        [operationDefinition]=\\\"getConditionDefinition(condition)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-condition' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let condition of getAvailableConditions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addCondition(condition)\\\"\\r\\n                            >\\r\\n                                {{ condition.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'marketing.actions' | translate\\\" formArrayName=\\\"actions\\\">\\r\\n                <div *ngFor=\\\"let action of actions; index as i\\\">\\r\\n                    <vdr-configurable-input\\r\\n                        (remove)=\\\"removeAction($event)\\\"\\r\\n                        [position]=\\\"i\\\"\\r\\n                        [operation]=\\\"action\\\"\\r\\n                        [readonly]=\\\"!('UpdatePromotion' | hasPermission)\\\"\\r\\n                        [operationDefinition]=\\\"getActionDefinition(action)\\\"\\r\\n                        [formControlName]=\\\"i\\\"\\r\\n                    ></vdr-configurable-input>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <vdr-dropdown *vdrIfPermissions=\\\"'UpdatePromotion'\\\">\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            {{ 'marketing.add-action' | translate }}\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let action of getAvailableActions()\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                class=\\\"item-wrap\\\"\\r\\n                                (click)=\\\"addAction(action)\\\"\\r\\n                            >\\r\\n                                {{ action.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".item-wrap{white-space:normal}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst ASSIGN_PROMOTIONS_TO_CHANNEL = gql `\r\n    mutation AssignPromotionsToChannel($input: AssignPromotionsToChannelInput!) {\r\n        assignPromotionsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst REMOVE_PROMOTIONS_FROM_CHANNEL = gql `\r\n    mutation RemovePromotionsFromChannel($input: RemovePromotionsFromChannelInput!) {\r\n        removePromotionsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst deletePromotionsBulkAction = createBulkDeleteAction({\r\n    location: 'promotion-list',\r\n    requiresPermission: Permission.DeletePromotion,\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.promotion.deletePromotions(ids).pipe(map(res => res.deletePromotions)),\r\n});\r\nconst assignPromotionsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'promotion-list',\r\n    requiresPermission: Permission.UpdatePromotion,\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, promotionIds, channelId) => dataService\r\n        .mutate(AssignPromotionsToChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            promotionIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.assignPromotionsToChannel)),\r\n});\r\nconst removePromotionsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'promotion-list',\r\n    requiresPermission: Permission.DeleteCatalog,\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, promotionIds, channelId) => dataService\r\n        .mutate(RemovePromotionsFromChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            promotionIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.removePromotionsFromChannel)),\r\n});\n\nconst GET_PROMOTION_LIST = gql `\r\n    query GetPromotionList($options: PromotionListOptions) {\r\n        promotions(options: $options) {\r\n            items {\r\n                ...Promotion\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\nclass PromotionListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('Promotion');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilters([\r\n            {\r\n                name: 'startsAt',\r\n                type: { kind: 'dateRange' },\r\n                label: marker('marketing.starts-at'),\r\n                filterField: 'startsAt',\r\n            },\r\n            {\r\n                name: 'endsAt',\r\n                type: { kind: 'dateRange' },\r\n                label: marker('marketing.ends-at'),\r\n                filterField: 'endsAt',\r\n            },\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'boolean' },\r\n                label: marker('common.enabled'),\r\n                filterField: 'enabled',\r\n            },\r\n            {\r\n                name: 'name',\r\n                type: { kind: 'text' },\r\n                label: marker('common.name'),\r\n                filterField: 'name',\r\n            },\r\n            {\r\n                name: 'couponCode',\r\n                type: { kind: 'text' },\r\n                label: marker('marketing.coupon-code'),\r\n                filterField: 'couponCode',\r\n            },\r\n            {\r\n                name: 'desc',\r\n                type: { kind: 'text' },\r\n                label: marker('common.description'),\r\n                filterField: 'description',\r\n            },\r\n            {\r\n                name: 'usageLimit',\r\n                type: { kind: 'number' },\r\n                label: marker('marketing.per-customer-limit'),\r\n                filterField: 'perCustomerUsageLimit',\r\n            },\r\n        ])\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSorts([\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'startsAt' },\r\n            { name: 'endsAt' },\r\n            { name: 'name' },\r\n            { name: 'couponCode' },\r\n            { name: 'perCustomerUsageLimit' },\r\n        ])\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetPromotionListDocument,\r\n            getItems: data => data.promotions,\r\n            setVariables: (skip, take) => this.createQueryOptions(skip, take, this.searchTermControl.value),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    createQueryOptions(skip, take, searchTerm) {\r\n        const filter = this.filters.createFilterInput();\r\n        const sort = this.sorts.createSortInput();\r\n        let filterOperator = LogicalOperator.AND;\r\n        if (searchTerm) {\r\n            filter.couponCode = { contains: searchTerm };\r\n            filter.name = { contains: searchTerm };\r\n            filterOperator = LogicalOperator.OR;\r\n        }\r\n        return {\r\n            options: {\r\n                skip,\r\n                take,\r\n                filter,\r\n                filterOperator,\r\n                sort,\r\n            },\r\n        };\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: PromotionListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: PromotionListComponent, selector: \"vdr-promotion-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                   [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                   [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                   (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n               ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['./create']\\\" *vdrIfPermissions=\\\"'CreatePromotion'\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'marketing.create-new-promotion' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-data-table-2\\r\\n    id=\\\"promotion-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"promotion-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'marketing.search-by-name-or-coupon-code' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">{{ promotion.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', promotion.id]\\\"\\r\\n                ><span> {{ promotion.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"promotion.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!promotion.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.coupon-code' | translate\\\" [sort]=\\\"sorts.get('couponCode')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.couponCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.starts-at' | translate\\\" [sort]=\\\"sorts.get('startsAt')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.startsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.ends-at' | translate\\\" [sort]=\\\"sorts.get('endsAt')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.endsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n        [sort]=\\\"sorts.get('perCustomerUsageLimit')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.perCustomerUsageLimit }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-form{padding:0}.search-input{margin:6px 8px 0 0;min-width:200px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i4.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: PromotionListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-promotion-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                   [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                   [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                   (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n               ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"customer-list\\\"></vdr-action-bar-items>\\r\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['./create']\\\" *vdrIfPermissions=\\\"'CreatePromotion'\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'marketing.create-new-promotion' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<vdr-data-table-2\\r\\n    id=\\\"promotion-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"promotion-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'marketing.search-by-name-or-coupon-code' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">{{ promotion.id }}</ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', promotion.id]\\\"\\r\\n                ><span> {{ promotion.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"promotion.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!promotion.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.coupon-code' | translate\\\" [sort]=\\\"sorts.get('couponCode')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.couponCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.starts-at' | translate\\\" [sort]=\\\"sorts.get('startsAt')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.startsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'marketing.ends-at' | translate\\\" [sort]=\\\"sorts.get('endsAt')\\\">\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.endsAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'marketing.per-customer-limit' | translate\\\"\\r\\n        [sort]=\\\"sorts.get('perCustomerUsageLimit')\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n    >\\r\\n        <ng-template let-promotion=\\\"item\\\">\\r\\n            {{ promotion.perCustomerUsageLimit }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".search-form{padding:0}.search-input{margin:6px 8px 0 0;min-width:200px}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nconst createRoutes = (pageService) => [\r\n    {\r\n        path: 'promotions',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'promotion-list',\r\n            breadcrumb: marker('breadcrumb.promotions'),\r\n        },\r\n        children: pageService.getPageTabRoutes('promotion-list'),\r\n    },\r\n    {\r\n        path: 'promotions/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'promotion-detail',\r\n            breadcrumb: { label: marker('breadcrumb.promotions'), link: ['../', 'promotions'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('promotion-detail'),\r\n    },\r\n];\r\nfunction promotionBreadcrumb(data, params) {\r\n    return detailBreadcrumb({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.promotions',\r\n        getName: promotion => promotion.name,\r\n        route: 'promotions',\r\n    });\r\n}\n\nclass MarketingModule {\r\n    constructor(bulkActionRegistryService, pageService) {\r\n        this.bulkActionRegistryService = bulkActionRegistryService;\r\n        bulkActionRegistryService.registerBulkAction(assignPromotionsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removePromotionsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deletePromotionsBulkAction);\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'promotion-list',\r\n            tab: marker('breadcrumb.promotions'),\r\n            route: '',\r\n            component: PromotionListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'promotion-detail',\r\n            tab: marker('marketing.promotion'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: PromotionDetailComponent,\r\n                query: GetPromotionDetailDocument,\r\n                entityKey: 'promotion',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('marketing.create-new-promotion'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: MarketingModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: MarketingModule, declarations: [PromotionListComponent, PromotionDetailComponent], imports: [SharedModule, i3$1.RouterModule, SharedModule, AsyncPipe, SharedModule] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: MarketingModule, providers: [\r\n            {\r\n                provide: ROUTES,\r\n                useFactory: (pageService) => createRoutes(pageService),\r\n                multi: true,\r\n                deps: [PageService],\r\n            },\r\n        ], imports: [SharedModule, RouterModule.forChild([]), SharedModule, SharedModule] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: MarketingModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [SharedModule, RouterModule.forChild([]), SharedModule, AsyncPipe, SharedModule],\r\n                    providers: [\r\n                        {\r\n                            provide: ROUTES,\r\n                            useFactory: (pageService) => createRoutes(pageService),\r\n                            multi: true,\r\n                            deps: [PageService],\r\n                        },\r\n                    ],\r\n                    declarations: [PromotionListComponent, PromotionDetailComponent],\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }]; } });\n\n// This file was generated by the build-public-api.ts script\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { GET_PROMOTION_DETAIL, GET_PROMOTION_LIST, MarketingModule, PromotionDetailComponent, PromotionListComponent, assignPromotionsToChannelBulkAction, createRoutes, deletePromotionsBulkAction, promotionBreadcrumb, removePromotionsFromChannelBulkAction };\n"],"x_google_ignoreList":[0]}