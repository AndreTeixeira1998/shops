{"version":3,"mappings":"wnOAEaA,EAAuBC,KAAvBD,wJAQAE,EAAoBD,KAApBC,kHCkBNC,aAGLC,WACUC,EACEC,EACFC,EACAC,aAHAC,mBACEA,mBACFA,sBACAA,2BAERA,KAAKC,KAAOD,KAAKE,YAAYC,MAAM,CACjCC,OAAQ,CAAC,oDAIPC,8JACEL,KAAKM,YACRC,MAAMd,GACNe,UAAWZ,mBAAWA,EAAEa,iBACxBC,UAAWd,mBACVI,EAAKC,KAAKU,SAASP,OAAUQ,SAAShB,EAAOQ,UAL7CC,kEASAQ,sJAEEb,KAAKC,KAAKa,MAFZD,gBAG4BE,OAAtBnB,EAAYI,KAAKC,KAAKc,MAH5BF,SAIMb,KAAKM,YACRU,OAAOzB,EAAsB,CAAE0B,MAAO,CAAEb,OAAQR,EAAUQ,UAC1Dc,YANHL,OAQFb,KAAKC,KAAKkB,iBACVnB,KAAKoB,eAAeC,eACpBrB,KAAKsB,oBAAoBC,QAAQ,+BAAgC,CAC/DC,OAAQ,mBAXRX,gDAcFb,KAAKsB,oBAAoBG,MAAM,6BAA8B,CAC3DD,OAAQ,mBAfRX,gEAeQnB,sCAtCHA,GAAiBgC,6EAAjBhC,EAAiBiC,+SApB1BD,iBACEA,iBACEA,kBACEA,qBACEA,4BACEA,mBACFA,QACAA,oBAEEA,gCAAS7B,WAGT6B,kBACFA,QACFA,QACFA,QACFA,QACFA,eAfuBA,mCAQbA,yICYPE,mEAAMA,6DAbA,IACTC,OACE,CACEC,GAAI,WACJC,MAAO,WACPC,WAAY,CAAC,wBACbC,KAAM,oBAER,aAEHC,SArBQ,CACPL,MACAM,cAAsB,CACpB,CACEC,KAAM,GACNC,UAAW,OACXC,UAAW5C,EACX6C,KAAM,CAAEC,WAAY","names":["y","u","d","c","constructor","t","a","m","h","this","form","formBuilder","group","apiKey","ngOnInit","dataService","query","mapStream","myparcelConfig","subscribe","controls","setValue","save","dirty","value","mutate","input","toPromise","markAsPristine","changeDetector","markForCheck","notificationService","success","entity","error","e","selectors","n","r","id","label","routerLink","icon","imports","f","path","pathMatch","component","data","breadcrumb"],"sources":["webpack:///src/extensions/e64359fa5eb1f68e10c2d8520afbd0a362473168e6d648473cff3b9e86841c7f/queries.ts","webpack:///src/extensions/e64359fa5eb1f68e10c2d8520afbd0a362473168e6d648473cff3b9e86841c7f/myparcel.component.ts","webpack:///src/extensions/e64359fa5eb1f68e10c2d8520afbd0a362473168e6d648473cff3b9e86841c7f/myparcel.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const updateMyparcelConfig = gql`\n  mutation updateMyparcelConfig($input: MyparcelConfigInput!) {\n    updateMyparcelConfig(input: $input) {\n      apiKey\n    }\n  }\n`;\n\nexport const getMyparcelConfig = gql`\n  query myparcelConfig {\n    myparcelConfig {\n      apiKey\n    }\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport { getMyparcelConfig, updateMyparcelConfig } from './queries';\n\n@Component({\n  selector: 'myparcel-component',\n  template: `\n    <div class=\"clr-row\">\n      <div class=\"clr-col\">\n        <form class=\"form\" [formGroup]=\"form\">\n          <section class=\"form-block\">\n            <vdr-form-field label=\"MyParcel apikey\" for=\"apiKey\">\n              <input id=\"apiKey\" type=\"text\" formControlName=\"apiKey\" />\n            </vdr-form-field>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"save()\"\n              [disabled]=\"form.invalid || form.pristine\"\n            >\n              Save\n            </button>\n          </section>\n        </form>\n      </div>\n    </div>\n  `,\n})\nexport class MyparcelComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.form = this.formBuilder.group({\n      apiKey: ['your-api-key'],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(getMyparcelConfig)\n      .mapStream((d: any) => d.myparcelConfig)\n      .subscribe((config) =>\n        this.form.controls['apiKey'].setValue(config.apiKey)\n      );\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.form.dirty) {\n        const formValue = this.form.value;\n        await this.dataService\n          .mutate(updateMyparcelConfig, { input: { apiKey: formValue.apiKey } })\n          .toPromise();\n      }\n      this.form.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'MyparcelConfig',\n      });\n    } catch (e) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'MyparcelConfig',\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { MyparcelComponent } from './myparcel.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: MyparcelComponent,\n        data: { breadcrumb: 'MyParcel' },\n      },\n    ]),\n  ],\n  providers: [\n    addNavMenuItem(\n      {\n        id: 'myparcel',\n        label: 'MyParcel',\n        routerLink: ['/extensions/myparcel'],\n        icon: 'cursor-hand-open',\n      },\n      'settings'\n    ),\n  ],\n  declarations: [MyparcelComponent],\n})\nexport class MyparcelModule {}\n"]}