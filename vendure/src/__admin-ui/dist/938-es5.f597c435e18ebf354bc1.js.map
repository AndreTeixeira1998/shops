{"version":3,"mappings":"2wOAEaA,EAAkCC,yPAalCC,EAAyBD,2NCyC/BE,aAKLC,WACUC,EACEC,EACFC,EACAC,aAHAC,mBACEA,mBACFA,sBACAA,2BAERA,KAAKC,KAAOD,KAAKE,YAAYC,MAAM,CACjCC,QAAS,CAAC,WACVC,SAAU,CAAC,YACXC,QAAS,CAAC,WACVC,QAAS,CAAC,WACVC,QAAS,CAAC,WACVC,cAAe,CAAC,mBA6CmCA,OAzCjDC,yLACEV,KAAKW,YACRC,MAAMnB,GACNoB,UAAWjB,mBAAgBA,EAAOkB,oBAClCC,UAAWnB,mBAAWI,EAAKgB,UAAUpB,qDAGpCqB,4KAEEjB,KAAKC,KAAKiB,sBAEqBrB,OAD3BD,EAAYI,KAAKC,KAAKkB,eACsBnB,KAAKW,YACpDS,OAGC7B,EAAiC,CACjC8B,MAAKC,iBACA1B,KAGN2B,4BAT8B1B,IAAzB2B,wBAURxB,KAAKgB,UAAUnB,UAEjBG,KAAKC,KAAKwB,iBACVzB,KAAK0B,eAAeC,eACpB3B,KAAK4B,oBAAoBC,QAAQ,+BAAgC,CAC/DC,OAAQ,yEAGV9B,KAAK4B,oBAAoBG,MAAM,6BAA8B,CAC3DD,OAAQ,iFAKNd,gCAAUpB,GAChBI,KAAKC,KAAK+B,SAAS5B,QAAW6B,SAAe,MAANrC,WAAQQ,SAC/CJ,KAAKC,KAAK+B,SAAS3B,SAAY4B,SAAe,MAANrC,WAAQS,UAChDL,KAAKC,KAAK+B,SAAS1B,QAAW2B,SAAe,MAANrC,WAAQU,SAC/CN,KAAKC,KAAK+B,SAASzB,QAAW0B,SAAe,MAANrC,WAAQW,SAC/CP,KAAKC,KAAK+B,SAASxB,QAAWyB,SAAe,MAANrC,WAAQY,SAC/CR,KAAKC,KAAK+B,SAASvB,cAAiBwB,SAAe,MAANrC,WAAQa,qBA9DlD,GA8DkDA,sCA9D5Cf,GAAoBwC,6EAApBxC,EAAoByC,oyBAxC7BD,kBACEA,qBACEA,4BACEA,mBAMFA,QACAA,4BACEA,mBACFA,QACAA,4BACEA,mBACFA,QACAA,4BACEA,mBACFA,QACAA,8BACEA,qBACFA,QACAA,8BACEA,qBAKFA,QACAA,sBAEEA,gCAASrC,WAGTqC,mBACFA,QACFA,QACFA,eArCmBA,0BAgCbA,iJC5BH,uEAAME,6DAHA,GAAEC,SAXJ,CACPC,MACAC,cAAsB,CACpB,CACEC,KAAM,GACNC,UAAW,OACXC,UAAWhD,EACXiD,KAAM,CAAEC,WAAY","names":["h","m","p","u","constructor","o","r","l","g","this","form","formBuilder","group","enabled","username","secret1","secret2","account","contraAccount","ngOnInit","dataService","query","mapStream","eBoekhoudenConfig","subscribe","setValues","save","dirty","value","mutate","input","Object","toPromise","updateEBoekhoudenConfig","markAsPristine","changeDetector","markForCheck","notificationService","success","entity","error","controls","setValue","e","selectors","c","imports","i","f","path","pathMatch","component","data","breadcrumb"],"sources":["webpack:///src/extensions/07d8162aed6c2204cc1f7aedb24379e6c39b4e4b4f45c351ccd6b29f2803008d/queries.graphql.ts","webpack:///src/extensions/07d8162aed6c2204cc1f7aedb24379e6c39b4e4b4f45c351ccd6b29f2803008d/e-boekhouden.component.ts","webpack:///src/extensions/07d8162aed6c2204cc1f7aedb24379e6c39b4e4b4f45c351ccd6b29f2803008d/e-boekhouden.module.ts"],"sourcesContent":["import gql from 'graphql-tag';\n\nexport const updateEBoekhoudenConfigMutation = gql`\n  mutation updateEBoekhoudenConfig($input: EBoekhoudenConfigInput!) {\n    updateEBoekhoudenConfig(input: $input) {\n      enabled\n      username\n      secret1\n      secret2\n      account\n      contraAccount\n    }\n  }\n`;\n\nexport const eBoekhoudenConfigQuery = gql`\n  query eBoekhoudenConfig {\n    eBoekhoudenConfig {\n      enabled\n      username\n      secret1\n      secret2\n      account\n      contraAccount\n    }\n  }\n`;\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DataService, NotificationService } from '@vendure/admin-ui/core';\nimport {\n  eBoekhoudenConfigQuery,\n  updateEBoekhoudenConfigMutation,\n} from './queries.graphql';\nimport {\n  EBoekhoudenConfig,\n  UpdateEBoekhoudenConfigMutation,\n  UpdateEBoekhoudenConfigMutationVariables,\n} from './generated/graphql';\n\n@Component({\n  selector: 'e-boekhouden-component',\n  template: `\n    <form class=\"form\" [formGroup]=\"form\">\n      <section class=\"form-block\">\n        <vdr-form-field label=\"Enabled\" for=\"enabled\">\n          <input\n            type=\"checkbox\"\n            name=\"enabled\"\n            clrCheckbox\n            formControlName=\"enabled\"\n          />\n        </vdr-form-field>\n        <vdr-form-field label=\"Username\" for=\"username\">\n          <input id=\"username\" type=\"text\" formControlName=\"username\" />\n        </vdr-form-field>\n        <vdr-form-field label=\"Secret 1\" for=\"secret1\">\n          <input id=\"secret1\" type=\"text\" formControlName=\"secret1\" />\n        </vdr-form-field>\n        <vdr-form-field label=\"Secret 2\" for=\"secret2\">\n          <input id=\"secret2\" type=\"text\" formControlName=\"secret2\" />\n        </vdr-form-field>\n        <vdr-form-field label=\"Account\" for=\"account\">\n          <input id=\"account\" type=\"text\" formControlName=\"account\" />\n        </vdr-form-field>\n        <vdr-form-field label=\"Contra account\" for=\"contraAccount\">\n          <input\n            id=\"contraAccount\"\n            type=\"text\"\n            formControlName=\"contraAccount\"\n          />\n        </vdr-form-field>\n        <button\n          class=\"btn btn-primary\"\n          (click)=\"save()\"\n          [disabled]=\"form.invalid || form.pristine\"\n        >\n          Save\n        </button>\n      </section>\n    </form>\n  `,\n})\nexport class EBoekhoudenComponent implements OnInit {\n  form: FormGroup;\n  testFailed?: string;\n  testResultName?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    protected dataService: DataService,\n    private changeDetector: ChangeDetectorRef,\n    private notificationService: NotificationService\n  ) {\n    this.form = this.formBuilder.group({\n      enabled: ['enabled'],\n      username: ['username'],\n      secret1: ['secret1'],\n      secret2: ['secret2'],\n      account: ['account'],\n      contraAccount: ['contraAccount'],\n    });\n  }\n\n  async ngOnInit(): Promise<void> {\n    await this.dataService\n      .query(eBoekhoudenConfigQuery)\n      .mapStream((result: any) => result.eBoekhoudenConfig)\n      .subscribe((config) => this.setValues(config));\n  }\n\n  async save(): Promise<void> {\n    try {\n      if (this.form.dirty) {\n        const formValue = this.form.value;\n        const { updateEBoekhoudenConfig: result } = await this.dataService\n          .mutate<\n            UpdateEBoekhoudenConfigMutation,\n            UpdateEBoekhoudenConfigMutationVariables\n          >(updateEBoekhoudenConfigMutation, {\n            input: {\n              ...formValue,\n            },\n          })\n          .toPromise();\n        this.setValues(result);\n      }\n      this.form.markAsPristine();\n      this.changeDetector.markForCheck();\n      this.notificationService.success('common.notify-update-success', {\n        entity: 'Eboekhouden config',\n      });\n    } catch (e) {\n      this.notificationService.error('common.notify-update-error', {\n        entity: 'Eboekhouden config',\n      });\n    }\n  }\n\n  private setValues(values?: EBoekhoudenConfig | null): void {\n    this.form.controls['enabled'].setValue(values?.enabled);\n    this.form.controls['username'].setValue(values?.username);\n    this.form.controls['secret1'].setValue(values?.secret1);\n    this.form.controls['secret2'].setValue(values?.secret2);\n    this.form.controls['account'].setValue(values?.account);\n    this.form.controls['contraAccount'].setValue(values?.contraAccount);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { addNavMenuItem, SharedModule } from '@vendure/admin-ui/core';\nimport { EBoekhoudenComponent } from './e-boekhouden.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        pathMatch: 'full',\n        component: EBoekhoudenComponent,\n        data: { breadcrumb: 'e-Boekhouden' },\n      },\n    ]),\n  ],\n  providers: [],\n  declarations: [EBoekhoudenComponent],\n})\nexport class EBoekhoudenModule {}\n"]}