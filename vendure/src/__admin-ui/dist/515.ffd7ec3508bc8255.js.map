{"version":3,"file":"515.ffd7ec3508bc8255.js","mappings":"qhGAEO,SAASA,GAAYC,EAAiBC,GACzC,SAAOC,MAAWD,IAAc,EAAIE,KAAU,IAAMH,EAAiBC,IAAc,EAAIE,KAAU,IAAMH,EAC3G,2QCqBA,SAAAI,GAAAC,EAAAC,GAAA,KAAAD,EAAA,OAAAE,EA2NoGC,cAAE,cAAFA,MAAE,mBAAFA,MAAED,GAAA,MAAAE,EAAFD,QAAE,OAAFA,MA+L0kDC,EAAAC,OAAM,GA/LhlDF,MAAE,GAAFA,MAAE,eAAFA,OA+L6xD,MAAAH,EAAA,OAAAM,EA/L7xDH,cAAE,WAAAG,EAAAC,WAAAC,UAAAF,EAAAC,WAAAE,SAAFN,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBA+LkxD,WAAAO,GAAAV,EAAAC,GAAuqE,GAAvqE,EAAAD,IA/LpxDG,MAAE,MAAFA,MAAE,iCAAFA,MAAE,mBAAFA,SA+L27H,EAAAH,EAAA,OAAAW,EA/L37HR,QAAES,UAAAC,EAAFV,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAAU,EAAAC,wBAAFX,CA+L+qH,wBAAAQ,EAAAI,IAAA,gBA/L/qHZ,CA+L+qH,YA/L/qHA,MAAE,IAAAU,EAAAG,kBA+L6qH,WAAAC,GAAAjB,EAAAC,GAA+nC,GAA/nC,EAAAD,GA/L/qHG,MAAE,GA+L4yJ,EAAAH,EAAA,OAAAkB,EAAAjB,EAAAkB,KA/L9yJhB,MAAE,IAAAe,EAAAE,MAAAC,GAAA,IA+L4yJ,WAAAC,GAAAtB,EAAAC,GA/L5yJ,GA+L4yJ,EAAAD,IA/L9yJG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAAuB,EAAAtB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAoB,EAAAH,MAAAI,UAAA,aA+LkqK,WAAAC,GAAAzB,EAAAC,GA/LlqK,GA+LkqK,EAAAD,IA/LpqKG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA0B,EAAAzB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAuB,EAAAN,MAAAO,UAAA,aA+LwhL,WAAAC,GAAA5B,EAAAC,GA/LxhL,GA+LwhL,EAAAD,IA/L1hLG,MAAE,cAAFA,MAAE,sBAAAH,EAAA,OAAA6B,EAAA5B,EAAAkB,KAAAW,EAAF3B,MAAE,GAAFA,MAAE,cAAA0B,EAAAd,IAAA,QAAFZ,CA+Lw7L,YA/Lx7LA,MAAE,IAAA2B,EAAAd,kBA+Ls7L,WAAAe,GAAA/B,EAAAC,GAAmf,GAAnf,EAAAD,GA/Lx7LG,MAAE,cA+Ly6M,EAAAH,EAAA,OAAAgC,EAAA/B,EAAAkB,KA/L36MhB,MAAE,cAAA6B,EAAAjB,IAAA,QA+Ls6M,WAAAkB,GAAAjC,EAAAC,GA/Lt6M,GA+Ls6M,EAAAD,IA/Lx6MG,MAAE,iCAAFA,MAAE,sBAAAH,EAAA,OAAAkC,EAAAjC,EAAAkB,KAAAgB,EAAFhC,MAAE,GAAFA,MAAE,eAAAgC,EAAAC,mBAAFjC,CA+LygO,aA/LzgOA,CA+LygO,wBAAA+B,EAAAnB,IAAA,gBA/LzgOZ,CA+LygO,YA/LzgOA,MAAE,IAAAgC,EAAAnB,kBA+LugO,WAAAqB,GAAArC,EAAAC,GAAA,KAAAD,EAAA,OAAAsC,EA/LzgOnC,cAAE,yBAAFA,MAAE,sBAAAoC,GAAFpC,MAAEmC,GAAA,MAAA3B,EAAFR,QAAES,UAAA4B,EAAFrC,MAAE,UAAFA,MAAEqC,EAAAC,mBAAA9B,EAAAS,MAAAC,IAAAqB,YAAAH,EA+Li8I,GA/Ln8IpC,MAAE,uBAAFA,MAAE,eAAFA,MAAE,EAAAc,GAAA,mBAAFd,cAAE,uBAAFA,MAAE,eAAFA,MAAE,EAAAmB,GAAA,mBAAFnB,cAAE,uBAAFA,MAAE,eAAFA,MAAE,EAAAsB,GAAA,mBAAFtB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAyB,GAAA,mBAAFzB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAA4B,GAAA,mBAAF5B,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAA8B,GAAA,mBAAF9B,SA+L65O,MAAAH,EAAA,OAAA2C,EAAA1C,EAAA2C,KAAAjC,EA/L75OR,QAAES,UAAAiC,EAAF1C,MAAE,GAAFA,MAAE,QAAAwC,EAAFxC,CA+LmpI,qBAAA0C,EAAAJ,mBAAA9B,EAAAS,MAAAC,IAAA,KAAAwB,EAAAJ,mBAAA9B,EAAAS,MAAAC,IAAAyB,aA/LnpI3C,CA+LmpI,oBAAA0C,EAAAJ,mBAAA9B,EAAAS,MAAAC,IAAA,KAAAwB,EAAAJ,mBAAA9B,EAAAS,MAAAC,IAAAqB,YA/LnpIvC,CA+LmpI,aAAAwC,EAAAI,QA/LnpI5C,MAAE,GAAFA,MAAE,UAAFA,MAAE,kBAAFA,CA+L0mJ,sBA/L1mJA,MAAE,GAAFA,MAAE,UAAFA,MAAE,0BAAFA,CA+Lk8J,sBA/Ll8JA,MAAE,GAAFA,MAAE,UAAFA,MAAE,0BAAFA,CA+LwzK,sBA/LxzKA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CA+LwqL,eA/LxqLA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CA+LsuM,eA/LtuMA,MAAE,GAAFA,MAAE,UAAFA,MAAE,8BAAFA,CA+LioN,sBAAA0C,EAAAT,mBAAAW,OAAA,WAAAC,GAAAhD,EAAAC,GAAs2B,GAAt2B,EAAAD,IA/LjoNG,MAAE,iBAAFA,MAAE,6BAAFA,MAAE,WAAFA,CA+Lq8E,uBA/Lr8EA,MAAE,eAAFA,MAAE,cAAFA,MAAE,mBAAFA,cAAE,uBAAFA,MAAE,eAAFA,MAAE,cAAFA,MAAE,oBAAFA,gBAAE,GAAAO,GAAA,uBAAFP,MAAE,GAAAkC,GAAA,6BAAFlC,SA+Lu+O,EAAAH,EAAA,OAAAW,EAAAV,EAAAW,UAAAqC,EAAAhD,EAAAiD,MAAAC,EA/Lv+OhD,MAAE,GAAFA,MAAE,gBAAA8C,EAAF9C,CA+LiuE,QAAAQ,EAAAS,MAAAgC,MA/LjuEjD,MAAE,GAAFA,MAAE,SAAAQ,EAAAS,OAAFjB,MAAE,GAAFA,MAAE,QAAFA,MAAE,qBAAFA,MAAE,GAAFA,MAAE,aAAA8C,EAAF9C,CA+LkoF,YA/LloFA,MAAE,KAAAgD,EAAAnC,mBAAFb,MAAE,GAAFA,MAAE,QAAFA,MAAE,qBAAFA,MAAE,GAAFA,MAAE,aAAA8C,EAAF9C,CA+LilG,YA/LjlGA,MAAE,MAAAgD,EAAAnC,mBAAFb,MAAE,GAAFA,MAAE,OAAAgD,EAAArC,wBAAAiC,QAAF5C,MAAE,GAAFA,MAAE,OAAAgD,EAAAE,WAAA1C,GA+LslI,WAAA2C,GAAAtD,EAAAC,GAAq6G,GAAr6G,EAAAD,IA/LxlIG,MAAE,WAAFA,CA+LghE,WA/LhhEA,MAAE,EAAA6C,GAAA,oBAAF7C,WA+L6/O,EAAAH,EAAA,OAAAuD,EA/L7/OpD,cAAE,YAAAoD,EAAAhD,YAAFJ,MAAE,GAAFA,MAAE,UAAAoD,EAAAC,kBA+LsqE,WAAAC,GAAAzD,EAAAC,GAAA,EAAAD,IA/LxqEG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,MAAE,IAAFA,MAAE,gDAoOiN,UAAAuD,GAAA1D,EAAAC,GAAA,KAAAD,EAAA,OAAAE,EApOnNC,cAAE,cAAFA,MAAE,mBAAFA,MAAED,GAAA,MAAAE,EAAFD,QAAE,OAAFA,MAoO8zBC,EAAAuD,SAAQ,GApOt0BxD,MAAE,GAAFA,MAAE,eAAFA,cAAE,cAAFA,MAAE,mBAAFA,MAAED,GAAA,MAAA0D,EAAFzD,QAAE,OAAFA,MAoO65ByD,EAAAC,UAAS,GApOt6B1D,MAAE,GAAFA,MAAE,eAAFA,OAoO8hC,MAAAH,EAAA,OAAAuD,EApO9hCpD,cAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,WAAAoD,EAAAO,KAAArD,SAAFN,MAAE,GAAFA,MAAE,IAAFA,MAAE,0BAoOmhC,WAAA4D,GAAA/D,EAAAC,GAAA,EAAAD,IApOrhCG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,MAAE,IAAFA,MAAE,2CA0SmM,UAAA6D,GAAAhE,EAAAC,GAAwb,GAAxb,EAAAD,IA1SrMG,MAAE,sBAAFA,MAAE,kBAAFA,SA0S6nB,EAAAH,EAAA,OAAAiE,EAAAhE,EAAAW,UA1S7nBT,MAAE,QAAA8D,EAAAC,MAAF/D,MAAE,GAAFA,MAAE,QAAA8D,EAAAE,QAAFhE,CA0Smd,kBAAA8D,EAAAb,KAAA,WAAAgB,GAAApE,EAAAC,GAAA,EAAAD,IA1SndG,MAAE,iBAAFA,CA0S8xB,mBA1S9xBA,CA0S8xB,aA1S9xBA,MAAE,GAAFA,MAAE,eAAFA,aA0Sk+B,EAAAH,IA1Sl+BG,MAAE,uBAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,2DA0Sy9B,UAAAkE,GAAArE,EAAAC,GAAsf,GAAtf,EAAAD,IA1S39BG,MAAE,WAAFA,CA0S+lC,iBA1S/lCA,CA0S+lC,mBA1S/lCA,CA0S+lC,aA1S/lCA,MAAE,GAAFA,MAAE,eAAFA,eA0Si9C,EAAAH,EAAA,OAAAsE,EA1Sj9CnE,cAAE,GAAFA,MAAE,uBAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,2CAAAmE,EAAAC,gBAAAL,KAAA,KAAAI,EAAAC,gBAAAC,IAAA,KA0Sw8C,WAAAC,GAAAzE,EAAAC,GAAA,KAAAD,EAAA,OAAA0E,EA1S18CvE,cAAE,eAAFA,MAAE,mBAAFA,MAAEuE,GAAA,MAAAC,EAAFxE,QAAE,OAAFA,MA0S8rEwE,EAAAhB,SAAQ,GA1StsExD,MAAE,GAAFA,MAAE,eAAFA,cAAE,eAAFA,MAAE,mBAAFA,MAAEuE,GAAA,MAAA7D,EAAFV,QAAE,OAAFA,MA0S6xEU,EAAAgD,UAAS,GA1StyE1D,MAAE,GAAFA,MAAE,eAAFA,OA0Si+E,MAAAH,EAAA,OAAA4D,EA1Sj+EzD,cAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,WAAAyD,EAAAE,KAAArD,SAAAmD,EAAAW,iBAAA,IAAAX,EAAAgB,QAAAC,aAAA9B,QAAF5C,MAAE,GAAFA,MAAE,IAAFA,MAAE,0BA0Ss9E,QAAA2E,GAAA,aAAAC,GAAA,2BAAAC,GAAAhF,EAAAC,GAAA,KAAAD,EAAA,OAAAiF,EA1Sx9E9E,cAAE,gBAAFA,MAAE,6BAAA+E,EAAF/E,MAAE8E,GAAArE,UAAAuE,EAAFhF,MAAE,UAAFA,MA6a68BgF,EAAAC,aAAAF,GAAoB,GA7aj+B/E,MAAE,WAAFA,CA6asiC,eA7atiCA,MAAE,gBAAAoC,GAAA,MAAA8C,EAAFlF,MAAE8E,GAAA/B,MAAAL,EAAF1C,MAAE,UAAFA,MA6a6tC0C,EAAAyC,aAAAD,EAAA9C,GAAuB,EA7apvCpC,CA6asvC,iBAAAoC,GAAA,OAAAA,EAAAgD,cAAwD,CAAI,GA7alzCpF,gBAAE,aAAFA,MAAE,iBAAAoC,GAAA,MAAA8C,EAAFlF,MAAE8E,GAAA/B,MAAAsC,EAAFrF,MAAE,UAAFA,MA6akgDqF,EAAAC,SAAAJ,EAAA9C,GAAmB,GA7arhDpC,MAAE,GAAFA,SA6aglD,MAAAH,EAAA,OAAAkF,EAAAjF,EAAAW,UAAA8E,EAAAzF,EAAA0F,KAAAN,EAAApF,EAAAiD,MAAA9C,EA7ahlDD,MAAE,GAAFA,MAAE,WAAAuF,GAAAtF,EAAAwF,aAAFzF,CA6as1B,SAAA+E,EAAAW,QA7at1B1F,MAAE,OAAA+E,EAAAW,OAAA,eAAF1F,CA6a2xB,YAAAC,EAAA0F,WA7a3xB3F,MAAE,GAAFA,MAAE,SAAAC,EAAA2F,eAAAV,GAAFlF,MAAE,GAAFA,MAAE,UAAA+E,EAAAhB,MAAF/D,MAAE,GAAFA,MAAE,YAAA+E,EAAAW,SAAAX,EAAA7D,IAAFlB,MAAE,SAAAC,EAAA2F,eAAAV,GAAFlF,MAAE,GAAFA,MAAE+E,EAAAhB,KA6aukD,WAAA8B,GAAAhG,EAAAC,GAA4C,GAA5C,EAAAD,IA7azkDG,MAAE,WAAFA,MAAE,EAAA6E,GAAA,mBAAF7E,SA6aqnD,EAAAH,EAAA,OAAAM,EA7arnDH,cAAE,GAAFA,MAAE,UAAAG,EAAA2F,aA6aksB,WAAAC,GAAAlG,EAAAC,GAAA,KAAAD,EAAA,OAAAmG,EA7apsBhG,cAAE,WAAFA,CA+sB4N,uBA/sB5NA,MAAE,eAAFA,MAAE,cAAFA,MAAE,yBAAAoC,GAAA,MAAA6D,EAAFjG,MAAEgG,GAAAvF,UAAA,OAAFT,MAAEiG,EAAAlC,KAAA3B,EA+sBuW,GA/sBzWpC,gBAAE,uBAAFA,MAAE,eAAFA,MAAE,kCAAFA,MAAE,eAAAoC,GAAA,MAAA8D,EAAFlG,MAAEgG,GAAAjD,MAAApB,EAAF3B,QAAE,OAAFA,MA+sBgzB2B,EAAAwE,UAAAD,EAAA9D,EAAA2B,MAAyB,EA/sBz0B/D,CA+sB20B,kBAAAoC,GA/sBz0B,MAAA8D,EAAFlG,MAAEgG,GAAAjD,MAAAqD,EAAFpG,QAAE,OAAFA,MA+sB82BoG,EAAAnB,aAAAiB,EAAA9D,GAAuB,GA/sBr4BpC,gBAAE,QAAFA,CA+sB2+B,eA/sB3+BA,MAAE,yBAAAiG,EAAFjG,MAAEgG,GAAAvF,UAAAuB,EAAFhC,QAAE,OAAFA,MA+sB6iCgC,EAAAqE,kBAAAJ,GAAwB,GA/sBrkCjG,MAAE,kBAAFA,WA+sBkqC,MAAAH,EAAA,OAAAoG,EAAAnG,EAAAW,UA/sBlqCT,MAAE,GAAFA,MAAE,QAAFA,MAAE,uBAAFA,MAAE,GAAFA,MAAE,UAAAiG,EAAAlC,KAAF/D,CA+sBmW,YAAAiG,EAAAK,OA/sBnWtG,MAAE,GAAFA,MAAE,QAAFA,MAAE,8BAAFA,MAAE,GAAFA,MAAE,UAAAiG,EAAAM,OAAFvG,CA+sBsqB,YAAAiG,EAAAlC,KA/sBtqB/D,CA+sBsqB,gBAAAiG,EAAAlC,KAAA,WAAAyC,GAAA3G,EAAAC,GAA02D,GAA12D,EAAAD,GA/sBtqBG,MAAE,GA+sB8gF,EAAAH,EAAA,OAAA4G,EAAA3G,EAAAkB,KA/sBhhFhB,MAAE,IAAAyG,EAAAvF,GAAA,IA+sB8gF,WAAAwF,GAAA7G,EAAAC,GA/sB9gF,GA+sB8gF,EAAAD,IA/sBhhFG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA8G,EAAA7G,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA2G,EAAAtF,UAAA,aA+sBszF,WAAAuF,GAAA/G,EAAAC,GA/sBtzF,GA+sBszF,EAAAD,IA/sBxzFG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAAgH,EAAA/G,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA6G,EAAArF,UAAA,aA+sB8lG,WAAAsF,GAAAjH,EAAAC,GAAiQ,GAAjQ,EAAAD,GA/sBhmGG,MAAE,GA+sB+1G,EAAAH,EAAA,OAAAkH,EAAAjH,EAAAkB,KA/sBj2GhB,MAAE,IAAA+G,EAAAhD,KAAA,IA+sB+1G,WAAAiD,GAAAnH,EAAAC,GAA+P,GAA/P,EAAAD,GA/sBj2GG,MAAE,GA+sB8lH,EAAAH,EAAA,OAAAoH,EAAAnH,EAAAkB,KA/sBhmHhB,MAAE,IAAAiH,EAAA5C,IAAA,IA+sB8lH,WAAA6C,GAAArH,EAAAC,GAA2e,GAA3e,EAAAD,IA/sBhmHG,MAAE,iBAAFA,MAAE,GAAFA,SA+sB2kI,EAAAH,EAAA,OAAAsH,EAAArH,EAAA2C,KAAA2E,EA/sB3kIpH,MAAE,GAAAS,UAAFT,MAAE,YAAAoH,EAAAnE,MAAFjD,MAAE,GAAFA,MAAEmH,EAAApD,KA+sBsiI,WAAAsD,GAAAxH,EAAAC,GAAA,KAAAD,EAAA,OAAAyH,EA/sBxiItH,cAAE,WAAFA,CA+sBqrI,kBA/sBrrIA,MAAE,kBAAAoC,GAAFpC,MAAEsH,GAAA,MAAAC,EAAFvH,QAAEgB,KAAAoG,EAAFpH,QAAES,UAAA+G,EAAFxH,QAAE,OAAFA,MA+sBg/IwH,EAAAC,wBAAAF,EAAArG,GAAAkG,EAAAlG,GAAA,MAAAkB,EAAA,KAAAA,EAAAlB,IAA+D,GA/sB/iJlB,cAAE,eAAFA,MAAE,mBAAFA,MAAEsH,GAAA,MAAAC,EAAFvH,QAAEgB,KAAA0G,EAAF1H,MAAE,UAAFA,MA+sB+1J0H,EAAAC,mBAAAJ,GAA2B,GA/sB13JvH,MAAE,iBAAFA,SA+sBunK,MAAAH,EAAA,OAAA0H,EA/sBvnKvH,QAAEgB,KAAAoG,EAAFpH,QAAES,UAAAmH,EAAF5H,cAAE,GAAFA,MAAE,QAAAoH,EAAApD,SAAFhE,MAAE,GAAFA,MAAE,kBAAA4H,EAAAC,sBAAAN,EAAArG,MAAA0G,EAAAC,sBAAAN,EAAArG,IAAAkG,EAAAlG,MAAFlB,MAAE,mBAAA4H,EAAAC,sBAAAN,EAAArG,KAAA0G,EAAAC,sBAAAN,EAAArG,IAAAkG,EAAAlG,KA+sBi+J,WAAA4G,GAAAjI,EAAAC,GAA4N,GAA5N,EAAAD,IA/sBn+JG,MAAE,EAAAkH,GAAA,mBAAFlH,MAAE,EAAAqH,GAAA,0BAAFrH,QA+sB+rK,EAAAH,EAAA,OAAA0H,EAAAzH,EAAAkB,KAAA+G,EA/sB/rK/H,MAAE,GAAAoH,EAAFpH,QAAES,UAAA4B,EAAFrC,cAAE,OAAAqC,EAAA2F,UAAAT,EAAAH,EAAAlG,IAAFlB,CA+sBg6H,WAAA+H,EAAA,WAAAE,GAAApI,EAAAC,GAAk2C,GAAl2C,EAAAD,IA/sBh6HG,MAAE,uBAAFA,MAAE,EAAA8H,GAAA,mBAAF9H,SA+sBkwK,EAAAH,EAAA,OAAAuH,EAAAtH,EAAAW,UA/sBlwKT,MAAE,UAAAoH,EAAArD,KA+sB+vH,WAAAmE,GAAArI,EAAAC,GA/sB/vH,GA+sB+vH,EAAAD,IA/sBjwHG,MAAE,GAAFA,MAAE,uBAAAH,EAAA,OAAAsI,EAAArI,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAmI,EAAAC,MAAAD,EAAAE,cAAA,IA+sBigL,WAAAC,GAAAzI,EAAAC,GA/sBjgL,GA+sBigL,EAAAD,IA/sBngLG,MAAE,GAAFA,MAAE,uBAAAH,EAAA,OAAA0I,EAAAzI,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAuI,EAAAC,aAAAD,EAAAF,cAAA,IA+sBi0L,WAAAI,GAAA5I,EAAAC,GAAA,KAAAD,EAAA,OAAA6I,EA/sBn0L1I,cAAE,eAAFA,MAAE,yBAAA2I,EAAF3I,MAAE0I,GAAA1H,KAAA4H,EAAF5I,QAAE,OAAFA,MA+sBwkM4I,EAAAC,cAAAF,GAAsB,GA/sB9lM3I,MAAE,iBAAFA,OA+sB6sM,WAAA8I,GAAAjJ,EAAAC,GAAA,EAAAD,IA/sB7sMG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,YAAE,0BAg5B2Q,UAAA+I,GAAAlJ,EAAAC,GAAA,KAAAD,EAAA,OAAAE,EAh5B7QC,cAAE,cAAFA,MAAE,mBAAFA,MAAED,GAAA,MAAAE,EAAFD,QAAE,OAAFA,MAg5BofC,EAAAuD,SAAQ,GAh5B5fxD,MAAE,GAAFA,MAAE,eAAFA,cAAE,cAAFA,MAAE,mBAAFA,MAAED,GAAA,MAAA0D,EAAFzD,QAAE,OAAFA,MAg5BymByD,EAAAuF,eAAc,GAh5BvnBhJ,MAAE,GAAFA,MAAE,eAAFA,OAg5BgyB,MAAAH,EAAA,OAAAuD,EAh5BhyBpD,cAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,eAAAoD,EAAA6F,eAAArG,QAAF5C,MAAE,GAAFA,MAAE,IAAFA,MAAE,8BAg5BqxB,WAAAkJ,GAAArJ,EAAAC,GAAA,KAAAD,EAAA,OAAAsJ,EAh5BvxBnJ,cAAE,cAAFA,MAAE,mBAAFA,MAAEmJ,GAAA,MAAA/F,EAAFpD,QAAE,OAAFA,MAs9BodoD,EAAAlD,OAAM,GAt9B1dF,MAAE,GAAFA,MAAE,eAAFA,OAs9BuoB,MAAAH,EAAA,OAAAM,EAt9BvoBH,cAAE,WAAAG,EAAAC,WAAAE,SAAAH,EAAAC,WAAAC,UAAFL,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBAs9B4nB,QAAAoJ,GAAA,kDAAAC,GAAA,qBAAAC,GAAA,2DAAAC,GAAA1J,EAAAC,GAAA,KAAAD,EAAA,OAAA2J,EAt9B9nBxJ,cAAE,YAAFA,MAAE,mBAAFA,MAAEwJ,GAAA,MAAA9G,EAAF1C,MAAE,UAAFA,MAipC+iB0C,EAAA+G,aAAA/G,EAAAgH,eAA2B,GAjpC1kB1J,MAAE,kBAAFA,OAipC0lB,MAAAH,EAAA,OAAAmD,EAjpC1lBhD,MAAE,GAAFA,MAAE,MAAFA,MAAE,IAAAgD,EAAA0G,cAAA,SAAF1J,MAipCqhB,WAAA2J,GAAA9J,EAAAC,GAAA,KAAAD,EAAA,OAAA+J,EAjpCrhB5J,cAAE,YAAFA,MAAE,mBAAFA,MAAE4J,GAAA,MAAAvE,EAAFrF,MAAE,UAAFA,MAipCoqBqF,EAAAwE,eAAc,GAjpClrB7J,MAAE,iBAAFA,MAAE,SAAFA,MAAE,GAAFA,MAAE,eAAFA,SAipC+zB,GAAAH,IAjpC/zBG,MAAE,GAAFA,YAAE,kCAipCuzB,UAAA8J,GAAAjK,EAAAC,GAAA,EAAAD,GAjpCzzBG,MAAE,EAipC88B,UAAA+J,GAAAlK,EAAAC,GAAA,KAAAD,EAAA,OAAAmG,EAjpCh9BhG,cAAE,QAAFA,CAipCqgC,eAjpCrgCA,MAAE,mBAAFA,MAAEgG,GAAA,MAAAgE,EAAFhK,MAAE,UAAFA,MAipCijCgK,EAAAH,eAAc,GAjpC/jC7J,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAipCosC,GAAAH,IAjpCpsCG,MAAE,GAAFA,MAAE,IAAFA,MAAE,4BAipCyrC,UAAAiK,GAAApK,EAAAC,GAAqC,GAArC,EAAAD,IAjpC3rCG,MAAE,UAAFA,CAipCwX,WAjpCxXA,MAAE,EAAAuJ,GAAA,aAAFvJ,MAAE,EAAA2J,GAAA,aAAF3J,cAAE,WAAFA,MAAE,EAAA8J,GAAA,sBAAF9J,MAAE,EAAA+J,GAAA,aAAF/J,WAipCguC,EAAAH,EAAA,OAAAM,EAjpChuCH,QAAED,EAAFC,MAAE,GAAFA,MAAE,GAAFA,MAAE,OAAAG,EAAAuJ,eAAF1J,MAAE,GAAFA,MAAE,QAAAG,EAAAuJ,eAAF1J,MAAE,GAAFA,MAAE,mBAAAD,GAAFC,MAAE,GAAFA,MAAE,mBAAAG,EAAA+J,kBAipCggC,WAAAC,GAAAtK,EAAAC,GAAA,KAAAD,EAAA,OAAAuK,EAjpClgCpK,cAAE,YAAFA,MAAE,mBAAFA,MAAEoK,GAAA,MAAAC,EAAFrK,MAAE,UAAFA,MAipC28CqK,EAAAZ,aAAAY,EAAAX,eAA2B,GAjpCt+C1J,MAAE,kBAAFA,OAipCs/C,MAAAH,EAAA,OAAA8B,EAjpCt/C3B,MAAE,GAAFA,MAAE,MAAFA,MAAE,IAAA2B,EAAA+H,cAAA,SAAF1J,MAipCi7C,WAAAsK,GAAAzK,EAAAC,GAAA,KAAAD,EAAA,OAAA0K,EAjpCj7CvK,cAAE,YAAFA,MAAE,mBAAFA,MAAEuK,GAAA,MAAAC,EAAFxK,MAAE,UAAFA,MAipCokDwK,EAAAX,eAAc,GAjpCllD7J,MAAE,iBAAFA,OAipCyqD,WAAAyK,GAAA5K,EAAAC,GAAA,EAAAD,GAjpCzqDG,MAAE,EAipC0vD,UAAA0K,GAAA7K,EAAAC,GAAA,KAAAD,EAAA,OAAA8K,EAjpC5vD3K,cAAE,eAAFA,MAAE,mBAAFA,MAAE2K,GAAA,MAAAC,EAAF5K,MAAE,UAAFA,MAipC28D4K,EAAAf,eAAc,GAjpCz9D7J,MAAE,eAAFA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,OAipC0lE,GAAAH,IAjpC1lEG,MAAE,QAAFA,MAAE,wBAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,4BAipC+kE,UAAA6K,GAAAhL,EAAAC,GAAS,GAAT,EAAAD,IAjpCjlEG,MAAE,YAAFA,MAAE,EAAAmK,GAAA,aAAFnK,MAAE,EAAAsK,GAAA,aAAFtK,cAAE,EAAAyK,GAAA,sBAAFzK,MAAE,EAAA0K,GAAA,kBAipCwlE,EAAA7K,EAAA,OAAAI,EAjpC1lED,QAAED,EAAFC,MAAE,GAAFA,MAAE,GAAFA,MAAE,OAAAC,EAAAyJ,eAAF1J,MAAE,GAAFA,MAAE,QAAAC,EAAAyJ,eAAF1J,MAAE,GAAFA,MAAE,mBAAAD,GAAFC,MAAE,GAAFA,MAAE,mBAAAC,EAAAiK,kBAipC0zD,WAAAY,GAAAjL,EAAAC,GAAA,KAAAD,EAAA,OAAAkL,EAjpC5zD/K,cAAE,YAAFA,MAAE,8BAAAoC,GAAFpC,MAAE+K,GAAA,MAAAnD,EAAF5H,MAAE,UAAFA,MAipC+jF4H,EAAAoD,gBAAA5I,GAAuB,GAjpCtlFpC,MAAE,mBAAFA,MAAE,oBAAFA,CAipC2oF,YAjpC3oFA,MAAE,YAAFA,MAAE,kBAAFA,cAAE,yBAAFA,CAipC4jG,eAjpC5jGA,MAAE,yBAAAiL,EAAFjL,MAAE+K,GAAAtK,UAAAyK,EAAFlL,MAAE,UAAFA,MAipCsoGkL,EAAAzB,aAAAwB,GAAmB,GAjpCzpGjL,MAAE,GAAFA,MAAE,eAAFA,cAAE,gBAAFA,MAAE,yBAAAiL,EAAFjL,MAAE+K,GAAAtK,UAAA+G,EAAFxH,MAAE,UAAFA,MAipCy/GwH,EAAA2D,cAAAF,GAAoB,GAjpC7gHjL,MAAE,oBAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,aAAFA,MAAE,gBAAFA,MAAE,yBAAAiL,EAAFjL,MAAE+K,GAAAtK,UAAA2K,EAAFpL,MAAE,UAAFA,MAipC8+HoL,EAAAC,YAAAJ,GAAkB,GAjpChgIjL,MAAE,oBAAFA,MAAE,IAAFA,MAAE,gBAAFA,aAipC8nI,MAAAH,EAAA,OAAAoL,EAAAnL,EAAAW,UAAA6K,EAAAxL,EAAAiD,MAAAwI,EAjpC9nIvL,MAAE,GAAFA,MAAE,kBAAAsL,EAAFtL,CAipC08E,uBAjpC18EA,MAAE,KAAAuL,EAAArB,oBAAFlK,MAAE,GAAFA,MAAE,WAAAuL,EAAAC,WAAAP,IAAFjL,MAAE,GAAFA,MAAE,MAAFA,MAAE,KAAAiL,EAAA,QAAFjL,aAAE,GAAFA,MAAE,IAAFA,MAAE,2BAAFA,MAAE,GAAFA,MAAE,WAAAuL,EAAAC,WAAAP,KAAFjL,MAAE,MAAAuL,EAAArB,oBAAFlK,MAAE,GAAFA,MAAE,IAAFA,MAAE,0CAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAuL,EAAArB,oBAAFlK,MAAE,GAAFA,MAAE,IAAFA,MAAE,gCAipCmnI,WAAAyL,GAAA5L,EAAAC,GAAgH,GAAhH,EAAAD,IAjpCrnIG,MAAE,YAAFA,MAAE,EAAA8K,GAAA,gBAAF9K,SAipCquI,EAAAH,EAAA,OAAA4D,EAjpCruIzD,cAAE,UAAAyD,EAAAiI,SAAF1L,MAAE,GAAFA,MAAE,UAAAyD,EAAAkI,OAipCuxE,WAAAC,GAAA/L,EAAAC,GAAA,EAAAD,IAjpCzxEG,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAFA,SAyvCiT,EAAAH,IAzvCjTG,MAAE,GAAFA,YAAE,2CAyvCgS,UAAA6L,GAAAhM,EAAAC,GAAA,EAAAD,IAzvClSG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,YAAE,0CAyvC4Y,UAAA8L,GAAAjM,EAAAC,GAAc,GAAd,EAAAD,IAzvC9YG,MAAE,EAAA4L,GAAA,uBAAF5L,MAAE,EAAA6L,GAAA,0BAAF7L,QAyvC4Z,EAAAH,EAAA,OAAA0E,EAzvC5ZvE,MAAE,GAAAG,EAAFH,cAAE,OAAAG,EAAA4L,qBAAF/L,CAyvCkM,WAAAuE,EAAA,QAAAyH,GAAA,SAAAC,GAAA,OAAAC,QAAAD,EAAA,WAAAE,GAAAtM,EAAAC,GAzvChM,GAyvCgM,EAAAD,IAzvClMG,MAAE,GAAFA,MAAE,kBAAAH,EAAA,OAAAuD,EAAFpD,cAAE,IAAFA,MAAE,+BAAFA,MAAE,EAAAgM,GAAA,MAAA5I,EAAAgJ,gBAAA,KAAAhJ,EAAAgJ,gBAAAnJ,OAAA,IAyvCo7D,WAAAoJ,GAAAxM,EAAAC,GAAA,EAAAD,IAzvCt7DG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,MAAE,IAAFA,MAAE,uCAyvCulE,UAAAsM,GAAAzM,EAAAC,GAzvCvlE,GAyvCulE,EAAAD,IAzvCzlEG,MAAE,GAAFA,MAAE,uBAAAH,EAAA,OAAA0M,EAAFvM,QAAES,UAAA+L,EAAFxM,cAAE,IAAFA,MAAE,IAAAuM,EAAAE,aAAA,MAAAD,EAAAJ,gBAAA,KAAAI,EAAAJ,gBAAAM,qBAAA,IAyvCooF,WAAAC,GAAA9M,EAAAC,GAAA,EAAAD,GAzvCtoFG,MAAE,QAyvC6sF,UAAA4M,GAAA/M,EAAAC,GAAuC,GAAvC,EAAAD,IAzvC/sFG,MAAE,OAAFA,CAyvC+vE,QAzvC/vEA,MAAE,GAAFA,cAAE,QAAFA,MAAE,GAAFA,MAAE,oBAAFA,cAAE,QAAFA,MAAE,EAAAsM,GAAA,qBAAFtM,MAAE,EAAA2M,GAAA,0BAAF3M,kBAyvCsvF,EAAAH,EAAA,OAAA0M,EAAAzM,EAAAW,UAAAoM,EAzvCtvF7M,MAAE,GAAAyD,EAAFzD,cAAE,GAAFA,MAAEuM,EAAAxI,MAAF/D,MAAE,GAAFA,YAAE,IAAAuM,EAAAnE,MAAA,MAAA3E,EAAAqJ,eAAA,KAAArJ,EAAAqJ,eAAAJ,sBAAF1M,MAAE,GAAFA,MAAE,OAAAyD,EAAA2I,gBAAFpM,CAyvCm+E,WAAA6M,EAAA,QAAAE,GAAA,SAAAd,GAAA,OAAAe,YAAAf,EAAA,WAAAgB,GAAApN,EAAAC,GAzvCj+E,GAyvCi+E,EAAAD,IAzvCn+EG,MAAE,GAAFA,MAAE,kBAAAH,EAAA,OAAAqN,EAAFlN,MAAE,GAAFA,MAAE,IAAFA,MAAE,sCAAFA,MAAE,EAAA+M,GAAA,MAAAG,EAAAd,gBAAA,KAAAc,EAAAd,gBAAAnJ,OAAA,IAyvC+vG,WAAAkK,GAAAtN,EAAAC,GAAA,EAAAD,IAzvCjwGG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,MAAE,IAAFA,MAAE,uCAyvC83G,UAAAoN,GAAAvN,EAAAC,GAAA,KAAAD,EAAA,OAAAwN,EAzvCh4GrN,cAAE,eAAFA,MAAE,mBAAFA,MAAEqN,GAAA,MAAArL,EAAFhC,QAAE,OAAFA,MAyvCu5FgC,EAAAwB,SAAQ,GAzvC/5FxD,MAAE,GAAFA,MAAE,eAAFA,cAAE,eAAFA,MAAE,mBAAFA,MAAEqN,GAAA,MAAAhD,EAAFrK,QAAE,OAAFA,MAyvCs/FqK,EAAAiD,SAAQ,GAzvC9/FtN,MAAE,EAAAiN,GAAA,qBAAFjN,MAAE,EAAAmN,GAAA,yBAAFnN,cAyvC+5G,MAAAH,EAAA,OAAA0N,EAzvC/5GvN,MAAE,GAAAgD,EAAFhD,cAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAAgD,EAAAoJ,iBAAFpM,MAAE,GAAFA,MAAE,OAAAgD,EAAAoJ,gBAAFpM,CAyvC8mG,WAAAuN,EAAA,WAAAC,GAAA3N,EAAAC,GAAA,EAAAD,IAzvC9mGG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,MAAE,IAAFA,MAAE,sCAw4C2L,UAAAyN,GAAA5N,EAAAC,GAAupB,GAAvpB,EAAAD,IAx4C7LG,MAAE,YAAFA,MAAE,GAAFA,SAw4Co1B,EAAAH,EAAA,OAAA6N,EAx4Cp1B1N,QAAES,UAAFT,MAAE,GAAFA,MAAE0N,EAAArJ,IAw4C40B,WAAAsJ,GAAA9N,EAAAC,GAAA,KAAAD,EAAA,OAAA+N,EAx4C90B5N,cAAE,6BAAFA,MAAE,0BAAA6N,EAAF7N,MAAE4N,GAAAnN,UAAAiN,EAAF1N,QAAES,UAAA4E,EAAFrF,MAAE,UAAFA,MAw4CglCqF,EAAAyI,iBAAAJ,EAAAG,EAAA3M,IAAqC,GAx4CrnClB,OAw4CmqC,MAAAH,EAAA,OAAAgO,EAAA/N,EAAAW,UAx4CnqCT,MAAE,aAAA6N,EAw4C2iC,WAAAE,GAAAlO,EAAAC,GAA2I,GAA3I,EAAAD,IAx4C7iCG,MAAE,OAAFA,CAw4CwqB,UAx4CxqBA,CAw4CwqB,SAx4CxqBA,MAAE,GAAFA,cAAE,EAAAyN,GAAA,cAAFzN,cAAE,WAAFA,MAAE,EAAA2N,GAAA,+BAAF3N,WAw4CwrC,EAAAH,EAAA,OAAA6N,EAAA5N,EAAAW,UAx4CxrCT,MAAE,GAAFA,MAAE0N,EAAA3J,MAAF/D,MAAE,GAAFA,MAAE,OAAA0N,EAAArJ,KAAFrE,MAAE,GAAFA,MAAE,UAAA0N,EAAAM,YAw4Cs/B,WAAAC,GAAApO,EAAAC,GAAiO,GAAjO,EAAAD,IAx4Cx/BG,MAAE,YAAFA,CAw4C4mB,WAx4C5mBA,MAAE,EAAA+N,GAAA,YAAF/N,WAw4CytC,EAAAH,EAAA,OAAAuD,EAx4CztCpD,cAAE,GAAFA,MAAE,UAAAoD,EAAA8K,MAw4CmqB,WAAAC,GAAAtO,EAAAC,GAAA,EAAAD,IAx4CrqBG,MAAE,YAAFA,MAAE,iBAAFA,QAw4Cu1C,UAAAoO,GAAAvO,EAAAC,GAAA,KAAAD,EAAA,OAAA0N,EAx4Cv1CvN,cAAE,eAAFA,MAAE,mBAAFA,MAAEuN,GAAA,MAAAL,EAAFlN,QAAE,OAAFA,MAw4Cu8CkN,EAAA1J,SAAQ,GAx4C/8CxD,MAAE,GAAFA,MAAE,eAAFA,cAAE,eAAFA,MAAE,mBAAFA,MAAEuN,GAAA,MAAAnH,EAAFpG,QAAE,OAAFA,MAw4C4jDoG,EAAAiI,iBAAgB,GAx4C5kDrO,MAAE,GAAFA,MAAE,eAAFA,OAw4CgxD,MAAAH,EAAA,OAAA4D,EAx4ChxDzD,cAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,eAAAyD,EAAAwF,eAAArG,SAAA,IAAAa,EAAA6K,oBAAFtO,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBAw4CqwD,WAAAuO,GAAA1O,EAAAC,GAAA,EAAAD,GAx4CvwDG,MAAE,EA6+CisB,UAAAwO,GAAA3O,EAAAC,GAAy0B,GAAz0B,EAAAD,GA7+CnsBG,MAAE,GA6+C0gD,EAAAH,EAAA,OAAA4O,EAAA3O,EAAAkB,KA7+C5gDhB,MAAE,IAAAyO,EAAAvN,GAAA,IA6+C0gD,WAAAwN,GAAA7O,EAAAC,GA7+C1gD,GA6+C0gD,EAAAD,IA7+C5gDG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA8O,EAAA7O,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA2O,EAAAtN,UAAA,aA6+C8xD,WAAAuN,GAAA/O,EAAAC,GA7+C9xD,GA6+C8xD,EAAAD,IA7+ChyDG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAAgP,EAAA/O,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA6O,EAAArN,UAAA,aA6+CkjE,QAAAsN,GAAA,SAAAC,GAAA,4BAAAA,EAAA,WAAAC,GAAAnP,EAAAC,GAAua,GAAva,EAAAD,IA7+CpjEG,MAAE,QAAFA,CA6+C22E,UA7+C32EA,MAAE,GAAFA,cAAE,gBAAFA,SA6+C29E,EAAAH,EAAA,OAAAoP,EAAAnP,EAAAkB,KA7+C39EhB,MAAE,aAAFA,MAAE,EAAA8O,GAAAG,EAAAC,YAAFlP,MAAE,GAAFA,MAAEiP,EAAAlL,KA6+Ci4E,WAAAoL,GAAAtP,EAAAC,GAAmV,GAAnV,EAAAD,GA7+Cn4EG,MAAE,GA6+CotF,EAAAH,EAAA,OAAAuP,EAAAtP,EAAAkB,KA7+CttFhB,MAAE,IAAAoP,EAAA/K,IAAA,IA6+CotF,QAAAgL,GAAA,SAAApD,GAAA,OAAAxL,UAAAwL,EAAA,EAAAqD,GAAA,2BAAAC,GAAA1P,EAAAC,GAAA,KAAAD,EAAA,OAAAgN,EA7+CttF7M,cAAE,UAAFA,CAqkDm2B,YArkDn2BA,MAAE,YAAFA,MAAE,cAAFA,MAAE,oBAAFA,MAAE6M,GAAA,MAAAL,EAAFxM,QAAE,OAAFA,MAqkDwtCwM,EAAAgD,mBAAkB,GArkD1uCxP,WAqkD0wC,MAAAH,EAAA,OAAAM,EArkD1wCH,cAAE,GAAFA,MAAE,gBAAAG,EAAAsP,iBAAA,KAAAtP,EAAAsP,iBAAAC,6BAqkD2qC,WAAAC,GAAA9P,EAAAC,GAAA,EAAAD,GArkD7qCG,MAAE,gBAqkDu7D,UAAA4P,GAAA/P,EAAAC,GAAA,EAAAD,GArkDz7DG,MAAE,gBAqkDsiE,UAAA6P,GAAAhQ,EAAAC,GAAA,EAAAD,GArkDxiEG,MAAE,gBAqkDwpE,UAAA8P,GAAAjQ,EAAAC,GAAsJ,GAAtJ,EAAAD,IArkD1pEG,MAAE,YAAFA,MAAE,GAAFA,SAqkDgzE,EAAAH,EAAA,OAAAkQ,EArkDhzE/P,QAAEyC,KAAFzC,MAAE,GAAFA,MAAE+P,EAAAC,UAqkDwyE,WAAAC,GAAApQ,EAAAC,GAAA,KAAAD,EAAA,OAAA0K,EArkD1yEvK,cAAE,WAAFA,CAqkD2tD,eArkD3tDA,MAAE,yBAAA+P,EAAF/P,MAAEuK,GAAA9H,KAAA,OAAFzC,MAqkD6wD+P,EAAAG,kBAAsB,GArkDnyDlQ,MAAE,EAAA2P,GAAA,mBAAF3P,MAAE,EAAA4P,GAAA,mBAAF5P,MAAE,EAAA6P,GAAA,mBAAF7P,cAAE,EAAA8P,GAAA,cAAF9P,OAqkDk1E,MAAAH,EAAA,OAAAkQ,EAAAjQ,EAAA2C,KArkDl1EzC,MAAE,GAAFA,MAAE,SAAA+P,EAAAC,WAAFhQ,MAAE,GAAFA,MAAE,QAAA+P,EAAAC,WAAFhQ,MAAE,GAAFA,MAAE,eAAA+P,EAAAC,WAAFhQ,MAAE,GAAFA,MAAE,gBAAA+P,EAAAC,WAAFhQ,MAAE,GAAFA,MAAE,OAAA+P,EAAAC,UAqkDixE,WAAAG,GAAAtQ,EAAAC,GAA6F,GAA7F,EAAAD,IArkDnxEG,MAAE,OAAFA,CAqkD0/C,WArkD1/CA,CAqkD0/C,UArkD1/CA,MAAE,GAAFA,cAAE,EAAAiQ,GAAA,cAAFjQ,WAqkDg3E,EAAAH,EAAA,OAAAuQ,EAAAtQ,EAAAW,UArkDh3ET,MAAE,SAAAoQ,EAAAC,QAAFrQ,MAAE,GAAFA,MAAE,UAAAoQ,EAAAE,OAAFtQ,MAAE,GAAFA,MAAEoQ,EAAAG,SAAFvQ,MAAE,GAAFA,MAAE,OAAAoQ,EAAAI,KAqkDyrD,WAAAC,GAAA5Q,EAAAC,GAAA,EAAAD,GArkD3rDG,MAAE,EAqkDi3H,UAAA0Q,GAAA7Q,EAAAC,GAAA,EAAAD,GArkDn3HG,MAAE,EAqkDq9H,UAAA2Q,GAAA9Q,EAAAC,GAAqgB,GAArgB,EAAAD,GArkDv9HG,MAAE,+BAqkD09I,EAAAH,EAAA,OAAA+Q,EAAA9Q,EAAAW,UAAAoQ,EArkD59I7Q,MAAE,GAAFA,MAAE,kBAAA4Q,EAAF5Q,CAqkD2yI,UAAA6Q,EAAAC,QAAA,WAAAC,GAAAlR,EAAAC,GAA6d,GAA7d,EAAAD,GArkD3yIG,MAAE,+BAqkDswJ,EAAAH,EAAA,OAAAmR,EArkDxwJhR,MAAE,GAAFA,MAAE,UAAAgR,EAAAF,QAqkDkpJ,WAAAG,GAAApR,EAAAC,GAAqM,GAArM,EAAAD,IArkDppJG,MAAE,GAAFA,MAAE,YAAFA,MAAE,EAAA2Q,GAAA,iCAAF3Q,MAAE,EAAA+Q,GAAA,iCAAF/Q,iBAqkDy1J,EAAAH,EAAA,OAAA0L,EArkDz1JvL,MAAE,GAAFA,MAAE,GAAFA,MAAE,UAAAuL,EAAAuF,QAAAI,eAAFlR,MAAE,GAAFA,MAAE,OAAAuL,EAAAuF,QAAAlO,OAqkDmlJ,WAAAuO,GAAAtR,EAAAC,GAAA,KAAAD,EAAA,OAAAuR,EArkDrlJpR,cAAE,OAAFA,CAqkDq/F,UArkDr/FA,CAqkDq/F,eArkDr/FA,MAAE,mBAAFA,MAAEoR,GAAA,MAAAC,EAAFrR,QAAE,OAAFA,MAqkDg8GqR,EAAAC,wBAAuB,GArkDv9GtR,MAAE,eAAFA,MAAE,iBAAFA,cAAE,YAAFA,MAAE,EAAAyQ,GAAA,uBAAFzQ,MAAE,EAAA0Q,GAAA,uBAAF1Q,MAAE,EAAAiR,GAAA,sBAAFjR,WAqkDu3J,MAAAH,EAAA,OAAAI,EArkDv3JD,cAAE,GAAFA,MAAE,SAAAC,EAAAsR,qBAAFvR,MAAE,UAAAC,EAAAuR,qBAAA5O,QAAA3C,EAAAwP,iBAAA,MAAFzP,MAAE,GAAFA,MAAE,SAAAC,EAAAsR,qBAAFvR,MAAE,QAAFA,MAAE,uCAAFA,MAAE,GAAFA,MAAE,UAAAC,EAAAsR,qBAAFvR,MAAE,GAAFA,MAAE,yBAAAC,EAAAwR,gBAAA,KAAAxR,EAAAwR,gBAAAC,UAAF1R,MAAE,GAAFA,MAAE,mBAAAC,EAAA0R,sBAAF3R,MAAE,GAAFA,MAAE,OAAAC,EAAA6Q,QAqkD8gI,QAAAc,GAAA,SAAA3F,EAAA8C,GAAA,OAAA/N,KAAAiL,EAAA4F,EAAA9C,EAAA+C,MAAA,aAAAC,GAAAlS,EAAAC,GAAw3D,GAAx3D,EAAAD,IArkDhhIG,MAAE,GAAFA,MAAE,MAAFA,SAqkDw4L,EAAAH,EAAA,OAAAmS,EAAAlS,EAAAW,UAAAwR,EAAAnS,EAAAiD,MArkDx4L/C,QAAE,MAAA8E,EAAF9E,MAAE,IAAFA,MAAE,GAAFA,MAAE,mBAAA8E,EAAF9E,CAqkDivL,0BArkDjvLA,MAAE,EAAA4R,GAAAI,EAAAC,GAqkD+uL,WAAAC,GAAArS,EAAAC,GAA4d,GAA5d,EAAAD,IArkDjvLG,MAAE,OAAFA,CAqkDu9L,QArkDv9LA,MAAE,8BAAFA,WAqkD6sM,EAAAH,EAAA,OAAA4D,EArkD7sMzD,cAAE,GAAFA,MAAE,UAAAyD,EAAA+N,qBAAA5O,QAAAa,EAAAgM,iBAAA,MAAFzP,MAAE,GAAFA,MAAE,kBAAAyD,EAAA0O,gBAqkDqpM,WAAAC,GAAAvS,EAAAC,GAAA,KAAAD,EAAA,OAAAwS,EArkDvpMrS,cAAE,oCAAFA,MAAE,8BAAAoC,GAAFpC,MAAEqS,GAAA,MAAAC,EAAFtS,QAAE,OAAFA,MAqkDq+MsS,EAAAC,mBAAAC,KAAApQ,GAA+B,GArkDpgNpC,OAqkD6iN,MAAAH,EAAA,OAAAmD,EArkD7iNhD,cAAE,eAAAgD,EAAAL,aAqkDg8M,QAAA8P,GAAA,SAAAxG,EAAA8C,EAAA2D,GAAA,OAAAC,aAAA1G,EAAA2G,WAAA7D,EAAA8D,WAAAH,EAAA,WAAAI,GAAAjT,EAAAC,GAAuR,GAAvR,EAAAD,IArkDl8MG,MAAE,YAAFA,MAAE,GAAFA,MAAE,eAAFA,SAqkDytN,EAAAH,EAAA,OAAA2E,EArkDztNxE,cAAE,GAAFA,MAAE,IAAFA,MAAE,yBAAFA,MAAE,EAAAyS,GAAAjO,EAAAmO,aAAAnO,EAAAoO,WAAApO,EAAAqO,aAAA,IAqkDitN,WAAAE,GAAAlT,EAAAC,GAAA,KAAAD,EAAA,OAAAmT,EArkDntNhT,cAAE,gCAAFA,MAAE,sBAAAoC,GAAFpC,MAAEgT,GAAA,MAAAtL,EAAF1H,QAAE,OAAFA,MAqkD08N0H,EAAAuL,WAAAT,KAAApQ,GAAuB,GArkDj+NpC,OAqkDsgO,MAAAH,EAAA,OAAAmF,EArkDtgOhF,cAAE,KAAAgF,EAAA9D,GAAFlB,CAqkDozN,cAAAgF,EAAAzC,YArkDpzNvC,CAqkDozN,eAAAgF,EAAArC,aArkDpzN3C,CAqkDozN,aAAAgF,EAAA6N,WAAA,WAAAK,GAAArT,EAAAC,GAAA,KAAAD,EAAA,OAAAsT,EArkDpzNnT,cAAE,UAAFA,CAqkDq4O,WArkDr4OA,CAqkDq4O,YArkDr4OA,MAAE,eAAFA,MAAE,iBAAFA,cAAE,cAAFA,MAAE,iBAAAoC,GAAFpC,MAAEmT,GAAA,MAAAC,EAAFpT,QAAEgB,KAAA4H,EAAF5I,QAAE,OAAFA,MAqkDw0P4I,EAAAyK,WAAAD,EAAAhR,GAAwB,GArkDh2PpC,WAqkDw3P,MAAAH,EAAA,OAAAuT,EArkDx3PpT,QAAEgB,KAAAsS,EAAFtT,cAAE,SAAAsT,EAAAC,cAAAD,EAAAE,cAAAJ,EAAAlS,KAAFlB,MAAE,GAAFA,MAAE,QAAFA,MAAE,mCAAFA,MAAE,GAAFA,MAAE,gBAAAsT,EAAA7D,iBAAA,KAAA6D,EAAA7D,iBAAAgE,WAAAL,GAqkDoyP,WAAAM,GAAA7T,EAAAC,GAAA,EAAAD,GArkDtyPG,MAAE,EAqkD+yQ,OAAA2T,GAAA,SAAA1H,EAAA8C,GAAA,OAAA/N,KAAAiL,EAAA6F,MAAA/C,EAAA,WAAA6E,GAAA/T,EAAAC,GAAsB,GAAtB,EAAAD,IArkDjzQG,MAAE,OAAFA,CAqkDikQ,YArkDjkQA,MAAE,EAAA0T,GAAA,uBAAF1T,WAqkDu0Q,EAAAH,EAAA,OAAAgU,EAAA/T,EAAAW,UAAAqT,EArkDv0Q9T,QAAEoT,EAAAU,EAAA9S,KAAA+S,EAAAD,EAAAhC,MAAAkC,EAAFhU,cAAE,SAAAgU,EAAAT,cAAAS,EAAAR,cAAAJ,EAAAlS,KAAFlB,MAAE,GAAFA,MAAE,UAAA6T,EAAAvD,OAAFtQ,MAAE,GAAFA,MAAE,mBAAA6T,EAAAnC,SAAF1R,CAqkDsuQ,0BArkDtuQA,MAAE,EAAA2T,GAAAP,EAAAW,GAqkDouQ,WAAAE,GAAApU,EAAAC,GAAA,EAAAD,GArkDtuQG,MAAE,EAqkDqrR,UAAAkU,GAAArU,EAAAC,GAAuB,GAAvB,EAAAD,IArkDvrRG,MAAE,GAAFA,MAAE,EAAAiU,GAAA,uBAAFjU,SAqkD8sR,EAAAH,EAAA,OAAAsU,EAAArU,EAAAW,UAAAsT,EArkD9sR/T,QAAE8R,MAAF9R,QAAE,MAAA8E,EAAF9E,MAAE,IAAFA,MAAE,GAAFA,MAAE,mBAAA8E,EAAF9E,CAqkDumR,0BArkDvmRA,MAAE,EAAA2T,GAAAQ,EAAAJ,EAAA,GAqkDqmR,QAAAK,GAAA,SAAAnI,EAAA8C,GAAA,OAAA+C,MAAA7F,EAAAoI,WAAAtF,EAAA,WAAAuF,GAAAzU,EAAAC,GAAuG,GAAvG,EAAAD,IArkDvmRG,MAAE,cAAFA,MAAE,EAAAkT,GAAA,aAAFlT,MAAE,EAAA4T,GAAA,aAAF5T,MAAE,QAAFA,cAAE,EAAAkU,GAAA,wBAqkD4sR,EAAArU,EAAA,OAAAuT,EAAAtT,EAAAkB,KAAA+S,EAAAjU,EAAAgS,MAAApP,EArkD9sR1C,cAAE,cAAFA,MAAE,EAAAoU,GAAAL,EAAAX,IAAFpT,MAAE,GAAFA,MAAE,OAAA0C,EAAA+M,kBAAFzP,MAAE,GAAFA,MAAE,UAAA0C,EAAA8O,sBAAFxR,MAAE,GAAFA,MAAE,SAAA0C,EAAA6Q,cAAA7Q,EAAA8Q,cAAAJ,EAAAlS,KAAFlB,MAAE,GAAFA,MAAE,UAAA0C,EAAA6R,kBAAAnB,GAqkDmhR,QAAAoB,GAAA,6BAAAC,GAAA,SAAAxI,EAAA8C,EAAA2D,EAAAgC,GAAA,OAAA/R,aAAAsJ,EAAA1J,YAAAwM,EAAA8D,WAAAH,EAAAxR,GAAAwT,EAAA,EAAAC,GAAA,yBAAAC,GAAA,gCAAAC,GAAAhV,EAAAC,GAAA,KAAAD,EAAA,OAAAiV,EArkDrhR9U,cAAE,eAAFA,MAAE,mBAAFA,MAAE8U,GAAA,MAAA1O,EAAFpG,QAAE,OAAFA,MAm0Dw6BoG,EAAA2O,SAAQ,GAn0Dh7B/U,MAAE,GAAFA,MAAE,eAAFA,OAm0D6lC,MAAAH,EAAA,OAAAM,EAn0D7lCH,cAAE,WAAAG,EAAAC,WAAAE,SAAAH,EAAAC,WAAAC,UAAFL,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBAm0DklC,WAAAgV,GAAAnV,EAAAC,GAAA,KAAAD,EAAA,OAAAuK,EAn0DplCpK,cAAE,eAAFA,MAAE,mBAAFA,MAAEoK,GAAA,MAAAC,EAAFrK,MAAE,UAAFA,MAm0DozCqK,EAAAnK,OAAM,GAn0D1zCF,MAAE,GAAFA,MAAE,eAAFA,OAm0D6gD,MAAAH,EAAA,OAAAoV,EAn0D7gDjV,MAAE,GAAFA,MAAE,YAAAiV,EAAA7U,WAAAE,SAAA2U,EAAA7U,WAAAC,YAAA4U,EAAAC,iBAAFlV,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBAm0DkgD,WAAAmV,GAAAtV,EAAAC,GAAS,GAAT,EAAAD,GAn0DpgDG,MAAE,EAAAgV,GAAA,iBAm0D2gD,EAAAnV,EAAA,OAAAI,EAn0D7gDD,cAAE,mBAAAC,EAAAY,iBAm0D6tC,WAAAuU,GAAAvV,EAAAC,GAAA,EAAAD,IAn0D/tCG,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAFA,SAm0DggF,EAAAH,IAn0DhgFG,MAAE,GAAFA,YAAE,uBAm0D++E,UAAAqV,GAAAxV,EAAAC,GAAA,EAAAD,IAn0Dj/EG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,YAAE,uBAm0DulF,UAAAsV,GAAAzV,EAAAC,GAA6U,GAA7U,EAAAD,IAn0DzlFG,MAAE,cAAFA,MAAE,6BAAFA,SAm0Ds6F,EAAAH,EAAA,OAAA0V,EAAAzV,EAAA2C,KAn0Dt6FzC,MAAE,GAAFA,MAAE,SAAAuV,EAm0Di3F,QAAAC,GAAA,oDAAAC,GAAA5V,EAAAC,GAAA,EAAAD,IAn0Dn3FG,MAAE,UAAFA,MAAE,GAAFA,MAAE,eAAFA,SAm0D06G,EAAAH,IAn0D16GG,MAAE,aAAFA,MAAE,EAAAwV,KAAFxV,MAAE,GAAFA,YAAE,gCAm0Do6G,OAAA0V,GAAA,SAAA3G,GAAA,8BAAAA,EAAA,WAAA4G,GAAA9V,EAAAC,GAAyR,GAAzR,EAAAD,IAn0Dt6GG,MAAE,UAAFA,MAAE,GAAFA,MAAE,eAAFA,SAm0D+rH,EAAAH,EAAA,OAAA+V,EAn0D/rH5V,QAAES,UAAFT,MAAE,aAAFA,MAAE,EAAA0V,GAAAE,EAAA1U,KAAFlB,MAAE,GAAFA,YAAE,IAAA4V,EAAA7R,MAm0D6pH,WAAA8R,GAAAhW,EAAAC,GAA2I,GAA3I,EAAAD,IAn0D/pHG,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAFA,SAm0D0yH,EAAAH,EAAA,OAAA+V,EAn0D1yH5V,QAAES,UAAFT,MAAE,GAAFA,YAAE,IAAA4V,EAAA7R,MAm0DyxH,WAAA+R,GAAAjW,EAAAC,GAA4C,GAA5C,EAAAD,IAn0D3xHG,MAAE,QAAFA,MAAE,EAAAyV,GAAA,YAAFzV,MAAE,EAAA2V,GAAA,YAAF3V,MAAE,EAAA6V,GAAA,uBAAF7V,SAm0Du0H,EAAAH,EAAA,OAAAkW,EAAAjW,EAAAkW,MAAAC,EAAAnW,EAAA0F,KAn0Dv0HxF,MAAE,GAAFA,MAAE,OAAA+V,GAAF/V,MAAE,GAAFA,MAAE,QAAA+V,IAAAE,GAAFjW,MAAE,GAAFA,MAAE,OAAAiW,EAm0DqvH,WAAAC,GAAArW,EAAAC,GAAyG,GAAzG,EAAAD,IAn0DvvHG,MAAE,mBAAFA,CAm0DgiG,WAn0DhiGA,CAm0DgiG,WAn0DhiGA,MAAE,EAAA8V,GAAA,aAAF9V,aAm0Dg2H,EAAAH,EAAA,OAAAsW,EAAArW,EAAA2C,KAn0Dh2HzC,MAAE,GAAFA,MAAE,UAAAmW,EAAAC,YAm0D2rG,WAAAC,GAAAxW,EAAAC,GAAsgG,GAAtgG,EAAAD,IAn0D7rGG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,iCAAFA,MAAE,mBAAFA,SAm0DmsM,EAAAH,EAAA,OAAAa,EAn0DnsMV,cAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAAU,EAAA4V,aAAFtW,CAm0D49L,wBAAAU,EAAAN,WAAAQ,IAAA,gBAn0D59LZ,CAm0D49L,YAn0D59LA,MAAE,IAAAU,EAAAG,kBAm0D09L,WAAA0V,GAAA1W,EAAAC,GAAA,EAAAD,IAn0D59LG,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAFA,SAm0DqvP,EAAAH,IAn0DrvPG,MAAE,GAAFA,YAAE,4CAm0DouP,UAAAwW,GAAA3W,EAAAC,GAAA,EAAAD,IAn0DtuPG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,YAAE,sCAm0D+5P,UAAAyW,GAAA5W,EAAAC,GAAA,KAAAD,EAAA,OAAA6W,EAn0Dj6P1W,cAAE,GAAFA,MAAE,+BAAFA,MAAE,0BAAA2W,EAAF3W,MAAE0W,GAAA3T,MAAA6T,EAAF5W,QAAE,OAAFA,MAm0D6xQ4W,EAAAC,aAAAF,GAAe,GAn0D5yQ3W,MAAE,mBAAFA,eAm0D+sR,MAAAH,EAAA,OAAAiX,EAAAhX,EAAAW,UAAAkW,EAAA7W,EAAAiD,MAAAgU,EAn0D/sR/W,cAAE,GAAFA,MAAE,WAAA2W,EAAF3W,CAm0D81Q,YAAA8W,EAn0D91Q9W,CAm0D81Q,sBAAA+W,EAAAC,oBAAAF,GAn0D91Q9W,CAm0D81Q,kBAAA2W,EAn0D91Q3W,CAm0D81Q,YAn0D91QA,MAAE,IAAA+W,EAAAlW,kBAm0D41Q,WAAAoW,GAAApX,EAAAC,GAAA,KAAAD,EAAA,OAAAqX,EAn0D91QlX,cAAE,eAAFA,MAAE,yBAAAmX,EAAFnX,MAAEkX,GAAAzW,UAAA2W,EAAFpX,MAAE,UAAFA,MAm0D+/SoX,EAAAC,UAAAF,GAAiB,GAn0DhhTnX,MAAE,GAAFA,OAm0DwpT,MAAAH,EAAA,OAAAsX,EAAArX,EAAAW,UAn0DxpTT,MAAE,GAAFA,MAAE,IAAAmX,EAAAG,YAAA,IAm0D6oT,WAAAC,GAAA1X,EAAAC,GAAyD,GAAzD,EAAAD,IAn0D/oTG,MAAE,QAAFA,CAm0DyyR,iBAn0DzyRA,CAm0DyyR,eAn0DzyRA,MAAE,iBAAFA,MAAE,UAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,iBAAFA,cAAE,0BAAFA,MAAE,EAAAiX,GAAA,iBAAFjX,aAm0DwsT,EAAAH,EAAA,OAAAmK,EAn0DxsThK,cAAE,GAAFA,YAAE,gCAAFA,MAAE,GAAFA,MAAE,UAAAgK,EAAAwN,WAm0Du2S,QAAAC,GAAA,SAAAxL,GAAA,OAAAyL,MAAAzL,EAAA,EAAA0L,GAAA,kBAAAC,YAAA,aAAAC,GAAAhY,EAAAC,GAAA,KAAAD,EAAA,OAAAiY,EAn0Dz2S9X,cAAE,WAAFA,CAm0Dw3U,YAn0Dx3UA,MAAE,GAAFA,MAAE,eAAFA,MAAE,eAAFA,cAAE,yBAAFA,CAm0DsyV,cAn0DtyVA,MAAE,2BAAFA,MAAE8X,GAAA,MAAA9D,EAAFhU,QAAE,OAAFA,MAm0DkuWgU,EAAA+D,oBAAmB,GAn0DrvW/X,cAAE,WAAFA,MAAE,GAAFA,MAAE,eAAFA,WAm0Di4W,MAAAH,EAAA,OAAAmY,EAAAlY,EAAAW,UAAAkB,EAn0Dj4W3B,QAAE,IAAAiY,EAAAC,EAAFlY,MAAE,GAAFA,MAAE,IAAFA,MAAE,wCAAFA,MAAE,4BAAFA,MAAE,GAAAyX,GAAAO,IAAA,MAAFhY,MAAE,GAAFA,MAAE,kBAAAiY,EAAAtW,EAAAvB,WAAAQ,IAAA,iBAAAqX,EAAA5X,UAAFL,MAAE,GAAFA,MAAE,iBAAFA,MAAE,GAAA2X,IAAF3X,CAm0D6gW,kBAAAkY,EAAAvW,EAAAvB,WAAAQ,IAAA,iBAAAsX,EAAA7X,SAn0D7gWL,CAm0D6gW,UAAA2B,EAAAwW,aAn0D7gWnY,MAAE,GAAFA,YAAE,sCAm0Du3W,QAAAoY,GAAA,SAAAnM,GAAA,OAAAoM,QAAApM,EAAA,WAAAqM,GAAAzY,EAAAC,GAAA,EAAAD,IAn0Dz3WG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,MAAE,IAAFA,MAAE,qCAg7DkL,UAAAuY,GAAA1Y,EAAAC,GAAiyB,GAAjyB,EAAAD,GAh7DpLG,MAAE,GAg7Dm9B,EAAAH,EAAA,OAAA2Y,EAAA1Y,EAAAkB,KAh7Dr9BhB,MAAE,IAAAwY,EAAAtX,GAAA,IAg7Dm9B,WAAAuX,GAAA5Y,EAAAC,GAAohB,GAAphB,EAAAD,GAh7Dr9BG,MAAE,iBAg7Du+C,EAAAH,EAAA,OAAA6Y,EAh7Dz+C1Y,QAAE8R,MAAF9R,MAAE,kBAAA0Y,EAg7Dw0C,WAAAC,GAAA9Y,EAAAC,GAAA,EAAAD,GAh7D10CG,MAAE,gBAg7DkyD,UAAA4Y,GAAA/Y,EAAAC,GAAA,EAAAD,GAh7DpyDG,MAAE,gBAg7D+4D,UAAA6Y,GAAAhZ,EAAAC,GAAA,KAAAD,EAAA,OAAAiZ,EAh7Dj5D9Y,cAAE,eAAFA,MAAE,mBAAFA,MAAE8Y,GAAA,MAAAC,EAAF/Y,QAAEgB,KAAAkM,EAAFlN,QAAE,OAAFA,MAg7D8oDkN,EAAA8L,eAAAD,GAA0B,GAh7DxqD/Y,MAAE,EAAA2Y,GAAA,mBAAF3Y,MAAE,EAAA4Y,GAAA,mBAAF5Y,OAg7D06D,MAAAH,EAAA,OAAAkZ,EAh7D16D/Y,QAAEgB,KAAA0B,EAAF1C,cAAE,GAAFA,MAAE,QAAA0C,EAAAuW,YAAAC,SAAAH,EAAA7X,KAAFlB,MAAE,GAAFA,MAAE,OAAA0C,EAAAuW,YAAAC,SAAAH,EAAA7X,IAg7Di4D,WAAAiY,GAAAtZ,EAAAC,GAAA,EAAAD,IAh7Dn4DG,MAAE,eAAFA,MAAE,iBAAFA,QAg7D4nE,OAAAoZ,GAAA,SAAAnN,GAAA,OAAAlI,KAAAkI,EAAA,WAAAoN,GAAAxZ,EAAAC,GAAA,KAAAD,EAAA,OAAAyZ,EAh7D5nEtZ,cAAE,WAAFA,MAAE,EAAAyY,GAAA,kBAAFzY,MAAE,EAAA6Y,GAAA,gBAAF7Y,MAAE,EAAAmZ,GAAA,gBAAFnZ,MAAE,eAAFA,MAAE,yBAAA+Y,EAAF/Y,MAAEsZ,GAAAtY,KAAAiU,EAAFjV,QAAE,OAAFA,MAg7DqrEiV,EAAAsE,YAAAR,GAAuB,GAh7D5sE/Y,MAAE,UAAFA,MAAE,GAAFA,MAAE,eAAFA,SAg7DwzE,MAAAH,EAAA,OAAAkZ,EAAAjZ,EAAAkB,KAAA0X,EAAA5Y,EAAAgS,MAh7DxzE9R,MAAE,oBAAA0Y,GAAF1Y,MAAE,GAAFA,MAAE,eAAA+Y,EAAAS,UAAAT,EAAAS,SAAA5W,SAAA,OAAAmW,EAAAU,UAAFzZ,MAAE,GAAFA,MAAE,aAAA+Y,EAAAS,SAAA,KAAAT,EAAAS,SAAA5W,QAAF5C,MAAE,GAAFA,MAAE,cAAA+Y,EAAAU,UAAFzZ,MAAE,GAAFA,YAAE,iCAAFA,MAAE,EAAAoZ,GAAAL,EAAAhV,OAg7D+yE,WAAA2V,GAAA7Z,EAAAC,GAA2kB,GAA3kB,EAAAD,IAh7DjzEG,MAAE,QAAFA,CAg7DywF,aAh7DzwFA,MAAE,OAAFA,cAAE,GAAFA,SAg7D43F,EAAAH,EAAA,OAAA8Z,EAAA7Z,EAAAW,UAh7D53FT,MAAE,GAAFA,MAAE,GAAA2Z,EAAA5V,KAAA,IAg7Do3F,WAAA6V,GAAA/Z,EAAAC,GAA6C,GAA7C,EAAAD,IAh7Dt3FG,MAAE,GAAFA,MAAE,EAAA0Z,GAAA,cAAF1Z,SAg7Dm6F,EAAAH,EAAA,OAAAga,EAh7Dn6F7Z,QAAEyC,KAAFzC,MAAE,GAAFA,MAAE,UAAA6Z,EAg7DowF,WAAAC,GAAAja,EAAAC,GAAA,EAAAD,IAh7DtwFG,MAAE,aAAFA,MAAE,OAAFA,QAg7D2/F,UAAA+Z,GAAAla,EAAAC,GAAmC,GAAnC,EAAAD,IAh7D3/FG,MAAE,GAAFA,MAAE,EAAA4Z,GAAA,uBAAF5Z,MAAE,EAAA8Z,GAAA,eAAF9Z,SAg7D8hG,EAAAH,EAAA,OAAAga,EAAA/Z,EAAA2C,KAh7D9hGzC,MAAE,GAAFA,MAAE,OAAA6Z,EAAAjX,QAAF5C,MAAE,GAAFA,MAAE,QAAA6Z,EAAAjX,OAg7D8+F,WAAAoX,GAAAna,EAAAC,GAAoE,GAApE,EAAAD,IAh7Dh/FG,MAAE,YAAFA,MAAE,EAAA+Z,GAAA,uBAAF/Z,MAAE,0BAAFA,SAg7DojG,EAAAH,EAAA,OAAAoa,EAAAna,EAAAkB,KAh7DpjGhB,MAAE,GAAFA,MAAE,OAAFA,MAAE,IAAAia,GAg7D+mF,WAAAC,GAAAra,EAAAC,GAAwpB,GAAxpB,EAAAD,GAh7DjnFG,MAAE,GAg7DuwG,EAAAH,EAAA,OAAAsa,EAAAra,EAAAkB,KAh7DzwGhB,MAAE,IAAAma,EAAAC,KAAA,IAg7DuwG,QAAAC,GAAA,wCAAAC,GAAAza,EAAAC,GAAA,EAAAD,IAh7DzwGG,MAAE,SAAFA,MAAE,gBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAooE27B,EAAAH,IApoE37BG,MAAE,aAAFA,MAAE,EAAAqa,KAAFra,MAAE,GAAFA,MAAE,IAAFA,MAAE,0CAooEq7B,UAAAua,GAAA1a,EAAAC,GAA0/C,GAA1/C,EAAAD,GApoEv7BG,MAAE,GAooE+6E,EAAAH,EAAA,OAAA2a,EAAA1a,EAAAkB,KApoEj7EhB,MAAE,IAAAwa,EAAAtZ,GAAA,IAooE+6E,WAAAuZ,GAAA5a,EAAAC,GApoE/6E,GAooE+6E,EAAAD,IApoEj7EG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA6a,EAAA5a,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA0a,EAAArZ,UAAA,aAooEw0F,WAAAsZ,GAAA9a,EAAAC,GApoEx0F,GAooEw0F,EAAAD,IApoE10FG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA+a,EAAA9a,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA4a,EAAApZ,UAAA,aAooEiuG,WAAAqZ,GAAAhb,EAAAC,GAA8X,GAA9X,EAAAD,GApoEnuGG,MAAE,GAooE+lH,EAAAH,EAAA,OAAAib,EAAAhb,EAAAkB,KApoEjmHhB,MAAE,IAAA8a,EAAAC,SAAA,IAooE+lH,WAAAC,GAAAnb,EAAAC,GAA0qB,GAA1qB,EAAAD,GApoEjmHG,MAAE,iBAooEywI,EAAAH,EAAA,OAAAob,EApoE3wIjb,QAAE8R,MAAF9R,MAAE,kBAAAib,EAooEknI,WAAAC,GAAArb,EAAAC,GAAA,EAAAD,GApoEpnIG,MAAE,gBAooEonJ,UAAAmb,GAAAtb,EAAAC,GAAA,EAAAD,GApoEtnJG,MAAE,gBAooEyuJ,UAAAob,GAAAvb,EAAAC,GAAA,KAAAD,EAAA,OAAAwb,EApoE3uJrb,cAAE,eAAFA,MAAE,mBAAFA,MAAEqb,GAAA,MAAAC,EAAFtb,QAAEgB,KAAAqB,EAAFrC,MAAE,UAAFA,MAooEg9IqC,EAAA2W,eAAAsC,GAA0B,GApoE1+Itb,MAAE,EAAAkb,GAAA,mBAAFlb,MAAE,EAAAmb,GAAA,mBAAFnb,OAooE4wJ,MAAAH,EAAA,OAAAyb,EApoE5wJtb,QAAEgB,KAAAua,EAAFvb,MAAE,GAAFA,MAAE,GAAFA,MAAE,QAAAub,EAAAtC,YAAAC,SAAAoC,EAAApa,KAAFlB,MAAE,GAAFA,MAAE,OAAAub,EAAAtC,YAAAC,SAAAoC,EAAApa,IAooE2tJ,QAAAsa,GAAA,SAAAzM,GAAA,YAAAA,EAAA,WAAA0M,GAAA5b,EAAAC,GAAyS,GAAzS,EAAAD,IApoE7tJG,MAAE,YAAFA,MAAE,EAAAgb,GAAA,mBAAFhb,MAAE,EAAAob,GAAA,iBAAFpb,MAAE,SAAFA,CAooEi4J,UApoEj4JA,MAAE,GAAFA,cAAE,iBAAFA,SAooEsgK,EAAAH,EAAA,OAAAyb,EAAAxb,EAAAkB,KAAAia,EAAAnb,EAAAgS,MApoEtgK9R,MAAE,oBAAAib,GAAFjb,MAAE,GAAFA,MAAE,eAAAsb,EAAA9B,UAAA8B,EAAA9B,SAAA5W,SAAF5C,MAAE,GAAFA,MAAE,aAAAsb,EAAA9B,SAAA,KAAA8B,EAAA9B,SAAA5W,QAAF5C,MAAE,GAAFA,MAAE,aAAFA,MAAE,EAAAwb,GAAAF,EAAApa,KAAFlB,MAAE,GAAFA,MAAEsb,EAAAvX,KAooE05J,WAAA2X,GAAA7b,EAAAC,GAAquB,GAAruB,EAAAD,IApoE55JG,MAAE,QAAFA,CAooE8/K,aApoE9/KA,MAAE,OAAFA,cAAE,GAAFA,SAooEioL,EAAAH,EAAA,OAAA8b,EAAA7b,EAAAW,UApoEjoLT,MAAE,GAAFA,MAAE,GAAA2b,EAAA5X,KAAA,IAooEynL,WAAA6X,GAAA/b,EAAAC,GAAqD,GAArD,EAAAD,IApoE3nLG,MAAE,GAAFA,MAAE,EAAA0b,GAAA,cAAF1b,SAooEgrL,EAAAH,EAAA,OAAAgc,EApoEhrL7b,QAAEyC,KAAFzC,MAAE,GAAFA,MAAE,UAAA6b,EAooEy/K,WAAAC,GAAAjc,EAAAC,GAAA,EAAAD,IApoE3/KG,MAAE,aAAFA,MAAE,OAAFA,QAooEgxL,UAAA+b,GAAAlc,EAAAC,GAA2C,GAA3C,EAAAD,IApoEhxLG,MAAE,GAAFA,MAAE,EAAA4b,GAAA,uBAAF5b,MAAE,EAAA8b,GAAA,eAAF9b,SAooE2zL,EAAAH,EAAA,OAAAgc,EAAA/b,EAAA2C,KApoE3zLzC,MAAE,GAAFA,MAAE,OAAA6b,EAAAjZ,QAAF5C,MAAE,GAAFA,MAAE,QAAA6b,EAAAjZ,OAooEmwL,WAAAoZ,GAAAnc,EAAAC,GAAoF,GAApF,EAAAD,IApoErwLG,MAAE,YAAFA,MAAE,EAAA+b,GAAA,uBAAF/b,MAAE,0BAAFA,SAooEy1L,EAAAH,EAAA,OAAAsa,EAAAra,EAAAkB,KApoEz1LhB,MAAE,GAAFA,MAAE,OAAFA,MAAE,IAAAma,GAooEo1K,WAAA8B,GAAApc,EAAAC,GAAqyB,GAAryB,EAAAD,GApoEt1KG,MAAE,GAooEynM,EAAAH,EAAA,OAAAqc,EAAApc,EAAAkB,KApoE3nMhB,MAAE,IAAAkc,EAAA9B,KAAA,IAooEynM,WAAA+B,GAAAtc,EAAAC,GAAA,EAAAD,IApoE3nMG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAooE2+M,EAAAH,IApoE3+MG,MAAE,GAAFA,YAAE,uBAooE89M,UAAAoc,GAAAvc,EAAAC,GAAA,EAAAD,IApoEh+MG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAooEqqN,EAAAH,IApoErqNG,MAAE,GAAFA,YAAE,sBAooEwpN,UAAAqc,GAAAxc,EAAAC,GAAW,GAAX,EAAAD,IApoE1pNG,MAAE,EAAAmc,GAAA,mBAAFnc,MAAE,EAAAoc,GAAA,oBAooEmqN,EAAAvc,EAAA,OAAAyc,EAAAxc,EAAAkB,KApoErqNhB,MAAE,OAAAsc,EAAAC,WAAFvc,MAAE,GAAFA,MAAE,QAAAsc,EAAAC,UAooEwiN,QAAAC,GAAA,SAAAvQ,GAAA,OAAAwQ,SAAAxQ,EAAA,WAAAyQ,GAAA7c,EAAAC,GAA+wB,GAA/wB,EAAAD,IApoE1iNG,MAAE,SAAFA,CAooEsoO,UApoEtoOA,MAAE,GAAFA,MAAE,eAAFA,cAAE,iBAAFA,SAooEyzO,EAAAH,EAAA,OAAA8c,EAAA7c,EAAAkB,KApoEzzOhB,MAAE,aAAFA,MAAE,EAAAwb,GAAFxb,MAAE,EAAAwc,GAAAG,EAAAzb,MAAFlB,MAAE,GAAFA,YAAE,4BAooE8sO,WAAA4c,GAAA/c,EAAAC,GAA8X,GAA9X,EAAAD,GApoEhtOG,MAAE,oCAooE4kP,EAAAH,EAAA,OAAAgd,EAAA/c,EAAAW,UAAAsW,EApoE9kP/W,MAAE,GAAFA,MAAE,cAAA6c,EAAF7c,CAooEuhP,QAAA+W,EAAA+F,MAAA,WAAAC,GAAAld,EAAAC,GAAA,KAAAD,EAAA,OAAAmd,EApoEvhPhd,cAAE,iCAAFA,MAAE,sBAAAoC,GAAFpC,MAAEgd,GAAA,MAAAC,EAAFjd,QAAE,OAAFA,MAooEwoDid,EAAAC,cAAA9a,GAAqB,EApoE7pDpC,CAooE+pD,8BAAAoC,GApoE/pDpC,MAAEgd,GAAA,MAAAG,EAAFnd,QAAE,OAAFA,MAooEssDmd,EAAAC,gBAAAhb,GAAuB,EApoE7tDpC,CAooE+pD,uBAAAoC,GApoE/pDpC,MAAEgd,GAAA,MAAAK,EAAFrd,QAAE,OAAFA,MAooE+vDqd,EAAAC,YAAAlb,GAAmB,GApoElxDpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,2BAAFA,CAooEugE,uBApoEvgEA,MAAE,eAAFA,MAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAua,GAAA,mBAAFva,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAya,GAAA,mBAAFza,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAA2a,GAAA,mBAAF3a,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAA6a,GAAA,mBAAF7a,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAyb,GAAA,mBAAFzb,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAgc,GAAA,mBAAFhc,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAic,GAAA,mBAAFjc,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAqc,GAAA,mBAAFrc,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAA0c,GAAA,mBAAF1c,cAAE,GAAA4c,GAAA,sCAAF5c,OAooEsnP,MAAAH,EAAA,OAAAuD,EApoEtnPpD,cAAE,QAAFA,MAAE,KAAAoD,EAAAma,QAAFvd,CAooEsyC,iBApoEtyCA,MAAE,KAAAoD,EAAAoa,iBAAFxd,CAooEsyC,eApoEtyCA,MAAE,KAAAoD,EAAAqa,eAAFzd,CAooEsyC,aApoEtyCA,MAAE,KAAAoD,EAAAsa,aAAF1d,CAooEsyC,cApoEtyCA,MAAE,KAAAoD,EAAAua,cAAF3d,CAooEsyC,UAAAoD,EAAA0N,QApoEtyC9Q,CAooEsyC,cApoEtyCA,MAAE,KAAAoD,EAAAwa,yBAAF5d,MAAE,GAAFA,MAAE,gBAAAoD,EAAFpD,CAooEo6D,mBAAAoD,EAAAqM,kBApoEp6DzP,MAAE,GAAFA,MAAE,oBAAAoD,EAAAya,kBAAF7d,CAooEmmE,wBApoEnmEA,MAAE,+BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CAooE6xE,sBApoE7xEA,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAooEgkF,qBApoEhkFA,CAooEgkF,OAAAoD,EAAA0Z,MAAAlc,IAAA,cApoEhkFZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAooEy9F,qBApoEz9FA,CAooEy9F,OAAAoD,EAAA0Z,MAAAlc,IAAA,cApoEz9FZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,yBAAFA,CAooEg3G,qBApoEh3GA,CAooEg3G,OAAAoD,EAAA0Z,MAAAlc,IAAA,aApoEh3GZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CAooE0uH,cApoE1uHA,CAooE0uH,OAAAoD,EAAA0Z,MAAAlc,IAAA,SApoE1uHZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CAooEm+L,OAAAoD,EAAA0Z,MAAAlc,IAAA,SApoEn+LZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,8BAAFA,CAooEwzN,eApoExzNA,MAAE,GAAFA,MAAE,UAAAoD,EAAAkT,aAooEk+O,WAAAwH,GAAAje,EAAAC,GAA+d,GAA/d,EAAAD,IApoEp+OG,MAAE,GAAFA,MAAE,gCAAFA,MAAE,WAAFA,SAooEm8P,EAAAH,EAAA,OAAAke,EApoEn8P/d,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,IAAA+d,EAAAC,qBAooE24P,WAAAC,GAAApe,EAAAC,GApoE34P,GAooE24P,EAAAD,IApoE74PG,MAAE,EAAA8d,GAAA,uBAAF9d,MAAE,cAAAH,EAAA,OAAAI,EAAFD,cAAE,OAAFA,MAAE,IAAAC,EAAA+d,qBAooEmyP,QAAAE,GAAA,gEAAAC,GAAAte,EAAAC,GAAA,EAAAD,GApoEryPG,MAAE,gBA0yE0qD,UAAAoe,GAAAve,EAAAC,GAAA,EAAAD,GA1yE5qDG,MAAE,gBA0yEwxD,UAAAqe,GAAAxe,EAAAC,GAAA,KAAAD,EAAA,OAAAiZ,EA1yE1xD9Y,cAAE,eAAFA,MAAE,mBAAFA,MAAE8Y,GAAA,MAAAwF,EAAFte,QAAES,UAAAyM,EAAFlN,QAAE,OAAFA,MA0yEghDkN,EAAA8L,eAAAsF,GAA0B,GA1yE1iDte,MAAE,EAAAme,GAAA,mBAAFne,MAAE,EAAAoe,GAAA,mBAAFpe,OA0yEuzD,MAAAH,EAAA,OAAAye,EA1yEvzDte,QAAES,UAAAgD,EAAFzD,cAAE,WAAAyD,EAAA8a,WAAFve,MAAE,GAAFA,MAAE,QAAAse,EAAAE,WAAA/a,EAAA8a,WAAFve,MAAE,GAAFA,MAAE,OAAAse,EAAAE,UAAA/a,EAAA8a,UA0yE0wD,WAAAE,GAAA5e,EAAAC,GAAA,EAAAD,GA1yE5wDG,MAAE,WA0yEs6D,UAAA0e,GAAA7e,EAAAC,GAAA,EAAAD,IA1yEx6DG,MAAE,cAAFA,MAAE,GAAFA,MAAE,eAAFA,SA0yEiqE,EAAAH,IA1yEjqEG,MAAE,GAAFA,YAAE,wBA0yEopE,UAAA2e,GAAA9e,EAAAC,GAAA,EAAAD,IA1yEtpEG,MAAE,YAAFA,MAAE,iBAAFA,QA0yE+7F,OAAA4e,GAAA,SAAA3S,GAAA,OAAAwN,SAAAxN,EAAA,EAAA4S,GAAA,SAAAnM,GAAA,qBAAAA,EAAA,WAAAoM,GAAAjf,EAAAC,GAAsvB,GAAtvB,EAAAD,IA1yE/7FG,MAAE,UAAFA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SA0yEqrH,EAAAH,EAAA,OAAAye,EA1yErrHte,QAAES,UAAFT,MAAE,aAAFA,MAAE,EAAA6e,GAAF7e,MAAE,EAAA4e,GAAAN,EAAApd,MAAFlB,MAAE,GAAFA,MAAE,IAAFA,MAAE,yCA0yE+qH,WAAA+e,GAAAlf,EAAAC,GAAA,KAAAD,EAAA,OAAA0K,EA1yEjrHvK,cAAE,eAAFA,MAAE,yBAAAgf,EAAFhf,MAAEuK,GAAA9J,UAAA6d,EAAFte,QAAES,UAAA8a,EAAFvb,QAAE,OAAFA,MA0yEuhKub,EAAA0D,KAAAX,EAAAU,EAAA9d,IAAyB,GA1yEhjKlB,MAAE,WAAFA,MAAE,WAAFA,CA0yE6sK,YA1yE7sKA,MAAE,iBAAFA,cAAE,YAAFA,MAAE,GAAFA,WA0yEwgL,MAAAH,EAAA,OAAAmf,EAAAlf,EAAAW,UAAA+L,EA1yExgLxM,MAAE,GAAFA,MAAE,YAAFA,MAAE,IAAAwM,EAAA0S,uBAAFlf,MAAE,GAAFA,MAAE,IAAAgf,EAAAG,KAAA,IA0yEggL,WAAAC,GAAAvf,EAAAC,GAA0/B,GAA1/B,EAAAD,GA1yElgLG,MAAE,iCA0yE0/M,EAAAH,EAAA,OAAAye,EA1yE5/Mte,QAAES,UAAA4E,EAAFrF,cAAE,YAAAqF,EAAAkZ,UAAFve,CA0yEmzM,iBAAAse,EA1yEnzMte,CA0yEmzM,qBAAAqF,EAAAga,mBA1yEnzMrf,CA0yEmzM,mBAAAqF,EAAAoK,iBAAA,QAAA6P,GAAA,SAAAvQ,GAAA,+BAAAA,EAAA,EAAAwQ,GAAA,gEAAAC,GAAA3f,EAAAC,GAAA,KAAAD,EAAA,OAAAsC,EA1yEnzMnC,cAAE,UAAFA,CA0yE2uB,UA1yE3uBA,CA0yE2uB,QA1yE3uBA,CA0yE2uB,aA1yE3uBA,MAAE,iBAAAoC,GAAA,MAAAkc,EAAFte,MAAEmC,GAAA1B,UAAA4B,EAAFrC,QAAE,OAAFA,MA0yEkpCqC,EAAAoN,iBAAAgQ,gBAAAnB,EAAAlc,GAAoD,GA1yEtsCpC,gBAAE,WAAFA,MAAE,EAAAqe,GAAA,gBAAFre,MAAE,EAAAye,GAAA,yBAAFze,aAAE,GAAFA,cAAE,WAAFA,MAAE,GAAA0e,GAAA,mBAAF1e,MAAE,WAAFA,MAAE,kBAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,WAAFA,MAAE,kBAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,GAAA2e,GAAA,cAAF3e,MAAE,kBAAFA,CA0yE69F,gBA1yE79FA,MAAE,yBAAAse,EAAFte,MAAEmC,GAAA1B,UAAAoQ,EAAF7Q,QAAE,OAAFA,MA0yE4iG6Q,EAAA6O,iBAAApB,GAA4B,GA1yExkGte,MAAE,kBAAFA,cAAE,2BAAFA,MAAE,GAAA8e,GAAA,YAAF9e,MAAE,aAAFA,MAAE,gBAAFA,MAAE,yBAAA2f,EAAF3f,MAAEmC,GAAAmc,EAAAqB,EAAAlf,UAAAmf,EAAAD,EAAA5c,MAAAiO,EAAFhR,QAAE,OAAFA,MA0yEm+HgR,EAAA6O,OAAAvB,EAAAsB,GAAqB,GA1yEx/H5f,MAAE,YAAFA,MAAE,kBAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,gBAAFA,MAAE,yBAAA2f,EAAF3f,MAAEmC,GAAAmc,EAAAqB,EAAAlf,UAAAmf,EAAAD,EAAA5c,MAAA6E,EAAF5H,QAAE,OAAFA,MA0yEogJ4H,EAAAkY,SAAAxB,EAAAsB,GAAuB,GA1yE3hJ5f,MAAE,YAAFA,MAAE,kBAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,YAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,GAAA+e,GAAA,iBAAF/e,MAAE,aAAFA,MAAE,gBAAFA,MAAE,yBAAAse,EAAFte,MAAEmC,GAAA1B,UAAA4Q,EAAFrR,QAAE,OAAFA,MA0yEqyLqR,EAAA0O,OAAAzB,EAAApd,IAAqB,GA1yE1zLlB,MAAE,YAAFA,MAAE,kBAAFA,MAAE,IAAFA,MAAE,gBAAFA,oBAAE,GAAAof,GAAA,mCAAFpf,OA0yE0gN,MAAAH,EAAA,OAAAye,EAAAxe,EAAAW,UAAAmf,EAAA9f,EAAAiD,MAAAid,EA1yE1gNhgB,MAAE,GAAAoD,EAAFpD,cAAE,UAAAse,EAAA/B,WAAFvc,MAAE,cAAAse,GAAFte,MAAE,GAAFA,MAAE,SAAAse,EAAApd,KAAAkC,EAAAic,oBAAFrf,MAAE,mBAAAoD,EAAA0O,OAAF9R,MAAE,GAAFA,MAAE,UAAAoD,EAAAqM,iBAAAgE,WAAA6K,IAAFte,MAAE,GAAFA,MAAE,aAAAse,EAAA9E,SAAA,KAAA8E,EAAA9E,SAAA5W,OAAF5C,CA0yE29C,WAAAggB,GA1yE39ChgB,MAAE,GAAFA,MAAE,IAAAse,EAAAva,KAAA,KAAF/D,MAAE,GAAFA,MAAE,OAAAse,EAAA/B,WAAFvc,MAAE,GAAFA,MAAE,aAAFA,MAAE,GAAAwb,GAAFxb,MAAE,GAAAwc,GAAA8B,EAAApd,MAAFlB,MAAE,GAAFA,MAAE,IAAFA,MAAE,oCAAFA,MAAE,GAAFA,MAAE,aAAFA,MAAE,GAAAsf,GAAAhB,EAAApd,KAAFlB,MAAE,GAAFA,MAAE,IAAFA,MAAE,0BAAFA,MAAE,GAAFA,MAAE,mBAAFA,MAAE,GAAAuf,KAAFvf,MAAE,GAAFA,MAAE,mBAAFA,MAAE,GAAAke,KAAFle,MAAE,GAAFA,MAAE,eAAA4f,IAAF5f,MAAE,MAAAoD,EAAA8b,uBAAFlf,MAAE,GAAFA,MAAE,IAAFA,MAAE,8BAAFA,MAAE,GAAFA,MAAE,WAAA4f,IAAAxc,EAAA6c,eAAAzG,SAAA5W,OAAA,IAAF5C,MAAE,MAAAoD,EAAA8b,uBAAFlf,MAAE,GAAFA,MAAE,IAAFA,MAAE,gCAAFA,MAAE,GAAFA,YAAE,0BAAFA,MAAE,GAAFA,MAAE,UAAAoD,EAAA8c,eAAFlgB,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAoD,EAAA+c,uBAAFngB,MAAE,GAAFA,MAAE,IAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,OAAAse,EAAAE,UAAApb,EAAAmb,UA0yEswM,WAAA6B,GAAAvgB,EAAAC,GA+FxmL,GA/FwmL,EAAAD,GA1yExwMG,MAAE,gCAy4E8pB,EAAAH,EAAA,OAAAM,EAz4EhqBH,cAAE,YAAAG,EAAAoe,UAAFve,CAy4Emf,iBAAAG,EAAA8f,eAz4EnfjgB,CAy4Emf,mBAAAG,EAAAsP,iBAz4EnfzP,CAy4Emf,qBAAAG,EAAAkf,mBAAA,WAAAgB,GAAAxgB,EAAAC,GAAA,EAAAD,IAz4EnfG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,MAAE,IAAFA,MAAE,8DAy6E0N,UAAAsgB,GAAAzgB,EAAAC,GAAwL,GAAxL,EAAAD,IAz6E5NG,MAAE,QAAFA,MAAE,GAAFA,SAy6EoZ,EAAAH,EAAA,OAAA0gB,EAAAzgB,EAAAW,UAz6EpZT,MAAE,GAAFA,MAAE,GAAAugB,EAAAxc,KAAA,KAAAwc,EAAAlc,IAAA,IAy6E6Y,WAAAmc,GAAA3gB,EAAAC,GAAA,KAAAD,EAAA,OAAAmgB,EAz6E/YhgB,cAAE,cAAFA,MAAE,mBAAFA,MAAEggB,GAAA,MAAAvc,EAAFzD,QAAE,OAAFA,MAy6EufyD,EAAAD,SAAQ,GAz6E/fxD,MAAE,GAAFA,MAAE,eAAFA,cAAE,cAAFA,MAAE,mBAAFA,MAAEggB,GAAA,MAAAxb,EAAFxE,QAAE,OAAFA,MAy6EslBwE,EAAAd,UAAS,GAz6E/lB1D,MAAE,GAAFA,MAAE,eAAFA,OAy6E2rB,GAAAH,IAz6E3rBG,MAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,2BAy6EgrB,UAAAygB,GAAA5gB,EAAAC,GAAA,KAAAD,EAAA,OAAA2J,EAz6ElrBxJ,cAAE,eAAFA,MAAE,mBAAFA,MAAEwJ,GAAA,MAAA9G,EAAF1C,QAAE,OAAFA,MAmvFoyB0C,EAAAqS,SAAQ,GAnvF5yB/U,MAAE,GAAFA,MAAE,eAAFA,OAmvFy9B,MAAAH,EAAA,OAAAM,EAnvFz9BH,cAAE,WAAAG,EAAAC,WAAAE,SAAAH,EAAAC,WAAAC,UAAFL,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBAmvF88B,WAAA0gB,GAAA7gB,EAAAC,GAAA,KAAAD,EAAA,OAAA+N,EAnvFh9B5N,cAAE,eAAFA,MAAE,mBAAFA,MAAE4N,GAAA,MAAAmJ,EAAF/W,MAAE,UAAFA,MAmvFgrC+W,EAAA7W,OAAM,GAnvFtrCF,MAAE,GAAFA,MAAE,eAAFA,OAmvFm3C,MAAAH,EAAA,OAAAwF,EAnvFn3CrF,MAAE,GAAFA,MAAE,WAAAqF,EAAAjF,WAAAE,SAAA+E,EAAAjF,WAAAC,UAAFL,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBAmvFw2C,WAAA2gB,GAAA9gB,EAAAC,GAAS,GAAT,EAAAD,GAnvF12CG,MAAE,EAAA0gB,GAAA,iBAmvFi3C,EAAA7gB,EAAA,OAAAI,EAnvFn3CD,cAAE,mBAAAC,EAAAY,iBAmvFylC,WAAA+f,GAAA/gB,EAAAC,GAAA,EAAAD,IAnvF3lCG,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAFA,SAmvFq4E,EAAAH,IAnvFr4EG,MAAE,GAAFA,YAAE,uBAmvFo3E,UAAA6gB,GAAAhhB,EAAAC,GAAA,EAAAD,IAnvFt3EG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,YAAE,uBAmvF49E,UAAA8gB,GAAAjhB,EAAAC,GAA6R,GAA7R,EAAAD,GAnvF99EG,MAAE,6BAmvFyvF,EAAAH,EAAA,OAAAkhB,EAAAjhB,EAAA2C,KAnvF3vFzC,MAAE,SAAA+gB,EAmvFsvF,WAAAC,GAAAnhB,EAAAC,GAAmmD,GAAnmD,EAAAD,IAnvFxvFG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,iCAAFA,MAAE,mBAAFA,SAmvF21I,EAAAH,EAAA,OAAAmF,EAnvF31IhF,cAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAAgF,EAAAsR,aAAFtW,CAmvFwoI,wBAAAgF,EAAA5E,WAAAQ,IAAA,sBAnvFxoIZ,CAmvFwoI,YAnvFxoIA,MAAE,IAAAgF,EAAAnE,kBAmvFsoI,WAAAogB,GAAAphB,EAAAC,GAAA,EAAAD,IAnvFxoIG,MAAE,GAAFA,MAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,iBAmvFw7K,EAAAH,IAnvFx7KG,MAAE,GAAFA,YAAE,6BAmvFk4K,OAAAkhB,GAAA,SAAAnS,GAAA,gBAAAA,EAAA,0BAAAoS,GAAAthB,EAAAC,GAA+6D,GAA/6D,EAAAD,IAnvFp4KG,MAAE,WAAFA,MAAE,iCAAFA,MAAE,mBAAFA,SAmvFmzO,EAAAH,EAAA,OAAAuhB,EAnvFnzOphB,QAAE+C,MAAAyH,EAAFxK,MAAE,GAAFA,MAAE,GAAFA,MAAE,eAAAwK,EAAA6W,kBAAFrhB,CAmvFy8N,aAnvFz8NA,CAmvFy8N,wBAAAwK,EAAApK,WAAAQ,IAnvFz8NZ,MAAE,EAAAkhB,GAAAE,IAAFphB,CAmvFy8N,YAnvFz8NA,MAAE,IAAAwK,EAAA3J,kBAmvFu8N,QAAAygB,GAAA,SAAAvS,GAAA,gBAAAA,EAAA,WAAAwS,GAAA1hB,EAAAC,GAAA,KAAAD,EAAA,OAAA8K,EAnvFz8N3K,cAAE,UAAFA,CAmvF40L,WAnvF50LA,MAAE,wBAAFA,cAAE,UAAFA,CAmvFikM,cAnvFjkMA,MAAE,iBAAAoC,GAAA,MAAAgf,EAAFphB,MAAE2K,GAAA5H,MAAA6H,EAAF5K,MAAE,UAAFA,MAmvF42M4K,EAAA4W,gBAAA,MAAA5W,EAAA6W,QAAA,MAAA7W,EAAA6W,OAAAlb,OAAA6a,GAAA,KAAAxW,EAAA6W,OAAAlb,OAAA6a,GAAAne,KAAAb,EAAAsf,OAAAzgB,MAAAmgB,GAAgE,GAnvF56MphB,MAAE,mBAAFA,gBAAE,WAAFA,MAAE,cAAFA,cAAE,EAAAmhB,GAAA,aAAFnhB,MAAE,UAAFA,CAmvF82O,kBAnvF92OA,CAmvF82O,gBAnvF92OA,MAAE,IAAFA,MAAE,gBAAFA,MAAE,kBAAFA,cAAE,0BAAFA,CAmvF8zP,gBAnvF9zPA,MAAE,yBAAAohB,EAAFphB,MAAE2K,GAAA5H,MAAAwI,EAAFvL,MAAE,UAAFA,MAmvFijQuL,EAAAoW,iBAAA,MAAApW,EAAAkW,QAAA,MAAAlW,EAAAkW,OAAAlb,OAAA6a,GAAA,KAAA7V,EAAAkW,OAAAlb,OAAA6a,GAAAlgB,GAAAkgB,GAA0C,GAnvF3lQphB,MAAE,oBAAFA,MAAE,kBAAFA,MAAE,IAAFA,MAAE,gBAAFA,eAmvF0hR,MAAAH,EAAA,OAAA+hB,EAAA9hB,EAAAW,UAAA2gB,EAAAthB,EAAAiD,MAAAkS,EAnvF1hRjV,MAAE,GAAFA,MAAE,YAAAiV,EAAA7U,WAAAQ,IAAFZ,MAAE,GAAAshB,GAAAF,KAAFphB,MAAE,GAAFA,MAAE,SAAA4hB,GAAF5hB,MAAE,GAAFA,MAAE,YAAFA,MAAE,IAAAiV,EAAApU,mBAAFb,MAAE,GAAFA,MAAE,OAAAiV,EAAAoM,kBAAAze,QAAF5C,MAAE,GAAFA,MAAE,IAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAiV,EAAApU,mBAAFb,MAAE,GAAFA,MAAE,IAAFA,MAAE,2BAmvF+gR,WAAA6hB,GAAAhiB,EAAAC,GAA8N,GAA9N,EAAAD,IAnvFjhRG,MAAE,aAAFA,CAmvF2+J,UAnvF3+JA,CAmvF2+J,QAnvF3+JA,MAAE,QAAFA,MAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,GAAAihB,GAAA,uBAAFjhB,MAAE,SAAFA,gBAAE,YAAFA,MAAE,GAAAuhB,GAAA,eAAFvhB,WAmvF+uR,EAAAH,EAAA,OAAA8B,EAnvF/uR3B,MAAE,GAAFA,MAAE,GAAFA,YAAE,oBAAFA,MAAE,GAAFA,YAAE,oBAAFA,MAAE,GAAFA,MAAE,OAAA2B,EAAA0f,kBAAAze,QAAF5C,MAAE,GAAFA,MAAE,UAAA2B,EAAA4E,OAmvFitL,WAAAub,GAAAjiB,EAAAC,GAAA,KAAAD,EAAA,OAAAkI,EAnvFntL/H,cAAE,eAAFA,MAAE,mBAAFA,MAAE+H,GAAA,MAAA8I,EAAF7Q,MAAE,UAAFA,MAmvF0hS6Q,EAAAkR,gBAAe,GAnvFziS/hB,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,OAmvF2uS,GAAAH,IAnvF3uSG,MAAE,GAAFA,MAAE,IAAFA,MAAE,oCAmvFguS,OAAAgiB,GAAA,2DAAAC,GAAApiB,EAAAC,GAAmC,GAAnC,EAAAD,IAnvFluSG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,EAAA6hB,GAAA,iBAAF7hB,MAAE,SAAFA,MAAE,EAAA8hB,GAAA,iBAAF9hB,WAmvFqwS,EAAAH,EAAA,OAAAa,EAnvFrwSV,cAAE,QAAFA,MAAE,4BAAFA,CAmvFytJ,eAnvFztJA,MAAE,GAAFA,MAAE,SAAAU,EAAAwhB,qBAAAtf,QAAF5C,MAAE,GAAFA,MAAE,mBAAFA,MAAE,EAAAgiB,IAmvFg/R,WAAAG,GAAAtiB,EAAAC,GAAA,EAAAD,IAnvFl/RG,MAAE,UAAFA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAy7Fk6B,EAAAH,IAz7Fl6BG,MAAE,aAAFA,MAAE,EAAAqa,KAAFra,MAAE,GAAFA,MAAE,IAAFA,MAAE,qCAy7F45B,UAAAoiB,GAAAviB,EAAAC,GAA0/B,GAA1/B,EAAAD,GAz7F95BG,MAAE,GAy7Fs5D,EAAAH,EAAA,OAAAwiB,EAAAviB,EAAAkB,KAz7Fx5DhB,MAAE,IAAAqiB,EAAAnhB,GAAA,IAy7Fs5D,WAAAohB,GAAAziB,EAAAC,GAz7Ft5D,GAy7Fs5D,EAAAD,IAz7Fx5DG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA0iB,EAAAziB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAuiB,EAAAlhB,UAAA,aAy7F6tE,WAAAmhB,GAAA3iB,EAAAC,GAz7F7tE,GAy7F6tE,EAAAD,IAz7F/tEG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA4iB,EAAA3iB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAyiB,EAAAjhB,UAAA,aAy7FoiF,WAAAkhB,GAAA7iB,EAAAC,GAAqZ,GAArZ,EAAAD,IAz7FtiFG,MAAE,SAAFA,CAy7F20F,UAz7F30FA,MAAE,GAAFA,cAAE,iBAAFA,SAy7F27F,EAAAH,EAAA,OAAA8iB,EAAA7iB,EAAAkB,KAz7F37FhB,MAAE,aAAFA,MAAE,EAAAwb,GAAAmH,EAAAzhB,KAAFlB,MAAE,GAAFA,MAAE2iB,EAAA5e,KAy7F+1F,WAAA6e,GAAA/iB,EAAAC,GAAqS,GAArS,EAAAD,GAz7Fj2FG,MAAE,GAy7FooG,EAAAH,EAAA,OAAAgjB,EAAA/iB,EAAAkB,KAz7FtoGhB,MAAE,IAAA6iB,EAAA5f,KAAA,IAy7FooG,WAAA6f,GAAAjjB,EAAAC,GAAA,EAAAD,IAz7FtoGG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAy7Fw7G,EAAAH,IAz7Fx7GG,MAAE,GAAFA,YAAE,uBAy7F26G,UAAA+iB,GAAAljB,EAAAC,GAAA,EAAAD,IAz7F76GG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAy7FilH,EAAAH,IAz7FjlHG,MAAE,GAAFA,YAAE,sBAy7FokH,UAAAgjB,GAAAnjB,EAAAC,GAAW,GAAX,EAAAD,IAz7FtkHG,MAAE,EAAA8iB,GAAA,mBAAF9iB,MAAE,EAAA+iB,GAAA,oBAy7F+kH,EAAAljB,EAAA,OAAAojB,EAAAnjB,EAAAkB,KAz7FjlHhB,MAAE,OAAAijB,EAAA1G,WAAFvc,MAAE,GAAFA,MAAE,QAAAijB,EAAA1G,UAy7Fw+G,WAAA2G,GAAArjB,EAAAC,GAAooB,GAApoB,EAAAD,GAz7F1+GG,MAAE,6BAy7F4mI,EAAAH,EAAA,OAAAsjB,EAAArjB,EAAAW,UAz7F9mIT,MAAE,aAAAmjB,EAAFnjB,CAy7Fi+H,eAz7Fj+HA,CAy7Fi+H,iCAAAojB,GAAAvjB,EAAAC,GAA0oB,GAA1oB,EAAAD,IAz7Fj+HG,MAAE,GAAFA,MAAE,iBAAFA,MAAE,GAAFA,SAy7F2mJ,EAAAH,EAAA,OAAAwjB,EAz7F3mJrjB,MAAE,GAAAgB,KAAAwJ,EAAFxK,cAAE,GAAFA,MAAE,IAAAqjB,EAAA9c,OAAA3D,OAAA4H,EAAA8Y,aAAA,IAy7F0lJ,WAAAC,GAAA1jB,EAAAC,GAAA,EAAAD,GAz7F5lJG,MAAE,gBAy7FytJ,UAAAwjB,GAAA3jB,EAAAC,GAAA,KAAAD,EAAA,OAAAkI,EAz7F3tJ/H,cAAE,eAAFA,MAAE,mBAAFA,MAAE+H,GAAA,MAAAsb,EAAFrjB,QAAEgB,KAAAuK,EAAFvL,QAAE,OAAFA,MAy7F6xIuL,EAAAkY,mBAAAJ,GAAyB,GAz7FtzIrjB,MAAE,EAAAojB,GAAA,uBAAFpjB,MAAE,EAAAujB,GAAA,0BAAFvjB,cAy7F8xJ,MAAAH,EAAA,OAAA0K,EAz7F9xJvK,MAAE,GAAAqjB,EAAFrjB,QAAEgB,KAAAqJ,EAAFrK,cAAE,GAAFA,MAAE,QAAAqK,EAAAqZ,aAAAL,EAAAniB,KAAA,GAAAmiB,EAAA9c,OAAA3D,OAAF5C,CAy7Fg7I,WAAAuK,EAAA,WAAAoZ,GAAA9jB,EAAAC,GAAoY,GAApY,EAAAD,IAz7Fh7IG,MAAE,YAAFA,MAAE,EAAAkjB,GAAA,+BAAFljB,MAAE,WAAFA,MAAE,EAAAwjB,GAAA,iBAAFxjB,SAy7FozJ,EAAAH,EAAA,OAAAwjB,EAAAvjB,EAAAkB,KAAAgE,EAz7FpzJhF,cAAE,GAAFA,MAAE,UAAFA,MAAE,IAAAqjB,EAAA9c,OAAA,EAAAvB,EAAA0e,aAAAL,EAAAniB,KAAA,IAAFlB,MAAE,GAAFA,MAAE,OAAAqjB,EAAA9c,OAAA3D,OAAAoC,EAAAse,aAy7FuvI,WAAAM,GAAA/jB,EAAAC,GAAgvB,GAAhvB,EAAAD,GAz7FzvIG,MAAE,oCAy7Fu+J,EAAAH,EAAA,OAAAgkB,EAAA/jB,EAAAW,UAAAC,EAz7Fz+JV,cAAE,cAAA6jB,EAAF7jB,CAy7Fo9J,QAAAU,EAAAoc,MAAA,QAAAgH,GAAA,6BAAAC,GAAAlkB,EAAAC,GAAA,KAAAD,EAAA,OAAAmkB,EAz7Fp9JhkB,cAAE,UAAFA,CA4iG8U,UA5iG9UA,CA4iG8U,WA5iG9UA,MAAE,GAAFA,MAAE,eAAFA,cAAE,eAAFA,MAAE,yBAAAoC,GAAA,MAAA6hB,EAAFjkB,MAAEgkB,GAAAvjB,UAAA,OAAFT,MAAEikB,EAAAlgB,KAAA3B,EA4iGwkB,EA5iG1kBpC,CA4iGokB,yBAAAoC,GA5iGpkBpC,MAAEgkB,GAAA,MAAAE,EAAFlkB,MAAE,IAAAgF,EAAFhF,QAAE,OAAFA,MA4iG2pBgF,EAAAmf,YAAA/hB,EAAA8hB,GAA8C,GA5iGzsBlkB,gBAAE,UAAFA,CA4iGqwB,WA5iGrwBA,MAAE,GAAFA,MAAE,gBAAFA,cAAE,kCAAFA,MAAE,yBAAAoC,GAAA,MAAA6hB,EAAFjkB,MAAEgkB,GAAAvjB,UAAA,OAAFT,MAAEikB,EAAA1d,OAAAnE,EA4iGs8B,EA5iGx8BpC,CA4iGk8B,2BA5iGl8BA,MAAEgkB,GAAA,MAAAthB,EAAF1C,QAAE,OAAFA,MA4iGo+B0C,EAAA0hB,mBAAkB,EA5iGt/BpkB,CA4iGk8B,kBA5iGl8BA,MAAEgkB,GAAA,MAAAxX,EAAFxM,QAAE,OAAFA,MA4iGihCwM,EAAA4X,mBAAkB,GA5iGniCpkB,gBAAE,YAAFA,CA4iGutC,gBA5iGvtCA,MAAE,yBAAAikB,EAAFjkB,MAAEgkB,GAAAvjB,UAAA4E,EAAFrF,QAAE,OAAFA,MA4iG82CqF,EAAAJ,aAAAgf,EAAAlgB,MAAwB,GA5iGt4C/D,MAAE,gBAAFA,MAAE,kBAAFA,WA4iG+9C,MAAAH,EAAA,OAAAokB,EAAAnkB,EAAAW,UA5iG/9CT,MAAE,GAAFA,YAAE,uBAAFA,MAAE,GAAFA,MAAE,UAAAikB,EAAAlgB,MAAF/D,MAAE,GAAFA,YAAE,+BAAFA,MAAE,GAAFA,MAAE,UAAAikB,EAAA1d,OAAFvG,CA4iGk8B,YAAAikB,EAAAlgB,KA5iGl8B/D,CA4iGk8B,gBAAAikB,EAAAlgB,MA5iGl8B/D,MAAE,GAAFA,MAAE,QAAFA,MAAE,+BA4iGk1C,WAAAqkB,GAAAxkB,EAAAC,GAAA,EAAAD,IA5iGp1CG,MAAE,iBAAFA,CA4iG41D,mBA5iG51DA,CA4iG41D,aA5iG51DA,MAAE,GAAFA,MAAE,eAAFA,aA4iGyhE,EAAAH,IA5iGzhEG,MAAE,uBAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,oEA4iGghE,UAAAskB,GAAAzkB,EAAAC,GAA4b,GAA5b,EAAAD,IA5iGlhEG,MAAE,eAAFA,MAAE,GAAFA,SA4iG88E,EAAAH,EAAA,OAAA0kB,EAAAzkB,EAAAW,UA5iG98ET,MAAE,QAAAukB,EAAArjB,IAAFlB,MAAE,GAAFA,MAAE,IAAAukB,EAAAxgB,KAAA,IA4iGm8E,WAAAygB,GAAA3kB,EAAAC,GAAA,KAAAD,EAAA,OAAAyZ,EA5iGr8EtZ,cAAE,uBAAFA,MAAE,eAAFA,MAAE,eAAFA,MAAE,yBAAAoC,GAAFpC,MAAEsZ,GAAA,MAAArE,EAAFjV,MAAE,UAAFA,MAAEiV,EAAAwP,wBAAAriB,EAAA,GAAFpC,MAAE,EAAAskB,GAAA,iBAAFtkB,SA4iGu+E,MAAAH,EAAA,OAAA6kB,EA5iGv+E1kB,QAAEyC,KAAAyK,EAAFlN,cAAE,QAAFA,MAAE,sCAAFA,MAAE,GAAFA,MAAE,UAAAkN,EAAAuX,yBAAFzkB,MAAE,GAAFA,MAAE,UAAA0kB,EA4iGy2E,WAAAC,GAAA9kB,EAAAC,GAAA,EAAAD,IA5iG32EG,MAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,SA4iGoxF,EAAAH,IA5iGpxFG,MAAE,GAAFA,YAAE,sBA4iG6wF,UAAA4kB,GAAA/kB,EAAAC,GAAA,EAAAD,IA5iG/wFG,MAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,SA4iGs3F,EAAAH,IA5iGt3FG,MAAE,GAAFA,YAAE,wBA4iG+2F,UAAA6kB,GAAAhlB,EAAAC,GAAA,EAAAD,IA5iGj3FG,MAAE,QAAFA,MAAE,cAAFA,QA4iG2iH,UAAA8kB,GAAAjlB,EAAAC,GAAqI,GAArI,EAAAD,IA5iG3iHG,MAAE,QAAFA,MAAE,GAAFA,SA4iGgrH,EAAAH,EAAA,OAAAklB,EA5iGhrH/kB,QAAES,UAAFT,MAAE,GAAFA,MAAE,IAAA+kB,EAAAxe,OAAAye,KAAA,SA4iGyqH,WAAAC,GAAAplB,EAAAC,GAAsyB,GAAtyB,EAAAD,IA5iG3qHG,MAAE,WAAFA,MAAE,EAAA6kB,GAAA,YAAF7kB,MAAE,EAAA8kB,GAAA,YAAF9kB,MAAE,OAAFA,CA4iGwsH,oBA5iGxsHA,MAAE,cAAFA,MAAE,eAAFA,gBAAE,OAAFA,CA4iGi8H,oBA5iGj8HA,MAAE,2BAAFA,gBAAE,QAAFA,CA4iG4xI,qBA5iG5xIA,MAAE,eAAFA,aA4iGi9I,EAAAH,EAAA,OAAAklB,EAAAjlB,EAAAW,UAAAmK,EA5iGj9I5K,MAAE,GAAFA,MAAE,aAAA4K,EAAAsa,kBAAAH,EAAA7jB,IAAAD,MAAAkkB,SAAFnlB,MAAE,YAAA4K,EAAAsa,kBAAAH,EAAA7jB,KAAFlB,MAAE,GAAFA,MAAE,SAAA4K,EAAAwa,SAAAxiB,QAAF5C,MAAE,GAAFA,MAAE,SAAA4K,EAAAwa,SAAAxiB,QAAF5C,MAAE,GAAFA,MAAE,cAAFA,MAAE,oBAAFA,MAAE,GAAFA,MAAE,eAAA4K,EAAAvC,aA4iG8oI,WAAAgd,GAAAxlB,EAAAC,GAAmY,GAAnY,EAAAD,IA5iGhpIG,MAAE,WAAFA,CA4iGkmF,aA5iGlmFA,CA4iGkmF,UA5iGlmFA,CA4iGkmF,QA5iGlmFA,MAAE,EAAA2kB,GAAA,YAAF3kB,MAAE,EAAA4kB,GAAA,YAAF5kB,MAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,QAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,SAAFA,MAAE,IAAFA,MAAE,gBAAFA,kBAAE,GAAAilB,GAAA,cAAFjlB,WA4iGmhJ,EAAAH,EAAA,OAAA8B,EA5iGnhJ3B,MAAE,GAAFA,MAAE,GAAFA,MAAE,SAAA2B,EAAAyjB,SAAAxiB,QAAF5C,MAAE,GAAFA,MAAE,SAAA2B,EAAAyjB,SAAAxiB,QAAF5C,MAAE,GAAFA,YAAE,oBAAFA,MAAE,GAAFA,YAAE,uBAAFA,MAAE,GAAFA,YAAE,gCAAFA,MAAE,GAAFA,MAAE,UAAA2B,EAAAyjB,SAAFplB,CA4iG4rG,eAAA2B,EAAA2jB,UAAA,WAAAC,GAAA1lB,EAAAC,GAAw3C,GAAx3C,EAAAD,IA5iG5rGG,MAAE,GAAFA,MAAE,EAAAqkB,GAAA,oBAAFrkB,MAAE,YAAFA,MAAE,EAAAwkB,GAAA,yBAAFxkB,cAAE,EAAAqlB,GAAA,gBAAFrlB,SA4iGojJ,EAAAH,EAAA,OAAA6kB,EAAA5kB,EAAA2C,KA5iGpjJzC,MAAE,GAAFA,MAAE,WAAA0kB,EAAA9hB,QAAF5C,MAAE,GAAFA,MAAE,OAAA0kB,EAAA9hB,QAAF5C,MAAE,GAAFA,MAAE,SAAA0kB,EAAA9hB,OA4iG6lF,WAAA4iB,GAAA3lB,EAAAC,GAAA,KAAAD,EAAA,OAAA+N,EA5iG/lF5N,cAAE,mBAAFA,CAmoG6O,8BAnoG7OA,MAAE,8BAAAoC,GAAFpC,MAAE4N,GAAA,MAAAmJ,EAAF/W,QAAE,OAAFA,MAmoGgb+W,EAAA0O,YAAArjB,GAAmB,GAnoGncpC,MAAE,WAAFA,MAAE,WAAFA,SAmoGse,MAAAH,EAAA,OAAAM,EAnoGteH,cAAE,GAAFA,MAAE,yBAAFA,MAAE,IAAAG,EAAAulB,qBAAF1lB,CAmoG+U,sBAnoG/UA,MAAE,IAAAG,EAAAwlB,kBAmoG6U,WAAAC,GAAA/lB,EAAAC,GAA0kC,GAA1kC,EAAAD,GAnoG/UG,MAAE,GAmoGu5C,EAAAH,EAAA,OAAAgmB,EAAA/lB,EAAAkB,KAnoGz5ChB,MAAE,IAAA6lB,EAAA3kB,GAAA,IAmoGu5C,WAAA4kB,GAAAjmB,EAAAC,GAnoGv5C,GAmoGu5C,EAAAD,IAnoGz5CG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAAkmB,EAAAjmB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA+lB,EAAA1kB,UAAA,aAmoGkuD,WAAA2kB,GAAAnmB,EAAAC,GAnoGluD,GAmoGkuD,EAAAD,IAnoGpuDG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAAomB,EAAAnmB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAimB,EAAAzkB,UAAA,aAmoG6iE,WAAA0kB,GAAArmB,EAAAC,GAnoG7iE,GAmoG6iE,EAAAD,IAnoG/iEG,MAAE,YAAFA,MAAE,qBAAAH,EAAA,OAAAsmB,EAAArmB,EAAA2C,KAAFzC,MAAE,MAAFA,MAAE,IAAAmmB,EAAA,QAAFnmB,MAmoGo6E,WAAAomB,GAAAvmB,EAAAC,GAAA,EAAAD,IAnoGp6EG,MAAE,YAAFA,MAAE,iBAAFA,QAmoG2oF,UAAAqmB,GAAAxmB,EAAAC,GAAwD,GAAxD,EAAAD,IAnoG3oFG,MAAE,YAAFA,MAAE,EAAAkmB,GAAA,cAAFlmB,MAAE,EAAAomB,GAAA,0BAAFpmB,gBAmoGmsF,EAAAH,EAAA,OAAAymB,EAAAxmB,EAAAkB,KAAAsY,EAnoGnsFtZ,MAAE,GAAFA,MAAE,GAAFA,MAAE,OAAAsmB,EAAA5c,cAAF1J,CAmoGo0E,WAAAsZ,EAAA,QAAAiN,GAAA,SAAAxX,EAAA2F,GAAA,4BAAA3F,EAAA,WAAA2F,EAAA,WAAA8R,GAAA3mB,EAAAC,GAAk3B,GAAl3B,EAAAD,IAnoGp0EG,MAAE,SAAFA,CAmoG8kG,UAnoG9kGA,MAAE,GAAFA,cAAE,iBAAFA,SAmoGsrG,EAAAH,EAAA,OAAAoH,EAAAnH,EAAAkB,KAnoGtrGhB,MAAE,aAAFA,MAAE,EAAAumB,GAAAtf,EAAAiI,UAAAjI,EAAA/F,KAAFlB,MAAE,GAAFA,MAAEiH,EAAAlD,KAmoGomG,WAAA0iB,GAAA5mB,EAAAC,GAA0T,GAA1T,EAAAD,GAnoGtmGG,MAAE,GAmoG85G,EAAAH,EAAA,OAAA6mB,EAAA5mB,EAAAkB,KAnoGh6GhB,MAAE,IAAA0mB,EAAAriB,IAAA,IAmoG85G,WAAAsiB,GAAA9mB,EAAAC,GAAA,EAAAD,IAnoGh6GG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAmoGitH,EAAAH,IAnoGjtHG,MAAE,GAAFA,YAAE,uBAmoGosH,UAAA4mB,GAAA/mB,EAAAC,GAAA,EAAAD,IAnoGtsHG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAmoG42H,EAAAH,IAnoG52HG,MAAE,GAAFA,YAAE,wBAmoG+1H,UAAA6mB,GAAAhnB,EAAAC,GAAW,GAAX,EAAAD,IAnoGj2HG,MAAE,EAAA2mB,GAAA,mBAAF3mB,MAAE,EAAA4mB,GAAA,oBAmoG02H,EAAA/mB,EAAA,OAAAklB,EAAAjlB,EAAAkB,KAnoG52HhB,MAAE,OAAA+kB,EAAAI,SAAFnlB,MAAE,GAAFA,MAAE,QAAA+kB,EAAAI,QAmoGiwH,WAAA2B,GAAAjnB,EAAAC,GAnoGjwH,GAmoGiwH,EAAAD,IAnoGnwHG,MAAE,GAAFA,MAAE,uBAAAH,EAAA,OAAAknB,EAAAjnB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA+mB,EAAA3e,MAAA2e,EAAA1e,cAAA,IAmoGqsI,WAAA2e,GAAAnnB,EAAAC,GAnoGrsI,GAmoGqsI,EAAAD,IAnoGvsIG,MAAE,GAAFA,MAAE,uBAAAH,EAAA,OAAAonB,EAAAnnB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAinB,EAAAze,aAAAye,EAAA5e,cAAA,IAmoGu+I,WAAA6e,GAAArnB,EAAAC,GAA2nB,GAA3nB,EAAAD,IAnoGz+IG,MAAE,aAAFA,MAAE,GAAFA,SAmoGomK,EAAAH,EAAA,OAAAsnB,EAnoGpmKnnB,QAAES,UAAFT,MAAE,GAAFA,MAAE,IAAAmnB,EAAAC,eAAA,cAmoG+jK,WAAAC,GAAAxnB,EAAAC,GAAiE,GAAjE,EAAAD,IAnoGjkKG,MAAE,gBAAFA,CAmoG8xJ,WAnoG9xJA,CAmoG8xJ,SAnoG9xJA,MAAE,GAAFA,MAAE,EAAAknB,GAAA,eAAFlnB,aAmoGkoK,EAAAH,EAAA,OAAAsnB,EAAArnB,EAAAW,UAnoGloKT,MAAE,cAAAmnB,EAAAG,cAAA,KAAAH,EAAAG,cAAAvjB,MAAF/D,MAAE,GAAFA,MAAE,IAAAmnB,EAAAI,YAAA,IAAFvnB,MAAE,GAAFA,MAAE,OAAAmnB,EAAAC,eAmoGi/J,WAAAI,GAAA3nB,EAAAC,GAAoM,GAApM,EAAAD,GAnoGn/JG,MAAE,EAAAqnB,GAAA,mBAmoGqrK,EAAAxnB,EAAA,OAAA4nB,EAAA3nB,EAAAkB,KAnoGvrKhB,MAAE,UAAAynB,EAAAC,YAmoG8uJ,WAAAC,GAAA9nB,EAAAC,GAAgnB,GAAhnB,EAAAD,GAnoGhvJG,MAAE,oCAmoG81K,EAAAH,EAAA,OAAA+nB,EAAA9nB,EAAAW,UAAA4E,EAnoGh2KrF,cAAE,cAAA4nB,EAAF5nB,CAmoG20K,QAAAqF,EAAAyX,MAAA,WAAA+K,GAAAhoB,EAAAC,GAAA,KAAAD,EAAA,OAAAiZ,EAnoG30K9Y,cAAE,eAAFA,MAAE,mBAAFA,MAAE8Y,GAAA,MAAAnX,EAAF3B,QAAE,OAAFA,MA47Gk2B2B,EAAAoT,SAAQ,GA57G12B/U,MAAE,GAAFA,MAAE,eAAFA,OA47GqkC,MAAAH,EAAA,OAAAM,EA57GrkCH,cAAE,WAAAG,EAAAC,WAAAE,SAAAH,EAAAC,WAAAC,UAAA,IAAAF,EAAA2nB,qBAAA1C,SAAAxiB,QAAF5C,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBA47G0jC,WAAA+nB,GAAAloB,EAAAC,GAAA,KAAAD,EAAA,OAAAyZ,EA57G5jCtZ,cAAE,eAAFA,MAAE,mBAAFA,MAAEsZ,GAAA,MAAArE,EAAFjV,MAAE,UAAFA,MA47G6xCiV,EAAA/U,OAAM,GA57GnyCF,MAAE,GAAFA,MAAE,eAAFA,OA47Gs/C,MAAAH,EAAA,OAAAmC,EA57Gt/ChC,MAAE,GAAFA,MAAE,YAAAgC,EAAA5B,WAAAE,SAAA0B,EAAA5B,WAAAC,YAAA2B,EAAAkT,iBAAFlV,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBA47G2+C,WAAAgoB,GAAAnoB,EAAAC,GAAS,GAAT,EAAAD,GA57G7+CG,MAAE,EAAA+nB,GAAA,iBA47Go/C,EAAAloB,EAAA,OAAAI,EA57Gt/CD,cAAE,mBAAAC,EAAAiK,kBA47GssC,QAAA+d,GAAA,uCAAAC,GAAAroB,EAAAC,GAAwkC,GAAxkC,EAAAD,IA57GxsCG,MAAE,wBAAFA,MAAE,cAAFA,MAAE,WAAFA,MAAE,GAAFA,MAAE,eAAFA,WA47GgxE,EAAAH,EAAA,OAAAsE,EA57GhxEnE,cAAE,GAAFA,MAAE,cAAAmE,EAAA/D,WAAAQ,IAAFZ,MAAE,EAAAioB,MAAFjoB,MAAE,GAAFA,YAAE,sBA47GswE,WAAAmoB,GAAAtoB,EAAAC,GAAA,KAAAD,EAAA,OAAAkI,EA57GxwE/H,cAAE,iBAAFA,MAAE,uBAAFA,MAAE+H,GAAA,MAAAqgB,EAAFpoB,QAAES,UAAA8K,EAAFvL,MAAE,UAAFA,MA47GijGuL,EAAA8c,kBAAAD,EAAAlnB,IAA6B,GA57G9kGlB,MAAE,0BAAFA,MAAE,GAAFA,MAAE,wBAAFA,OA47Gi3G,MAAAH,EAAA,OAAAuoB,EA57Gj3GpoB,QAAES,UAAFT,MAAE,GAAFA,MAAE,cAAAooB,EAAAnlB,MAAFjD,MAAE,GAAFA,MAAE,IAAFA,MAAE,IAAAooB,EAAAnlB,MAAA,IA47Go2G,WAAAqlB,GAAAzoB,EAAAC,GAA8D,GAA9D,EAAAD,IA57Gt2GG,MAAE,GAAFA,MAAE,EAAAmoB,GAAA,mBAAFnoB,SA47Go6G,EAAAH,EAAA,OAAAuoB,EAAAtoB,EAAAW,UAAA8nB,EA57Gp6GvoB,MAAE,GAAFA,MAAE,GAAFA,MAAE,QAAAuoB,EAAAC,iBAAAJ,EAAAnlB,MA47Gk7F,WAAAwlB,GAAA5oB,EAAAC,GAAA,KAAAD,EAAA,OAAAuR,EA57Gp7FpR,cAAE,kBAAFA,CA47GolF,WA57GplFA,CA47GolF,YA57GplFA,MAAE,EAAAsoB,GAAA,uBAAFtoB,MAAE,WAAFA,cAAE,eAAFA,MAAE,mBAAFA,MAAEoR,GAAA,MAAAC,EAAFrR,MAAE,UAAFA,MA47GmhHqR,EAAAqX,kBAAiB,GA57GpiH1oB,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,WA47G2uH,MAAAH,EAAA,OAAA2K,EA57G3uHxK,MAAE,GAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,IAAAwK,EAAAme,mBAAF3oB,MAAE,GAAFA,MAAE,IAAFA,MAAE,qCA47GguH,WAAA4oB,GAAA/oB,EAAAC,GAAA,EAAAD,IA57GluHG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,EAAAyoB,GAAA,wBAAFzoB,SA47Go1H,EAAAH,GA57Gp1HG,MAAE,QAAFA,MAAE,uBA47G+gF,UAAA6oB,GAAAhpB,EAAAC,GAAA,EAAAD,IA57GjhFG,MAAE,GAAFA,MAAE,EAAA4oB,GAAA,mBAAF5oB,QA47Gm3H,UAAA8oB,GAAAjpB,EAAAC,GAAif,GAAjf,EAAAD,IA57Gn3HG,MAAE,iBAAFA,MAAE,GAAFA,SA47Go2I,EAAAH,EAAA,OAAAkpB,EAAAjpB,EAAAW,UA57Gp2IT,MAAE,YAAA+oB,EAAA9lB,KAAFjD,CA47GysI,aA57GzsIA,MAAE,GAAFA,MAAE,IAAA+oB,EAAAhlB,KAAA,IA47Gu1I,QAAAilB,GAAA,uCAAAC,GAAAppB,EAAAC,GAAA,EAAAD,IA57Gz1IG,MAAE,UAAFA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SA47GqrJ,EAAAH,IA57GrrJG,MAAE,aAAFA,MAAE,EAAAgpB,KAAFhpB,MAAE,GAAFA,MAAE,IAAFA,MAAE,iCA47G+qJ,UAAAkpB,GAAArpB,EAAAC,GAA8B,GAA9B,EAAAD,IA57GjrJG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,YAAFA,MAAE,EAAA8oB,GAAA,mBAAF9oB,MAAE,UAAFA,cAAE,SAAFA,MAAE,EAAAipB,GAAA,YAAFjpB,WA47G+sJ,EAAAH,EAAA,OAAAmD,EA57G/sJhD,cAAE,QAAFA,MAAE,gCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,UAAAgD,EAAAye,OAAA,KAAAze,EAAAye,OAAA/c,aAAA,OAAF1E,MAAE,GAAFA,MAAE,mBAAAgD,EAAAkH,kBA47G8gJ,WAAAif,GAAAtpB,EAAAC,GAAA,KAAAD,EAAA,OAAAmT,EA57GhhJhT,cAAE,6BAAFA,MAAE,0BAAAopB,EAAFppB,MAAEgT,GAAAvS,UAAAiH,EAAF1H,QAAE,OAAFA,MA47G4nK0H,EAAA2hB,wBAAAD,EAAAloB,IAAsC,GA57GlqKlB,MAAE,mBAAFA,OA47GotK,MAAAH,EAAA,OAAAupB,EAAAtpB,EAAAW,UAAA+D,EA57GptKxE,cAAE,aAAAopB,EAAFppB,CA47GwgK,YA57GxgKA,MAAE,IAAAwE,EAAA0F,mBA47GsgK,WAAAof,GAAAzpB,EAAAC,GAAA,KAAAD,EAAA,OAAA0pB,EA57GxgKvpB,cAAE,eAAFA,MAAE,mBAAFA,MAAEupB,GAAA,MAAAC,EAAFxpB,QAAE,OAAFA,MA47Gs8KwpB,EAAAC,0BAAyB,GA57G/9KzpB,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,OA47G6pL,GAAAH,IA57G7pLG,MAAE,GAAFA,MAAE,IAAFA,MAAE,+BA47GkpL,UAAA0pB,GAAA7pB,EAAAC,GAA4O,GAA5O,EAAAD,IA57GppLG,MAAE,cAAFA,MAAE,6BAAFA,SA47Gg4L,EAAAH,EAAA,OAAA8pB,EAAA7pB,EAAA2C,KA57Gh4LzC,MAAE,GAAFA,MAAE,SAAA2pB,EA47G20L,WAAAC,GAAA/pB,EAAAC,GAAA,EAAAD,IA57G70LG,MAAE,QAAFA,CA47GsyN,0BA57GtyNA,MAAE,cAAFA,MAAE,WAAFA,MAAE,GAAFA,MAAE,eAAFA,aA47GmxO,EAAAH,IA57GnxOG,MAAE,GAAFA,YAAE,iDA47GywO,UAAA6pB,GAAAhqB,EAAAC,GAA20D,GAA30D,EAAAD,IA57G3wOG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,iCAAFA,MAAE,mBAAFA,SA47GslS,EAAAH,EAAA,OAAA2M,EA57GtlSxM,cAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAAwM,EAAA8J,aAAFtW,CA47G82R,wBAAAwM,EAAApM,WAAAQ,IAAA,gBA57G92RZ,CA47G82R,YA57G92RA,MAAE,IAAAwM,EAAAtC,mBA47G42R,WAAA4f,GAAAjqB,EAAAC,GAAA,KAAAD,EAAA,OAAAkqB,EA57G92R/pB,cAAE,QAAFA,CA47G07T,sCA57G17TA,MAAE,0BAAAoC,GAAFpC,MAAE+pB,GAAA,MAAAzW,EAAFtT,QAAE,OAAFA,MAAEsT,EAAAwU,qBAAA1lB,EAAA,GAAFpC,SA47GunU,WAAAgqB,GAAAnqB,EAAAC,GAAyR,GAAzR,EAAAD,GA57GvnUG,MAAE,iCA47G84U,EAAAH,EAAA,OAAAmK,EA57Gh5UhK,cAAE,YAAAgK,EAAA9I,GAAFlB,CA47GmyU,gCAAAiqB,GAAA,+CAAAC,GAAArqB,EAAAC,GAAA,EAAAD,IA57GnyUG,MAAE,WAAFA,CA47G+/U,UA57G//UA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,WA47GuvV,EAAAH,IA57GvvVG,MAAE,GAAFA,MAAE,aAAFA,MAAE,EAAAiqB,KAAFjqB,MAAE,GAAFA,MAAE,IAAFA,MAAE,mCA47GytV,OAAAmqB,GAAA,oCAAAC,GAAAvqB,EAAAC,GAAA,EAAAD,IA57G3tVG,MAAE,UAAFA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAurHi7B,EAAAH,IAvrHj7BG,MAAE,aAAFA,MAAE,EAAAqa,KAAFra,MAAE,GAAFA,MAAE,IAAFA,MAAE,uCAurH26B,UAAAqqB,GAAAxqB,EAAAC,GAA0hJ,GAA1hJ,EAAAD,GAvrH76BG,MAAE,GAurHq8K,EAAAH,EAAA,OAAAyqB,EAAAxqB,EAAAkB,KAvrHv8KhB,MAAE,IAAAsqB,EAAAppB,GAAA,IAurHq8K,WAAAqpB,GAAA1qB,EAAAC,GAvrHr8K,GAurHq8K,EAAAD,IAvrHv8KG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA2qB,EAAA1qB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAwqB,EAAAnpB,UAAA,aAurHgxL,WAAAopB,GAAA5qB,EAAAC,GAvrHhxL,GAurHgxL,EAAAD,IAvrHlxLG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAA6qB,EAAA5qB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAA0qB,EAAAlpB,UAAA,aAurH2lM,WAAAmpB,GAAA9qB,EAAAC,GAvrH3lM,GAurH2lM,EAAAD,IAvrH7lMG,MAAE,YAAFA,MAAE,qBAAAH,EAAA,OAAA+qB,EAAA9qB,EAAA2C,KAAFzC,MAAE,MAAFA,MAAE,IAAA4qB,EAAA,QAAF5qB,MAurHk9M,WAAA6qB,GAAAhrB,EAAAC,GAAA,EAAAD,IAvrHl9MG,MAAE,YAAFA,MAAE,iBAAFA,QAurHyrN,UAAA8qB,GAAAjrB,EAAAC,GAAwD,GAAxD,EAAAD,IAvrHzrNG,MAAE,YAAFA,MAAE,EAAA2qB,GAAA,cAAF3qB,MAAE,EAAA6qB,GAAA,0BAAF7qB,gBAurHivN,EAAAH,EAAA,OAAAkrB,EAAAjrB,EAAAkB,KAAAuM,EAvrHjvNvN,MAAE,GAAFA,MAAE,GAAFA,MAAE,OAAA+qB,EAAArhB,cAAF1J,CAurHk3M,WAAAuN,EAAA,WAAAyd,GAAAnrB,EAAAC,GAA6xB,GAA7xB,EAAAD,IAvrHl3MG,MAAE,SAAFA,CAurHuiO,UAvrHviOA,MAAE,GAAFA,cAAE,iBAAFA,SAurH+oO,EAAAH,EAAA,OAAAorB,EAAAnrB,EAAAkB,KAvrH/oOhB,MAAE,aAAFA,MAAE,EAAAwb,GAAAyP,EAAA/pB,KAAFlB,MAAE,GAAFA,MAAEirB,EAAAlnB,KAurH6jO,WAAAmnB,GAAArrB,EAAAC,GAA4T,GAA5T,EAAAD,GAvrH/jOG,MAAE,GAurHy3O,EAAAH,EAAA,OAAAsrB,EAAArrB,EAAAkB,KAvrH33OhB,MAAE,IAAAmrB,EAAA/Q,KAAA,IAurHy3O,WAAAgR,GAAAvrB,EAAAC,GAAA,EAAAD,IAvrH33OG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAurH4qP,EAAAH,IAvrH5qPG,MAAE,GAAFA,YAAE,uBAurH+pP,UAAAqrB,GAAAxrB,EAAAC,GAAA,EAAAD,IAvrHjqPG,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SAurHu0P,EAAAH,IAvrHv0PG,MAAE,GAAFA,YAAE,wBAurH0zP,UAAAsrB,GAAAzrB,EAAAC,GAAW,GAAX,EAAAD,IAvrH5zPG,MAAE,EAAAorB,GAAA,mBAAFprB,MAAE,EAAAqrB,GAAA,oBAurHq0P,EAAAxrB,EAAA,OAAA0rB,EAAAzrB,EAAAkB,KAvrHv0PhB,MAAE,OAAAurB,EAAApG,SAAFnlB,MAAE,GAAFA,MAAE,QAAAurB,EAAApG,QAurH4tP,WAAAqG,GAAA3rB,EAAAC,GAvrH5tP,GAurH4tP,EAAAD,IAvrH9tPG,MAAE,GAAFA,MAAE,kBAAAH,EAAA,OAAA4rB,EAAA3rB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,4BAAFA,MAAE,EAAAyX,GAAA,MAAAgU,EAAAC,YAAA,KAAAD,EAAAC,YAAA7Y,aAAA,IAurHumQ,WAAA8Y,GAAA9rB,EAAAC,GAAiN,GAAjN,EAAAD,GAvrHzmQG,MAAE,oCAurHwzQ,EAAAH,EAAA,OAAA+rB,EAAA9rB,EAAAW,UAAAiC,EAvrH1zQ1C,cAAE,cAAA4rB,EAAF5rB,CAurHmxQ,QAAA0C,EAAAoa,MAAA,QAAA+O,GAAA,oDAAAC,GAAA,SAAA7f,GAAA,OAAA8f,KAAA9f,EAAA,WAAA+f,GAAAnsB,EAAAC,GA2Cr0P,GA3Cq0P,EAAAD,IAvrHnxQG,MAAE,WAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,WAAFA,SAkuH8c,EAAAH,EAAA,OAAAM,EAluH9cH,cAAE,GAAFA,MAAE,IAAFA,MAAE,oCAAFA,MAAE,EAAA8rB,GAAF9rB,MAAE,IAAAG,EAAA8rB,YAAA,KAkuHsc,QAAAC,GAAA,SAAAjgB,EAAA8C,GAAA,OAAA3G,MAAA6D,EAAA8f,KAAAhd,EAAA,WAAAod,GAAAtsB,EAAAC,GAA+P,GAA/P,EAAAD,IAluHxcG,MAAE,WAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,oBAAFA,MAAE,WAAFA,MAAE,WAAFA,SAkuHusB,EAAAH,EAAA,OAAAuD,EAluHvsBpD,cAAE,GAAFA,MAAE,IAAFA,MAAE,6CAAFA,MAAE,GAAAksB,GAAFlsB,MAAE,IAAFA,MAAE,IAAAoD,EAAAgpB,aAAAhpB,EAAAiF,cAAFrI,MAAE,IAAAoD,EAAA6oB,YAAA,KAkuH+rB,WAAAI,GAAAxsB,EAAAC,GAiD3D,GAjD2D,EAAAD,GAluHjsBG,MAAE,GAmxHooB,EAAAH,EAAA,OAAAysB,EAAAxsB,EAAAkB,KAnxHtoBhB,MAAE,IAAAssB,EAAAvoB,KAAA,KAAAuoB,EAAAjoB,IAAA,KAmxHooB,WAAAkoB,GAAA1sB,EAAAC,GAAA,KAAAD,EAAA,OAAAmkB,EAnxHtoBhkB,cAAE,iBAAFA,MAAE,yBAAAoC,GAAFpC,MAAEgkB,GAAA,MAAAhhB,EAAFhD,QAAE,OAAFA,MAAEgD,EAAAwpB,kBAAApqB,EAAA,EAAFpC,CAmxHmU,kBAAAoC,GAnxHnUpC,MAAEgkB,GAAA,MAAAhf,EAAFhF,QAAE,OAAFA,MAmxHwdgF,EAAAynB,SAAArqB,GAAgB,GAnxHxepC,MAAE,WAAFA,MAAE,eAAFA,MAAE,EAAAqsB,GAAA,qBAAFrsB,OAmxHoqB,MAAAH,EAAA,OAAAM,EAnxHpqBH,cAAE,QAAFA,MAAE,IAAAG,EAAAusB,WAAF1sB,CAmxHyO,UAAAG,EAAAqsB,kBAnxHzOxsB,CAmxHyO,WAAAG,EAAAwsB,SAnxHzO3sB,CAmxHyO,eAnxHzOA,CAmxHyO,cAnxHzOA,MAAE,sCAmxHuO,WAAA4sB,GAAA/sB,EAAAC,GAAA,KAAAD,EAAA,OAAAmkB,EAnxHzOhkB,cAAE,6BAAFA,MAAE,8BAAAoC,GAAFpC,MAAEgkB,GAAA,MAAAhhB,EAAFhD,MAAE,UAAFA,MA4gI4uBgD,EAAAyiB,YAAArjB,GAAmB,GA5gI/vBpC,MAAE,WAAFA,MAAE,WAAFA,OA4gIkzB,MAAAH,EAAA,OAAAgtB,EA5gIlzB7sB,QAAEyC,KAAAgB,EAAFzD,cAAE,WAAFA,MAAE,IAAAyD,EAAAqpB,QAAF9sB,CA4gImiB,yBAAA6sB,EA5gIniB7sB,CA4gImiB,sBA5gIniBA,MAAE,IAAAyD,EAAAspB,eA4gIiiB,WAAAC,GAAAntB,EAAAC,GAAkT,GAAlT,EAAAD,IA5gIniBG,MAAE,GAAFA,MAAE,EAAA4sB,GAAA,+BAAF5sB,SA4gIq1B,EAAAH,EAAA,OAAAgtB,EAAA/sB,EAAA2C,KA5gIr1BzC,MAAE,GAAFA,MAAE,OAAA6sB,EAAAjqB,OAAA,EA4gI4b,WAAAqqB,GAAAptB,EAAAC,GAAA,KAAAD,EAAA,OAAAqtB,EA5gI9bltB,cAAE,cAAFA,MAAE,mBAAFA,MAAEktB,GAAA,MAAAxsB,EAAFV,QAAE,OAAFA,MA4gI6wCU,EAAAR,OAAM,GA5gInxCF,MAAE,GAAFA,MAAE,eAAFA,OA4gIgtD,MAAAH,EAAA,OAAAuD,EA5gIhtDpD,cAAE,YAAAoD,EAAAhD,WAAAE,SAAA8C,EAAA+pB,gBAAA7sB,SAAA8C,EAAAgqB,WAAA9sB,SAAA8C,EAAAhD,WAAAC,UAAA+C,EAAA+pB,gBAAA9sB,UAAA+C,EAAAgqB,WAAA/sB,YAAA+C,EAAA8R,iBAAFlV,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBA4gIqsD,WAAAqtB,GAAAxtB,EAAAC,GAAuzB,GAAvzB,EAAAD,IA5gIvsDG,MAAE,wBAAFA,MAAE,cAAFA,MAAE,WAAFA,MAAE,GAAFA,MAAE,eAAFA,WA4gI8/E,EAAAH,EAAA,OAAAwF,EA5gI9/ErF,MAAE,GAAFA,MAAE,GAAFA,MAAE,cAAAqF,EAAAjF,WAAAQ,IAAFZ,MAAE,EAAAioB,MAAFjoB,MAAE,GAAFA,YAAE,sBA4gIo/E,WAAAstB,GAAAztB,EAAAC,GAA4rB,GAA5rB,EAAAD,IA5gIt/EG,MAAE,gBAAFA,CA4gI4gG,UA5gI5gGA,MAAE,GAAFA,cAAE,GAAFA,SA4gIkrG,EAAAH,EAAA,OAAA0tB,EAAAztB,EAAAW,UAAA8nB,EA5gIlrGvoB,MAAE,GAAFA,MAAE,YAAAuoB,EAAAiF,gBAAAD,EAAAE,SAAFztB,CA4gIs8F,aA5gIt8FA,MAAE,GAAFA,MAAE,GAAAuoB,EAAAiF,gBAAAD,EAAAE,SAAA,KAAFztB,MAAE,GAAFA,MAAE,IAAAuoB,EAAAmF,WAAAH,GAAA,IA4gIqqG,QAAAI,GAAA,gDAAAC,GAAA/tB,EAAAC,GAAA,EAAAD,IA5gIvqGG,MAAE,UAAFA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SA4gIsnH,EAAAH,IA5gItnHG,MAAE,aAAFA,MAAE,EAAA2tB,KAAF3tB,MAAE,GAAFA,MAAE,IAAFA,MAAE,iCA4gIgnH,UAAA6tB,GAAAhuB,EAAAC,GAA8B,GAA9B,EAAAD,IA5gIlnHG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,YAAFA,MAAE,EAAAstB,GAAA,mBAAFttB,MAAE,UAAFA,cAAE,SAAFA,MAAE,EAAA4tB,GAAA,YAAF5tB,WA4gIgpH,EAAAH,EAAA,OAAAuP,EA5gIhpHpP,QAAEyC,KAAAsU,EAAF/W,cAAE,QAAFA,MAAE,gCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,IAAAoP,EAAApL,QAAA,YAAFhE,MAAE,GAAFA,MAAE,mBAAA+W,EAAA7M,kBA4gIu7G,WAAA4jB,GAAAjuB,EAAAC,GAAA,KAAAD,EAAA,OAAAkuB,EA5gIz7G/tB,cAAE,6BAAFA,MAAE,0BAAAguB,EAAFhuB,MAAE+tB,GAAAttB,UAAAuQ,EAAFhR,MAAE,UAAFA,MA4gI6jIgR,EAAAlD,iBAAAkgB,EAAA9sB,IAA+B,GA5gI5lIlB,MAAE,mBAAFA,OA4gI8oI,MAAAH,EAAA,OAAAmuB,EAAAluB,EAAAW,UAAAuJ,EA5gI9oIhK,MAAE,GAAFA,MAAE,aAAAguB,EAAFhuB,CA4gIy8H,YA5gIz8HA,MAAE,IAAAgK,EAAAE,mBA4gIu8H,WAAA+jB,GAAApuB,EAAAC,GAAA,KAAAD,EAAA,OAAAuR,EA5gIz8HpR,cAAE,eAAFA,MAAE,mBAAFA,MAAEoR,GAAA,MAAAC,EAAFrR,MAAE,UAAFA,MA4gIg4IqR,EAAA6c,mBAAkB,GA5gIl5IluB,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,OA4gIglJ,GAAAH,IA5gIhlJG,MAAE,GAAFA,MAAE,IAAFA,MAAE,+BA4gIqkJ,UAAAmuB,GAAAtuB,EAAAC,GAAgM,GAAhM,EAAAD,GA5gIvkJG,MAAE,6BA4gIqwJ,EAAAH,EAAA,OAAAuuB,EAAAtuB,EAAA2C,KA5gIvwJzC,MAAE,SAAAouB,EA4gIkwJ,WAAAC,GAAAxuB,EAAAC,GAA8nD,GAA9nD,EAAAD,IA5gIpwJG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,iCAAFA,MAAE,mBAAFA,SA4gIk4M,EAAAH,EAAA,OAAAuG,EA5gIl4MpG,MAAE,GAAFA,MAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAAoG,EAAAkQ,aAAFtW,CA4gIorM,wBAAAoG,EAAAhG,WAAAQ,IAAA,gBA5gIprMZ,CA4gIorM,YA5gIprMA,MAAE,IAAAoG,EAAA8D,mBA4gIkrM,WAAAokB,GAAAzuB,EAAAC,GAAu9C,GAAv9C,EAAAD,IA5gIprMG,MAAE,eAAFA,MAAE,GAAFA,SA4gI2oP,EAAAH,EAAA,OAAA0uB,EAAAzuB,EAAAW,UA5gI3oPT,MAAE,QAAAuuB,EAAArtB,IAAFlB,MAAE,GAAFA,MAAE,IAAAuuB,EAAAxqB,KAAA,IA4gIgoP,WAAAyqB,GAAA3uB,EAAAC,GAAA,KAAAD,EAAA,OAAA4uB,EA5gIloPzuB,cAAE,QAAFA,CA4gIioS,eA5gIjoSA,MAAE,mBAAFA,MAAEyuB,GAAA,MAAAC,EAAF1uB,QAAES,UAAAiH,EAAF1H,MAAE,UAAFA,MA4gIw5S0H,EAAAinB,kBAAkBD,EAAA9tB,IAAU,WAAU,GA5gI97SZ,MAAE,iBAAFA,SA4gI+lT,MAAAH,EAAA,OAAA6uB,EA5gI/lT1uB,QAAES,UAAAmW,EAAF5W,MAAE,GAAFA,MAAE,GAAFA,MAAE,WAAA0uB,EAAAztB,MAAAoH,eAAAuO,EAAAgY,2BA4gIo2S,WAAAC,GAAAhvB,EAAAC,GAAwvB,GAAxvB,EAAAD,IA5gIt2SG,MAAE,WAAFA,CA4gIy2P,uBA5gIz2PA,MAAE,eAAFA,MAAE,eAAFA,MAAE,YAAFA,MAAE,2BAAFA,MAAE,mBAAFA,MAAE,EAAAwuB,GAAA,aAAFxuB,gBAAE,iCAAFA,MAAE,WAAFA,SA4gI8lU,EAAAH,EAAA,OAAA6uB,EAAA5uB,EAAAW,UAAAwU,EA5gI9lUjV,MAAE,GAAFA,MAAE,YAAA0uB,GAAF1uB,MAAE,GAAFA,MAAE,QAAFA,MAAE,yBAAAiV,EAAAmY,WAAAxqB,OAAA,KAAA8rB,EAAAztB,MAAAoH,aAAA,QAAFrI,CA4gIunQ,YAAAiV,EAAAmY,WAAAxqB,QAAA8rB,EAAAztB,MAAAoH,eAAA4M,EAAA2Z,2BA5gIvnQ5uB,MAAE,sCAAA8uB,GAAF9uB,MAAE,GAAFA,MAAE,wBAAA0uB,EAAAztB,MAAA8e,QAAF/f,MAAE,GAAFA,MAAE,eAAA0uB,EAAAztB,MAAAoH,aAAFrI,CA4gIkxR,YA5gIlxRA,MAAE,KAAAiV,EAAA/K,qBAAA,IAAAwkB,EAAAztB,MAAA8e,QAAF/f,MAAE,GAAFA,MAAE,SAAAiV,EAAAmY,WAAA2B,SAAAnsB,QAAF5C,MAAE,GAAFA,MAAE,QAAA0uB,EAAAztB,MAAAmH,MAAFpI,CA4gI0zT,eAAA0uB,EAAAztB,MAAAoH,aA5gI1zTrI,CA4gI0zT,mBA5gI1zTA,MAAE,KAAAiV,EAAA+Z,0BAAFhvB,CA4gI0zT,gBAAAiV,EAAA7U,WAAAQ,IAAA,iBAAAK,MAAA,WAAAguB,GAAApvB,EAAAC,GAAA,KAAAD,EAAA,OAAA6I,EA5gI1zT1I,cAAE,eAAFA,MAAE,yBAAAkvB,EAAFlvB,MAAE0I,GAAAjI,UAAAmI,EAAF5I,MAAE,UAAFA,MA4gI+7V4I,EAAAumB,mBAAAD,GAAgC,GA5gI/9VlvB,MAAE,GAAFA,MAAE,wBAAFA,OA4gIkoW,MAAAH,EAAA,OAAAqvB,EAAApvB,EAAAW,UA5gIloWT,MAAE,GAAFA,MAAE,IAAFA,MAAE,IAAAkvB,GAAA,IA4gIunW,WAAAE,GAAAvvB,EAAAC,GAA6D,GAA7D,EAAAD,IA5gIznWG,MAAE,QAAFA,CA4gIgwU,iBA5gIhwUA,CA4gIgwU,eA5gIhwUA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,iBAAFA,cAAE,uBAAFA,MAAE,EAAAivB,GAAA,iBAAFjvB,aA4gIsrW,EAAAH,EAAA,OAAAwvB,EA5gItrWrvB,QAAEyC,KAAFzC,MAAE,GAAFA,MAAE,IAAFA,MAAE,kDAAFA,MAAE,GAAFA,MAAE,UAAAqvB,EA4gIy4V,WAAAC,GAAAzvB,EAAAC,GAAuZ,GAAvZ,EAAAD,IA5gI34VG,MAAE,GAAFA,MAAE,EAAAovB,GAAA,aAAFpvB,SA4gIkyW,EAAAH,EAAA,OAAAwvB,EAAAvvB,EAAA2C,KA5gIlyWzC,MAAE,GAAFA,MAAE,OAAAqvB,EAAAzsB,OA4gI2vU,WAAA2sB,GAAA1vB,EAAAC,GAAq+K,GAAr+K,EAAAD,IA5gI7vUG,MAAE,WAAFA,CA4gI+gd,uBA5gI/gdA,MAAE,eAAFA,MAAE,cAAFA,MAAE,mBAAFA,cAAE,sBAAFA,MAAE,eAAFA,MAAE,GAAFA,WA4gIkuf,EAAAH,EAAA,OAAA2vB,EAAA1vB,EAAAW,UAAA8a,EA5gIlufvb,MAAE,OAAAiY,EAAAwX,EAAAvX,EAAAwX,EAAAC,EAAF3vB,MAAE,YAAAwvB,GAAFxvB,MAAE,GAAFA,MAAE,gBAAAiY,EAAAuX,EAAA5uB,IAAA,2BAAAqX,EAAAhX,OAAA,KAAFjB,MAAE,6BAAFA,CA4gIizd,6BAAAyvB,EAAAD,EAAA5uB,IAAA,yBAAA6uB,EAAAxuB,QA5gIjzdjB,MAAE,GAAFA,MAAE,4BAAAkY,EAAAsX,EAAA5uB,IAAA,yBAAAsX,EAAAjX,OAAFjB,CA4gI6ie,YA5gI7ieA,MAAE,IAAAub,EAAArR,oBAAFlK,MAAE,GAAFA,MAAE,gBAAA0vB,EAAAF,EAAA5uB,IAAA,2BAAA8uB,EAAAzuB,OAAA,KAAFjB,MAAE,iCAAFA,MAAE,GAAFA,MAAE,WAAA2vB,EAAAH,EAAA5uB,IAAA,wBAAA+uB,EAAA1uB,MAAA,IA4gIgtf,WAAA2uB,GAAA/vB,EAAAC,GAAA,KAAAD,EAAA,OAAAgwB,EA5gIltf7vB,cAAE,eAAFA,MAAE,yBAAA8vB,EAAF9vB,MAAE6vB,GAAApvB,UAAAsvB,EAAF/vB,MAAE,UAAFA,MA4gIslhB+vB,EAAAC,iBAAAF,GAA+B,GA5gIrnhB9vB,MAAE,iBAAFA,MAAE,GAAFA,OA4gIozhB,MAAAH,EAAA,OAAAiwB,EAAAhwB,EAAAW,UA5gIpzhBT,MAAE,GAAFA,MAAE,IAAA8vB,EAAA/rB,KAAA,IA4gIyyhB,WAAAksB,GAAApwB,EAAAC,GAA6D,GAA7D,EAAAD,IA5gI3yhBG,MAAE,QAAFA,CA4gIg6f,iBA5gIh6fA,CA4gIg6f,eA5gIh6fA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,iBAAFA,cAAE,uBAAFA,MAAE,EAAA4vB,GAAA,iBAAF5vB,aA4gIw2hB,EAAAH,EAAA,OAAAqwB,EA5gIx2hBlwB,QAAEyC,KAAFzC,MAAE,GAAFA,MAAE,IAAFA,MAAE,uCAAFA,MAAE,GAAFA,MAAE,UAAAkwB,EA4gIgihB,WAAAC,GAAAtwB,EAAAC,GAAkb,GAAlb,EAAAD,IA5gIlihBG,MAAE,GAAFA,MAAE,EAAAiwB,GAAA,aAAFjwB,SA4gIo9hB,EAAAH,EAAA,OAAAqwB,EAAApwB,EAAA2C,KA5gIp9hBzC,MAAE,GAAFA,MAAE,OAAAkwB,EAAAttB,OA4gI25f,QAAAwtB,GAAA,6DAAAC,GAAAxwB,EAAAC,GAAA,KAAAD,EAAA,OAAAywB,EA5gI75ftwB,cAAE,YAAFA,CA4gIk3D,2BA5gIl3DA,CA4gIk3D,4BA5gIl3DA,CA4gIk3D,aA5gIl3DA,CA4gIk3D,uBA5gIl3DA,MAAE,eAAFA,MAAE,EAAAqtB,GAAA,6BAAFrtB,gBAAE,EAAA6tB,GAAA,mBAAF7tB,MAAE,iBAAFA,MAAE,eAAFA,MAAE,aAAFA,MAAE,GAAA8tB,GAAA,+BAAF9tB,MAAE,YAAFA,cAAE,UAAFA,MAAE,GAAAiuB,GAAA,iBAAFjuB,gBAAE,eAAFA,MAAE,GAAAmuB,GAAA,+BAAFnuB,MAAE,YAAFA,gBAAE,qBAAFA,MAAE,gBAAFA,MAAE,cAAFA,CA4gIs/J,YA5gIt/JA,CA4gIs/J,wBA5gIt/JA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,oBAAFA,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,oBAAFA,kBAAE,GAAAquB,GAAA,mBAAFruB,MAAE,0CAAFA,MAAE,kBAAFA,MAAE,gBAAFA,MAAE,oBAAFA,MAAE,kBAAAoC,GAAFpC,MAAEswB,GAAA,MAAAC,EAAFvwB,QAAE,OAAFA,MAAEuwB,EAAAC,aAAApuB,EAAA,GAAFpC,gBAAE,kBAAFA,MAAE,gBAAFA,MAAE,YAAFA,CA4gIooO,wBA5gIpoOA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,GAAAsuB,GAAA,iBAAFtuB,MAAE,YAAFA,kBAAE,GAAA6uB,GAAA,gBAAF7uB,MAAE,GAAAsvB,GAAA,sBAAFtvB,MAAE,YAAFA,cAAE,kBAAFA,MAAE,gBAAFA,MAAE,YAAFA,CA4gIm7W,wBA5gIn7WA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,oBAAFA,MAAE,gBAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,gBAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,gBAAFA,MAAE,IAAFA,MAAE,gBAAFA,kBAAE,uBAAFA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,oBAAFA,MAAE,yBAAFA,MAAE,eAAFA,MAAE,oBAAFA,MAAE,YAAFA,MAAE,IAAFA,MAAE,gBAAFA,oBAAE,GAAAuvB,GAAA,eAAFvvB,MAAE,GAAAmwB,GAAA,sBAAFnwB,MAAE,YAAFA,aA4gI++hB,MAAAH,EAAA,OAAAuP,EAAAtP,EAAA2C,KAAAxC,EA5gI/+hBD,QAAE,IAAAywB,EAAFzwB,MAAE,YAAAC,EAAAG,YAAFJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,mBAAFA,MAAE,GAAAowB,KAAFpwB,MAAE,GAAFA,MAAE,OAAAoP,EAAApL,QAAApB,QAAF5C,MAAE,GAAFA,MAAE,QAAFA,MAAE,wBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAC,EAAAywB,eAAF1wB,MAAE,GAAFA,MAAE,mBAAAC,EAAAiK,mBAAFlK,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAC,EAAA0wB,UAAF3wB,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAFA,MAAE,GAAAowB,MAAFpwB,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAC,EAAAiK,oBAAFlK,MAAE,GAAFA,MAAE,OAAAC,EAAAqW,aAAA1T,QAAF5C,MAAE,GAAFA,MAAE,UAAAC,EAAA0wB,QAAF3wB,CA4gIqhN,aAAAC,EAAAG,YA5gIrhNJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,yBAAFA,MAAE,GAAFA,MAAE,SAAAC,EAAAuwB,aAAA7kB,QAAAyD,EAAAzD,OAAF3L,CA4gIkwN,gBAAAC,EAAAuwB,aAAA9mB,eAAA0F,EAAA1F,cA5gIlwN1J,CA4gIkwN,oBAAAC,EAAAiK,mBA5gIlwNlK,MAAE,GAAFA,MAAE,QAAFA,MAAE,gCAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,+BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAC,EAAA2wB,iBAAF5wB,MAAE,GAAFA,MAAE,UAAAC,EAAAmtB,WAAA2B,UAAF/uB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAC,EAAA4wB,uBAAF7wB,MAAE,GAAFA,MAAE,QAAFA,MAAE,+BAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,iCAAFA,CA4gI0lX,UA5gI1lXA,MAAE,0CAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAC,EAAAiK,oBAAFlK,MAAE,GAAFA,MAAE,QAAAC,EAAA6wB,WAAAC,MAAF/wB,MAAE,GAAFA,MAAE,IAAFA,MAAE,2CAAFA,MAAE,GAAFA,MAAE,QAAAC,EAAA6wB,WAAAE,OAAFhxB,MAAE,GAAFA,MAAE,IAAFA,MAAE,4CAAFA,MAAE,GAAFA,MAAE,QAAAC,EAAA6wB,WAAAG,SAAFjxB,MAAE,GAAFA,MAAE,IAAFA,MAAE,8CAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,wCAAFA,CA4gI8uZ,UA5gI9uZA,MAAE,iDAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAC,EAAAiK,mBAAFlK,CA4gIgla,2BAAAywB,EAAAxwB,EAAAG,WAAAQ,IAAA,sCAAA6vB,EAAAxvB,QAAAhB,EAAAixB,sBAAAjxB,EAAAG,aA5gIhlaJ,MAAE,GAAFA,MAAE,eAAFA,MAAE,MAAAC,EAAAiK,oBAAAjK,EAAAixB,sBAAAjxB,EAAAG,aAAFJ,MAAE,GAAFA,MAAE,GAAFA,MAAE,uCAAAC,EAAAkxB,0BAAA,KAAFnxB,MAAE,GAAFA,MAAE,UAAAC,EAAAktB,gBAAA4B,UAAF/uB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAC,EAAAmxB,sBA4gIi0f,WAAAC,GAAAxxB,EAAAC,GAuIloe,GAvIkoe,EAAAD,IA5gIn0fG,MAAE,GAAFA,MAAE,QAAFA,MAAE,GAAFA,iBAmpIisB,EAAAH,EAAA,OAAAyxB,EAAAxxB,EAAAW,UAnpIjsBT,MAAE,GAAFA,MAAEsxB,EAAAvtB,KAmpI2pB,WAAAwtB,GAAA1xB,EAAAC,GAnpI3pB,GAmpI2pB,EAAAD,IAnpI7pBG,MAAE,YAAFA,MAAE,qBAAAH,EAAA,OAAA2xB,EAAA1xB,EAAA2C,KAAFzC,MAAE,MAAFA,MAAE,IAAAwxB,EAAA,QAAFxxB,MAmpIwjD,WAAAyxB,GAAA5xB,EAAAC,GAAA,EAAAD,IAnpIxjDG,MAAE,YAAFA,MAAE,iBAAFA,QAmpIs1D,UAAA0xB,GAAA7xB,EAAAC,GAAyvD,GAAzvD,EAAAD,IAnpIt1DG,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,MAAE,GAAFA,iBAmpI+kH,EAAAH,EAAA,OAAA8xB,EAAA7xB,EAAAW,UAAAmxB,EAnpI/kH5xB,QAAEyC,KAAA+J,EAAFxM,MAAE,GAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,IAAAwM,EAAAqlB,gBAAAF,EAAAlE,WAAFztB,MAAE,YAAA4xB,EAAAhxB,IAAA,WAAAK,OAAFjB,MAAE,GAAFA,MAAE,IAAA2xB,EAAA5tB,KAAA,IAmpIqiH,WAAA+tB,GAAAjyB,EAAAC,GAnpIriH,GAmpIqiH,EAAAD,IAnpIviHG,MAAE,2BAAFA,MAAE,sBAAAH,EAAA,OAAA0gB,EAAFvgB,MAAE,GAAAS,UAAA4E,EAAFrF,cAAE,eAAAugB,EAAAlY,aAAFrI,CAmpI48H,YAnpI58HA,MAAE,IAAAqF,EAAAxE,kBAmpI08H,WAAAkxB,GAAAlyB,EAAAC,GAnpI18H,GAmpI08H,EAAAD,IAnpI58HG,MAAE,2BAAFA,MAAE,sBAAAH,EAAA,OAAA0gB,EAAFvgB,MAAE,GAAAS,UAAAsW,EAAF/W,cAAE,eAAAugB,EAAAlY,aAAFrI,CAmpIw2I,YAnpIx2IA,MAAE,IAAA+W,EAAAlW,kBAmpIs2I,WAAAmxB,GAAAnyB,EAAAC,GAAq8C,GAAr8C,EAAAD,IAnpIx2IG,MAAE,KAAFA,MAAE,SAAFA,CAmpI8uC,UAnpI9uCA,CAmpI8uC,WAnpI9uCA,MAAE,EAAAuxB,GAAA,aAAFvxB,MAAE,EAAAyxB,GAAA,yBAAFzxB,yBAAE,SAAFA,CAmpIukE,yBAnpIvkEA,MAAE,cAAFA,MAAE,oBAAFA,MAAE,gBAAFA,gBAAE,UAAFA,CAmpI+oF,0BAnpI/oFA,MAAE,eAAFA,MAAE,oBAAFA,MAAE,gBAAFA,gBAAE,GAAA0xB,GAAA,sBAAF1xB,MAAE,WAAFA,MAAE,WAAFA,CAmpI+rH,0BAnpI/rHA,MAAE,GAAA8xB,GAAA,6BAAF9xB,MAAE,GAAA+xB,GAAA,6BAAF/xB,gBAAE,WAAFA,CAmpImuJ,0BAnpInuJA,MAAE,eAAFA,MAAE,oBAAFA,gBAAE,WAAFA,CAmpIk0K,yBAnpIl0KA,MAAE,eAAFA,MAAE,oBAAFA,mBAmpI6yL,EAAAH,EAAA,OAAA+xB,EAAA9xB,EAAA2C,KAAAqC,EAnpI7yL9E,MAAE,GAAAugB,EAAFvgB,QAAES,UAAAuC,EAAFhD,cAAE,YAAA4xB,GAAF5xB,MAAE,GAAFA,MAAE,YAAA4xB,EAAAhxB,IAAA,WAAAK,OAAFjB,MAAE,GAAFA,MAAE,OAAAgD,EAAAivB,iBAAA1R,GAAFvgB,CAmpIk8C,WAAA8E,GAnpIl8C9E,MAAE,GAAFA,MAAE,YAAA4xB,EAAAhxB,IAAA,WAAAK,OAAFjB,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAgD,EAAAnC,kBAAFb,CAmpIq3E,cAnpIr3EA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAA4xB,EAAAhxB,IAAA,WAAAK,OAAFjB,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAgD,EAAAnC,kBAAFb,CAmpI47F,cAnpI57FA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAugB,EAAAvc,QAAA,YAAFhE,MAAE,GAAFA,MAAE,YAAA4xB,EAAAhxB,IAAA,WAAAK,OAAFjB,MAAE,GAAFA,MAAE,QAAAgD,EAAAkvB,yBAAFlyB,MAAE,GAAFA,MAAE,OAAAgD,EAAAkvB,yBAAFlyB,MAAE,GAAFA,MAAE,YAAA4xB,EAAAhxB,IAAA,WAAAK,OAAFjB,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAgD,EAAAnC,mBAAFb,MAAE,GAAFA,MAAE,YAAA4xB,EAAAhxB,IAAA,WAAAK,OAAFjB,MAAE,GAAFA,MAAE,eAAFA,MAAE,MAAAgD,EAAAnC,kBAmpIwqL,WAAAsxB,GAAAtyB,EAAAC,GAAoJ,GAApJ,EAAAD,IAnpI1qLG,MAAE,QAAFA,MAAE,EAAAgyB,GAAA,wBAAFhyB,SAmpI8zL,EAAAH,EAAA,OAAA0gB,EAAAzgB,EAAAW,UAAA2C,EAnpI9zLpD,cAAE,GAAFA,MAAE,OAAAoD,EAAAgvB,aAAAxxB,IAAA2f,EAAArf,IAmpIylC,WAAAmxB,GAAAxyB,EAAAC,GAAA,KAAAD,EAAA,OAAAmkB,EAnpI3lChkB,cAAE,eAAFA,MAAE,mBAAFA,MAAEgkB,GAAA,MAAAhhB,EAAFhD,QAAE,OAAFA,MA8xImegD,EAAA+R,SAAQ,GA9xI3e/U,MAAE,GAAFA,MAAE,eAAFA,OA8xIwpB,MAAAH,EAAA,OAAAM,EA9xIxpBH,cAAE,WAAAG,EAAAC,WAAAE,SAAAH,EAAAC,WAAAC,UAAFL,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBA8xI6oB,WAAAsyB,GAAAzyB,EAAAC,GAAA,KAAAD,EAAA,OAAAqtB,EA9xI/oBltB,cAAE,eAAFA,MAAE,mBAAFA,MAAEktB,GAAA,MAAAxsB,EAAFV,MAAE,UAAFA,MA8xIizBU,EAAAR,OAAM,GA9xIvzBF,MAAE,GAAFA,MAAE,eAAFA,OA8xIujC,MAAAH,EAAA,OAAAmF,EA9xIvjChF,MAAE,GAAFA,MAAE,WAAAgF,EAAA5E,WAAAE,SAAA0E,EAAA5E,WAAAC,UAAFL,MAAE,GAAFA,MAAE,IAAFA,MAAE,yBA8xI4iC,WAAAuyB,GAAA1yB,EAAAC,GAAA,EAAAD,GA9xI9iCG,MAAE,EAAAsyB,GAAA,iBA8xIqjC,EAAAzyB,GA9xIvjCG,MAAE,yCA8xIw8B,UAAAwyB,GAAA3yB,EAAAC,GAA0e,GAA1e,EAAAD,IA9xI18BG,MAAE,cAAFA,MAAE,6BAAFA,SA8xIo7C,EAAAH,EAAA,OAAA4yB,EAAA3yB,EAAA2C,KA9xIp7CzC,MAAE,GAAFA,MAAE,SAAAyyB,EA8xIo5C,WAAAC,GAAA7yB,EAAAC,GAAivD,GAAjvD,EAAAD,IA9xIt5CG,MAAE,iBAAFA,MAAE,eAAFA,MAAE,iCAAFA,SA8xIuoG,EAAAH,EAAA,OAAA4D,EA9xIvoGzD,cAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAAyD,EAAA6S,aAAFtW,CA8xI0+F,wBAAAyD,EAAArD,WAAAQ,IAAA,wBAAA+xB,GAAA,2CAAAC,GAAA/yB,EAAAC,GAAA,EAAAD,IA9xI1+FG,MAAE,SAAFA,MAAE,iBAAFA,MAAE,GAAFA,MAAE,eAAFA,SA46ImpB,EAAAH,IA56InpBG,MAAE,aAAFA,MAAE,EAAA2yB,KAAF3yB,MAAE,GAAFA,MAAE,IAAFA,MAAE,8CA46I6oB,UAAA6yB,GAAAhzB,EAAAC,GAAs/B,GAAt/B,EAAAD,GA56I/oBG,MAAE,GA46ImoD,EAAAH,EAAA,OAAAizB,EAAAhzB,EAAAkB,KA56IroDhB,MAAE,IAAA8yB,EAAA5xB,GAAA,IA46ImoD,WAAA6xB,GAAAlzB,EAAAC,GA56InoD,GA46ImoD,EAAAD,IA56IroDG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAAmzB,EAAAlzB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAgzB,EAAA3xB,UAAA,aA46I09D,WAAA4xB,GAAApzB,EAAAC,GA56I19D,GA46I09D,EAAAD,IA56I59DG,MAAE,GAAFA,MAAE,mBAAAH,EAAA,OAAAqzB,EAAApzB,EAAAkB,KAAFhB,MAAE,IAAFA,MAAE,IAAAkzB,EAAA1xB,UAAA,aA46IizE,WAAA2xB,GAAAtzB,EAAAC,GAAma,GAAna,EAAAD,IA56InzEG,MAAE,SAAFA,CA46IwmF,UA56IxmFA,MAAE,GAAFA,cAAE,iBAAFA,SA46IstF,EAAAH,EAAA,OAAAuzB,EAAAtzB,EAAAkB,KA56IttFhB,MAAE,aAAFA,MAAE,EAAAwb,GAAA4X,EAAAlyB,KAAFlB,MAAE,GAAFA,MAAEozB,EAAArvB,KA46IooF,WAAAsvB,GAAAxzB,EAAAC,GAA6X,GAA7X,EAAAD,GA56ItoFG,MAAE,YA46IigG,EAAAH,EAAA,OAAAyzB,EAAAxzB,EAAAkB,KA56IngGhB,MAAE,YAAAszB,EAAAhc,YAAFtX,MA46I4/F,WAAAuzB,GAAA1zB,EAAAC,GAAiN,GAAjN,EAAAD,GA56I5/FG,MAAE,oCA46I2sG,EAAAH,EAAA,OAAA2zB,EAAA1zB,EAAAW,UAAA+D,EA56I7sGxE,cAAE,cAAAwzB,EAAFxzB,CA46I6qG,QAAAwE,EAAAsY,MAAA,QAAA2W,GAAA,mDAAAC,GAAA7zB,EAAAC,GAAA,EAAAD,IA56I7qGG,MAAE,GAAFA,MAAE,kBAAAH,GAAFG,YAAE,qCAk+IoL,UAAA2zB,GAAA9zB,EAAAC,GAA2oC,GAA3oC,EAAAD,IAl+ItLG,MAAE,YAAFA,CAk+Io9B,WAl+Ip9BA,MAAE,GAAFA,MAAE,eAAFA,cAAE,iCAAFA,MAAE,mBAAFA,SAk+Ii0C,EAAAH,EAAA,OAAAsE,EAl+Ij0CnE,cAAE,GAAFA,YAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAAmE,EAAAmS,aAAFtW,CAk+IuoC,wBAAAmE,EAAAyvB,iBAl+IvoC5zB,CAk+IuoC,YAl+IvoCA,MAAE,IAAFA,MAAE,EAAAowB,KAk+IqoC,WAAAyD,GAAAh0B,EAAAC,GAAA,KAAAD,EAAA,OAAAmkB,EAl+IvoChkB,cAAE,eAAFA,MAAE,mBAAFA,MAAEgkB,GAAA,MAAAhhB,EAAFhD,QAAE,OAAFA,MAk+I+5CgD,EAAAQ,SAAQ,GAl+Iv6CxD,MAAE,GAAFA,MAAE,eAAFA,cAAE,eAAFA,MAAE,mBAAFA,MAAEgkB,GAAA,MAAAhf,EAAFhF,QAAE,OAAFA,MAk+IohDgF,EAAA8uB,SAAQ,GAl+I5hD9zB,MAAE,GAAFA,MAAE,eAAFA,OAk+Ig2D,MAAAH,EAAA,OAAA4D,EAl+Ih2DzD,QAAE+zB,EAAF/zB,MAAE,GAAAmJ,EAAFnJ,MAAE,GAAFA,MAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,WAAA+zB,EAAAzzB,SAAA6I,EAAA7I,SAAAyzB,EAAA1zB,UAAA8I,EAAA9I,UAAAoD,EAAAmwB,iBAAAvzB,UAAFL,MAAE,GAAFA,MAAE,IAAFA,MAAE,yCAk+Iq1D,EAxrJ37D,SAASg0B,GAAYtS,EAAQuS,EAAQC,GACjC,IAAKxS,EACD,MAAO,GAEX,MAAMyS,EAAYzS,EAAO0S,YAAYH,GACrC,IAAkB,IAAdE,EACA,OAAOzS,EAIX,OAFaA,EAAO2S,OAAO,EAAGF,GACjBzS,EAAO2S,OAAOF,GAAWD,QAAQD,EAAQC,EAE1D,CAMA,MAAMI,EACFC,YAAYC,GACRC,KAAKD,YAAcA,CACvB,CACAE,mBACI,OAAOD,KAAKD,YAAYG,SACnBD,mBACAE,UAAUC,GAAQA,EAAKC,cAAc5mB,OACrC6mB,QAAKC,MAAY,GAC1B,CACAC,0BAA0BC,EAAOpN,EAAsBqN,GACnD,MAAMC,EAAiBX,KAAKD,YAAY/vB,QAAQ4wB,cAAcH,GACxDI,EAAuBxN,EAAqByN,OAAOC,OAAOC,GAAK,EAAIA,EAAElvB,OAAO3D,QAC5E8yB,EAAsBjB,KAAKkB,0BAA0BL,EAAsBH,GACjF,SAAOS,MAASR,EAAgBM,GAAqBX,QAAKc,KAAS,GAAIR,iBAAiB3wB,MACvDA,EAAa9B,UACpCgzB,MAASlxB,EAAaoxB,IAAIC,GAAetB,KAAKD,YAAY/vB,QAAQuxB,wBAAwB,CACxF9mB,UAAWmmB,EAAcn0B,GACzB+0B,cAAeF,EAAY70B,QAC5B,EACDg1B,MAAG,KACmBnB,QAAKe,KAAI,MAAST,gBAAe3wB,qBAChE,EAAGmxB,KAAS,EAAGR,gBAAe3wB,mBAC3B,MAAM0gB,EAAW0C,EAAqB1C,SAAS0Q,IAAIK,IAC/C,MAAMC,EAAY1xB,EAAa9B,OACzBuzB,EAAErwB,aAAagwB,IAAI,CAACpI,EAAY3qB,KAC9B,MAAMszB,EAAS3xB,EAAa3B,GAAOiB,QAAQsyB,KAAKC,GAAKA,EAAExyB,OAAS2pB,GAChE,IAAK2I,EACD,MAAM,IAAIG,MAAO,4CAA2C9I,4BAEhE,OAAO2I,EAAOn1B,KAEhB,GACN,MAAO,IACAi1B,EACHC,YACJ,GAEEpyB,EAAUU,EAAaoxB,IAAIW,GAAMA,EAAGzyB,SAAS0yB,OAAO,CAACC,EAAMJ,IAAM,IAAII,KAASJ,GAAI,IACxF,OAAO9B,KAAKmC,sBAAsBvB,EAAejQ,EAAUphB,EAASmxB,EAAcrN,EAAqB+O,gBAAe,GAE9H,CACAlB,0BAA0BJ,EAAQJ,GAC9B,OAAOI,EAAO3yB,UACRgzB,MAASL,EAAOO,IAAIgB,GAAKrC,KAAKD,YAAY/vB,QACvCkxB,0BAA0B,CAC3B1yB,QAAM8zB,KAAgBD,EAAE/yB,KAAM,KAC9BizB,aAAc,CAAC,CAAE7B,eAAcpxB,KAAM+yB,EAAE/yB,OACvCC,QAAS8yB,EAAEvwB,OAAOuvB,IAAIK,KAClBlzB,QAAM8zB,KAAgBZ,EAAG,KACzBa,aAAc,CAAC,CAAE7B,eAAcpxB,KAAMoyB,SAGxCpB,QAAKe,KAAIjB,GAAQA,EAAKoC,8BAA2B,EACpDf,MAAG,GACb,CACAU,sBAAsBnyB,EAASyyB,EAAalzB,EAASmxB,EAAc0B,GAC/D,MAAMzR,EAAW8R,EAAYpB,IAAIK,IAC7B,MAAMpyB,EAAOC,EAAQpB,OACd,GAAE6B,EAAQV,QAAQoyB,EAAEC,UAClBN,IAAI50B,GAAM8C,EAAQsyB,KAAKC,GAAKA,EAAEr1B,KAAOA,IACrCs0B,OAAO2B,uBACPrB,IAAIS,GAAKA,EAAExyB,MACXihB,KAAK,OACRvgB,EAAQV,KACd,MAAO,CACHmL,UAAWzK,EAAQvD,GACnBkH,MAAO+tB,EAAE/tB,MACT/D,IAAK8xB,EAAE9xB,IACP2yB,aAAc,CACV,CACI7B,eACApxB,SAGR2jB,YAAa,CACT,CACImP,kBACAtP,YAAa4O,EAAEiB,QAGvBhB,UAAWD,EAAEC,UACjB,GAEJ,OAAO3B,KAAKD,YAAY/vB,QAAQmyB,sBAAsBxR,GAAU2P,QAAKe,KAAI,EAAGc,4BAAsB,CAC9FA,wBACA1nB,UAAWzK,EAAQvD,MAE3B,CACAm2B,cAAcC,GACV,MAAQ7yB,UAAS0wB,eAAcoC,aAAYC,eAAcC,iBAAkBH,EACrEI,EAAmB,GACnBC,EAAsBF,GAAiB,GAM7C,OALkBF,EACZ9C,KAAKD,YAAY/vB,QACdmzB,6BAA6B,CAAC,EAAGnzB,EAAQvD,IACzC0zB,UAAU,EAAGiD,qBAAsBA,EAAgB3pB,QAAK,EAC3DgoB,MAAG,KACQnB,QAAKc,KAASzQ,IAC3B,GAAIoS,EAAc,CACdE,EAAiBI,KAAKrD,KAAKD,YAAY/vB,QAAQ4yB,cAAcG,IAC7D,MAAMO,KAAiBC,OAAgBvzB,EAAS0wB,IAAepxB,MAAQ,GACjEk0B,KAAiBD,OAAgBR,EAAcrC,IAAepxB,KACpE,GAAIk0B,GAAkBF,IAAmBE,GAAkBV,EACvD,UAAWW,KAAW9S,EAAU,CAC5B,MAAM+S,KAAqBH,OAAgBE,EAAS/C,IAAepxB,MAAQ,GAC3E,IAAIq0B,EACJ,MAAMC,EAAuBV,EAAoBrB,KAAKzkB,IAAKA,GAAE3Q,KAAOg3B,EAAQh3B,IACxEm3B,EACAD,EAAeC,GAGfD,EAAe,CACXl3B,GAAIg3B,EAAQh3B,GACZ81B,aAAc,CAAC,CAAE7B,eAAcpxB,KAAMo0B,KAEzCR,EAAoBG,KAAKM,IAE7B,MAAME,MAAqBN,OAAgBI,EAAcjD,GACrDmD,KACIA,GAAmBv0B,KACnBu0B,GAAmBv0B,KAAOiwB,GAAYsE,GAAmBv0B,KAAMg0B,EAAgBE,GAM/EK,GAAmBv0B,KAAO,CACtBk0B,KACGC,EAAQl0B,QAAQ8xB,IAAIS,IAAKA,GAAExyB,OAChCihB,KAAK,KAGnB,CAER,CACA,OAAI2S,EAAoB/0B,QACpB80B,EAAiBI,KAAKrD,KAAKD,YAAY/vB,QAAQ8zB,sBAAsBZ,KAAoB,EAEtF/B,MAAS8B,EAAgB,GAExC,CACAc,oBAAoBtD,EAAOzwB,EAAS0wB,GAMhC,OALkBD,EAAMqC,WAClB9C,KAAKD,YAAY/vB,QACdmzB,6BAA6B,CAAC,EAAGnzB,EAAQvD,IACzC0zB,UAAU,EAAGiD,qBAAsBA,EAAgB3pB,QAAK,EAC3DgoB,MAAG,KACQnB,QAAKc,KAASzQ,IAC3B,IAAIqT,KAA6BvC,MAAG,IACpC,GAAIhB,EAAMqC,WAAY,CAElB,IAAImB,EACJ,MAAMC,KAAgBX,OAAgB9C,EAAOC,IAAepxB,KACvD40B,IACDF,KAA6BvC,MAAG,KAEpC,MAAM0C,EAAmB,GACzB,UAAWV,KAAW9S,EAClB,GAAI8S,EAAQl0B,QAAQ8xB,IAAIS,GAAKA,EAAEr1B,IAAIgY,SAASgc,EAAMh0B,IAAK,CAC9Cw3B,IACDA,KAAgBV,OAAgBE,EAAQl0B,QAAQsyB,KAAKC,GAAKA,EAAEr1B,KAAOg0B,EAAMh0B,IAAKi0B,IAAepxB,MAEjG,MAAM80B,KAAcb,OAAgBE,EAAS/C,IAAepxB,MAAQ,GAChE20B,GAAiBC,GAAiBE,EAAY3f,SAASwf,IACvDE,EAAiBd,KAAK,CAClB52B,GAAIg3B,EAAQh3B,GACZ81B,aAAc,CACV,CACI7B,eACApxB,KAAMiwB,GAAY6E,EAAaH,EAAeC,MAKlE,CAEAC,EAAiBh2B,SACjB61B,EACIhE,KAAKD,YAAY/vB,QAAQ8zB,sBAAsBK,GAE3D,CACA,OAAOnE,KAAKD,YAAY/vB,QACnB+zB,oBAAoBtD,GACpBH,QAAKc,KAAS,IAAM4C,GAA2B,GAE5D,CACAK,qBAAqB53B,EAAIgO,GACrB,OAAOulB,KAAKD,YAAY/vB,QAAQq0B,qBAAqB53B,GAAI6zB,QAAKp1B,KAAUo5B,GAChEA,EAAOD,qBAAqBC,SAAWC,MAAeC,QAC/CxE,KAAKD,YAAY/vB,QAAQy0B,WAAWhqB,GAAWiqB,WAG/CC,MAAWL,EAAOD,qBAAqBO,UAG1D,CAACC,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFlF,GAAVt0B,MAAgDy5B,OAAc,EAA6CH,SAClM7E,KAAKiF,WADkF15B,MAAE,CAAA25B,MACYrF,EAAoBsF,QAApBtF,EAAoBiF,UAAAM,WAAc,SASpJ,MAAMC,WAAsCC,MACxCxF,YAAYyF,EAAOC,EAAQC,EAAqB1F,EAAa2F,EAAsBC,EAAaC,EAAgBC,GAC5GC,MAAMP,EAAOC,EAAQC,EAAqB1F,GAC1CC,KAAKuF,MAAQA,EACbvF,KAAKwF,OAASA,EACdxF,KAAKyF,oBAAsBA,EAC3BzF,KAAKD,YAAcA,EACnBC,KAAK0F,qBAAuBA,EAC5B1F,KAAK2F,YAAcA,EACnB3F,KAAK4F,eAAiBA,EACtB5F,KAAK6F,oBAAsBA,EAC3B7F,KAAK+F,wBAAyB,EAC9B/F,KAAKnyB,mBAAqB,CAAC,EAC3BmyB,KAAK5zB,iBAAmB,CAAC45B,MAAWC,cAAeD,MAAWE,eAC9DlG,KAAK9zB,wBAA0B8zB,KAAKmG,qBAAqB,sBACzDnG,KAAKxyB,mBAAqBwyB,KAAKmG,qBAAqB,gBACxD,CACAC,WACIpG,KAAKqG,cAAgBrG,KAAKuF,MAAMe,SAASlG,KAAKpT,OAAOsT,QAAKe,KAAKrxB,GAAYA,EAAQC,eAAY,EAAGs2B,KAAKt2B,IACnG,UAAWu2B,KAASv2B,EAChB+vB,KAAKnyB,mBAAmB24B,EAAM/5B,IAAM,CAChCqB,YAAa,EACbI,aAAc,GAClB,IAGR8xB,KAAKr0B,WAAa,IAAI86B,KAAiB,CACnCx2B,aAAc,IAAIy2B,KAAiB,MAEvCZ,MAAMa,MACV,CACA/3B,kBAEI,OADqBoxB,KAAKr0B,WAAWQ,IAAI,gBACrBmuB,QACxB,CACA7rB,WAAW6yB,GAEP,OADgBA,EAAYn1B,IAAI,WACjBmuB,QACnB,CACA7uB,OACI,GAAIu0B,KAAKr0B,WAAWE,SAAWm0B,KAAKr0B,WAAWC,SAC3C,OAGJ,MAAMg7B,EAAW5G,KAAKD,YAAY/vB,QAAQy0B,WAAWzE,KAAKvzB,IAAI0zB,UAAUC,GAAQA,EAAKpwB,UACrF62B,OAAc7G,KAAK9D,QAAS8D,KAAK1H,cAAesO,GAC3CtG,QAAKwG,KAAK,IAAC,EAAG1F,KAAS,GAAInxB,gBAAgBywB,EAAc1wB,MAC1D,MAAMizB,EAAmB,GACzB,UAAW8D,KAAmB/G,KAAKpxB,kBAAmB,CAClD,GAAIm4B,EAAgBC,MAAO,CACvB,MAAMC,EAAoBh3B,EAAa4xB,KAAKG,GAAMA,EAAGv1B,KAAOs6B,EAAgBv6B,MAAMC,IAClF,GAAIw6B,EAAmB,CACnB,MAAMxG,EAAQT,KAAKkH,sBAAsBD,EAAmBF,EAAiBrG,GAC7EuC,EAAiBI,KAAKrD,KAAKD,YAAY/vB,QAAQm3B,yBAAyB1G,GAC5E,CACJ,CACA,UAAW2G,KAAcpH,KAAKvxB,WAAWs4B,GACrC,GAAIK,EAAWJ,MAAO,CAClB,MAAM1F,EAAcrxB,EACf4xB,KAAKG,GAAMA,EAAGv1B,KAAOs6B,EAAgBv6B,MAAMC,KAC1C8C,QAAQsyB,KAAKC,GAAKA,EAAEr1B,KAAO26B,EAAW56B,MAAMC,IAClD,GAAI60B,EAAa,CACb,MAAMb,EAAQT,KAAKqH,iBAAiB/F,EAAa8F,EAAY1G,GAC7DuC,EAAiBI,KAAKrD,KAAK0F,qBAAqB3B,oBAAoB,IAAKtD,EAAOqC,WAAY9C,KAAK+F,wBAA0B/1B,EAAS0wB,GACxI,CACJ,CAER,CACA,SAAOS,MAAS8B,EAAgB,IAE/BqE,UAAU,KACXtH,KAAKr0B,WAAW47B,iBAChBvH,KAAK4F,eAAe4B,eACpBxH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,sBACX,EACF2a,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,sBACX,EAET,CACAka,sBAAsB5F,EAAauG,EAAsBnH,GAWrD,SAVcoH,OAA0B,CACpCC,aAAczG,EACd0G,cAAeH,EAAqBr7B,MACpCy7B,kBAAmBjI,KAAK9zB,wBACxBw0B,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAMgyB,EAAYhyB,MAAQ,KAItC,CACA+3B,iBAAiBzF,EAAQuG,EAAiBzH,GAWtC,SAVcoH,OAA0B,CACpCC,aAAcnG,EACdoG,cAAeG,EAAgB37B,MAC/By7B,kBAAmBjI,KAAKxyB,mBACxBkzB,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAMsyB,EAAOtyB,MAAQ,KAIjC,CACA84B,cAAcpb,EAAQ0T,GAClB,MAAM2H,EAAarI,KAAKr0B,WAAWQ,IAAI,gBACvC,UAAWm1B,KAAetU,EAAO/c,aAAc,CAC3C,MAAMq4B,KAAmB/E,OAAgBjC,EAAaZ,GAChD6H,EAAYvI,KAAKwI,mBAAmBlH,EAAa+G,EAAYC,GACnEtI,KAAKyI,oBAAoBzI,KAAK9zB,wBAAyBq8B,EAAWjH,EAAagH,GAC/E,IAAII,EAAcH,EAAUp8B,IAAI,WAC3Bu8B,IACDA,EAAc1I,KAAK2F,YAAYgD,MAAM,IACrCJ,EAAUK,WAAW,UAAWF,IAEpC,UAAW9G,KAAUN,EAAY/xB,QAAS,CACtC,MAAMs5B,KAAoBtF,OAAgB3B,EAAQlB,GAC5C0G,EAAapH,KAAK8I,cAAclH,EAAQ8G,EAAaG,GAC3D7I,KAAKyI,oBAAoBzI,KAAKxyB,mBAAoB45B,EAAYxF,EAAQiH,EAC1E,CACJ,CACJ,CACAJ,oBAAoB5mB,EAAcknB,EAAW/b,EAAQgc,GACjD,GAAInnB,EAAa1T,OAAQ,CACrB,IAAI86B,EAAyBF,EAAU58B,IAAI,CAAC,iBACvC88B,IACDA,EAAyBjJ,KAAK2F,YAAYa,MAAM3kB,EAAaogB,OAAO,CAACiH,EAAMC,SAAgBD,EAAM,CAACC,EAAM75B,MAAO,KAAO,CAAC,IACvHy5B,EAAUH,WAAW,eAAgBK,IAEzCjJ,KAAKoJ,yBAAyBvnB,EAAconB,EAAwBjc,EAAQgc,EAChF,CACJ,CACAR,mBAAmBxb,EAAQqb,EAAYW,GACnC,MAAMxC,EAAQ,CACV/5B,GAAIugB,EAAOvgB,GACXG,UAAWogB,EAAOpgB,UAClBG,UAAWigB,EAAOjgB,UAClByB,KAAMwe,EAAOxe,KACbc,KAAM05B,GAAoB15B,MAAQ,IAEtC,IAAIi5B,EAAYF,EAAW/N,SAASuH,KAAKwH,GAAWA,EAAQ78B,MAAMC,KAAOugB,EAAOvgB,IAChF,OAAI87B,GACAA,EAAUp8B,IAAI,OAAOm9B,SAAS9C,EAAM/5B,IACpC87B,EAAUp8B,IAAI,SAASm9B,SAAS9C,EAAMh4B,MACtC+5B,EAAUp8B,IAAI,SAASm9B,SAAS9C,EAAMl3B,MACtCi5B,EAAUp8B,IAAI,cAAcm9B,SAAS9C,EAAM55B,WAC3C27B,EAAUp8B,IAAI,cAAcm9B,SAAS9C,EAAMz5B,aAG3Cw7B,EAAYvI,KAAK2F,YAAYa,MAAMA,GACnC6B,EAAWhF,KAAKkF,IAEbA,CACX,CACAO,cAAc9b,EAAQ0b,EAAaM,GAC/B,MAAMxC,EAAQ,CACV/5B,GAAIugB,EAAOvgB,GACXG,UAAWogB,EAAOpgB,UAClBG,UAAWigB,EAAOjgB,UAClByB,KAAMwe,EAAOxe,KACbc,KAAM05B,GAAoB15B,MAAQ,IAEtC,IAAI83B,EAAasB,EAAYpO,SAASuH,KAAKwH,GAAWA,EAAQ78B,MAAMC,KAAOugB,EAAOvgB,IAClF,OAAI26B,GACAA,EAAWj7B,IAAI,OAAOm9B,SAAS9C,EAAM/5B,IACrC26B,EAAWj7B,IAAI,SAASm9B,SAAS9C,EAAMh4B,MACvC44B,EAAWj7B,IAAI,SAASm9B,SAAS9C,EAAMl3B,MACvC83B,EAAWj7B,IAAI,cAAcm9B,SAAS9C,EAAM55B,WAC5Cw6B,EAAWj7B,IAAI,cAAcm9B,SAAS9C,EAAMz5B,aAG5Cq6B,EAAapH,KAAK2F,YAAYa,MAAMA,GACpCkC,EAAYrF,KAAK+D,IAEdA,CACX,CAACvC,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFM,IA9LV95B,MA8LyDg+B,MA9LzDh+B,MA8LyFg+B,MA9LzFh+B,MA8LiHy5B,OA9LjHz5B,MA8LoJy5B,OA9LpJz5B,MA8L+Ks0B,GA9L/Kt0B,MA8LgNi+B,MA9LhNj+B,MA8LkPA,OA9LlPA,MA8LmRy5B,OAAsB,EAA4CH,SAC5a7E,KAAKyJ,UA/LkFl+B,MAAE,CAAAm+B,KA+LJrE,GAA6BsE,UAAA,iCAAAC,SAAA,CA/L3Br+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,wuCAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,qBAAFA,MAAE,oBAAFA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,eAAFA,gBAAE,kBAAFA,CA+LsV,mBA/LtVA,CA+LsV,mBA/LtVA,CA+LsV,gBA/LtVA,CA+LsV,6BA/LtVA,MAAE,8BAAAoC,GAAA,OA+LqpBtC,EAAA2lB,YAAArjB,EAAmB,GA/L1qBpC,MAAE,YAAFA,MAAE,YAAFA,gBAAE,kBAAFA,CA+LyxB,WA/LzxBA,CA+LyxB,WA/LzxBA,CA+LyxB,0BA/LzxBA,CA+LyxB,cA/LzxBA,MAAE,yBAAAoC,GAAA,OAAAtC,EAAA06B,uBAAAp4B,CAAA,GAAFpC,cAAE,YAAFA,MAAE,IAAFA,MAAE,gBAAFA,kBAAE,GAAAJ,GAAA,gBAAFI,oBAAE,qBAAFA,MAAE,GAAAmD,GAAA,cAAFnD,MAAE,YAAFA,WA+LyiP,EAAAH,IA/LziPG,MAAE,GAAFA,YAAE,gDAAFA,MAAE,GAAFA,MAAE,yBAAFA,MAAE,KAAAF,EAAA4lB,qBAAF1lB,CA+LiiB,sBA/LjiBA,MAAE,MAAAF,EAAAitB,gBAAF/sB,MAAE,GAAFA,MAAE,UAAAF,EAAA06B,wBAAFx6B,MAAE,GAAFA,YAAE,mDAAFA,MAAE,GAAFA,MAAE,mBAAAF,EAAAe,kBAAFb,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAAg7B,gBA+L4/D,EAAA2D,aAAA,CAAurLC,MAA8EA,MAAoFA,MAAyGC,KAA+HA,KAAsGV,KAAyGA,KAAgRA,KAAiLA,KAAwGA,KAA4JA,KAAwNA,KAAmLA,KAAiJA,IAAgKA,KAAuGA,KAAuGxE,MAAgFA,MAAmGA,KAAqGA,MAAiJA,MAAgGA,MAAsMA,MAA8IA,MAAwMA,MAAqPA,MAAsMA,MAAkFA,MAAmGA,MAAyGA,MAA8EA,MAAgFA,MAA+GA,MAA+FkF,KAAuDC,KAA6DnF,MAAqEA,OAAiBoF,OAAA,+EAAAC,gBAAA,IAOrvY,MAAMC,GACFxK,YAAY6F,GACR3F,KAAK2F,YAAcA,EACnB3F,KAAK9wB,KAAO8wB,KAAK2F,YAAYa,MAAM,CAC/Bl3B,KAAM,CAAC,GAAIi7B,KAAWC,UACtBh8B,KAAM,CAAC,GAAI+7B,KAAWC,WAE9B,CACAC,aACI,MAAMC,EAAc1K,KAAK9wB,KAAK/C,IAAI,QAC5Bw+B,EAAc3K,KAAK9wB,KAAK/C,IAAI,QAC9Bu+B,GAAeC,GAAeA,EAAY/+B,UAC1C++B,EAAYrB,YAAShH,KAAiB,GAAEoI,EAAYl+B,QAAS,KAErE,CACAyC,UACI,MAAQK,OAAMd,QAASwxB,KAAK9wB,KAAK1C,OAC5B8C,IAASd,GAGdwxB,KAAKlb,YAAY,CACbtW,OACAe,QAAS,GACTgzB,aAAc,CAAC,CAAE7B,aAAcV,KAAKU,aAAcpxB,UAE1D,CACAP,SACIixB,KAAKlb,aACT,CAAC+f,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFuF,IAnOV/+B,MAmOmEi+B,MAAc,EAA4C3E,SACpN7E,KAAKyJ,UApOkFl+B,MAAE,CAAAm+B,KAoOJY,GAAuCX,UAAA,6CAAAE,MAAA,EAAAC,KAAA,EAAAC,OAAA,qVAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IApOrCG,MAAE,EAAAsD,GAAA,qBAAFtD,MAAE,UAAFA,CAoOmR,sBApOnRA,MAAE,eAAFA,MAAE,aAAFA,MAAE,0BAoO4aF,EAAAo/B,YAAY,GApO1bl/B,gBAAE,sBAAFA,MAAE,eAAFA,MAAE,aAAFA,gBAAE,EAAAuD,GAAA,sBAoO8iC,EAAA1D,IApOhjCG,MAAE,GAAFA,MAAE,YAAAF,EAAA6D,MAAF3D,MAAE,GAAFA,MAAE,QAAFA,MAAE,oBAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,oBAoO8hB,EAAAy+B,aAAA,CAA+kBR,KAAgRA,KAAwGA,KAA4JA,KAAiJA,IAAgKxE,MAAiJA,MAAgGA,MAAwFA,MAA+EmF,MAAgBE,gBAAA,IAOh8E,MAAMO,GACF9K,YAAY6F,GACR3F,KAAK2F,YAAcA,EACnB3F,KAAK9wB,KAAO8wB,KAAK2F,YAAYa,MAAM,CAC/Bl3B,KAAM,CAAC,GAAIi7B,KAAWC,UACtB56B,IAAK,CAAC,GAAI26B,KAAWC,UACrB72B,MAAO,CAAC,GAAI42B,KAAWC,UACvBj7B,QAASywB,KAAK2F,YAAYkF,OAAO,CAAC,IAE1C,CACAzE,WACIpG,KAAKpsB,aAAeosB,KAAKhwB,QAAQ2gB,SAAS,GAAG/c,aAC7C,UAAW0tB,KAAetB,KAAKhwB,QAAQC,aACnC+vB,KAAK9wB,KAAK/C,IAAI,WAAWy8B,WAAWtH,EAAY9yB,KAAM,IAAIs8B,KAAY,GAAIP,KAAWC,WAEnExK,KAAK9wB,KAAK/C,IAAI,WACtB4+B,aAAazD,UAAU96B,IACjC,MAAMk+B,EAAc1K,KAAK9wB,KAAK/C,IAAI,QAElC,IADgB6+B,OAAOl5B,OAAOtF,GAAOy+B,MAAMvJ,GAAU,MAALA,IAChCl1B,GAASk+B,IAAgBA,EAAY1D,MAAO,CACxD,MAAM13B,EAAO07B,OAAOE,QAAQ1+B,GACvB60B,IAAI,EAAE8J,EAAWC,KAAcpL,KAAKhwB,QAAQC,aAC5C4xB,KAAKG,GAAMA,EAAGxzB,OAAS28B,IACtB57B,QAAQsyB,KAAKC,GAAKA,EAAEr1B,KAAO2+B,IAAW97B,MACvCihB,KAAK,KACVma,EAAYpB,SAAU,GAAEtJ,KAAKhwB,QAAQV,QAAQA,IACjD,CACoB07B,OAAOl5B,OAAOtF,GAAOy+B,MAAMvJ,GAAU,MAALA,KAEhD1B,KAAKrwB,gBAAkBqwB,KAAKhwB,QAAQ2gB,SAASkR,KAAKH,GAAKsJ,OAAOE,QAAQ1+B,GAAOy+B,MAAM,EAAEE,EAAWC,KAAc1J,EAAEnyB,QAAQsyB,KAAKC,GAAKA,EAAE9I,UAAYgH,KAAKqL,mBAAmBF,KAAa1+B,KACjL2+B,IAAS,EAGzB,CACAn8B,UACI,MAAQK,OAAMM,MAAKL,UAASoE,SAAUqsB,KAAK9wB,KAAK1C,MAChD,KAAK8C,GAASM,GAAQL,GAAYoE,GAC9B,OAEJ,MAAMguB,EAAYqJ,OAAOl5B,OAAOvC,GAASwxB,OAAO2B,uBAChD1C,KAAKlb,YAAY,CACbrK,UAAWulB,KAAKhwB,QAAQvD,GACxBmD,MACA+D,MAAO23B,OAAO33B,GACdguB,YACAY,aAAc,CACV,CACI7B,aAAcV,KAAKhwB,QAAQ0wB,aAC3BpxB,UAIhB,CACAP,SACIixB,KAAKlb,aACT,CACAymB,mBAAmB9+B,GACf,OAAOuzB,KAAKhwB,QAAQC,aAAa4xB,KAAKG,GAAMA,EAAGv1B,KAAOA,IAAK+B,MAAQ,EACvE,CACA68B,mBAAmB78B,GACf,OAAOwxB,KAAKhwB,QAAQC,aAAa4xB,KAAKG,GAAMA,EAAGxzB,OAASA,IAAO/B,IAAM,EACzE,CAACo4B,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF6F,IAzSVr/B,MAyS+Di+B,MAAc,EAA4C3E,SAChN7E,KAAKyJ,UA1SkFl+B,MAAE,CAAAm+B,KA0SJkB,GAAmCjB,UAAA,wCAAAE,MAAA,GAAAC,KAAA,GAAAC,OAAA,+uBAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IA1SjCG,MAAE,EAAA4D,GAAA,qBAAF5D,MAAE,WAAFA,CA0SkP,WA1SlPA,MAAE,EAAA6D,GAAA,wBAAF7D,MAAE,EAAAiE,GAAA,mBAAFjE,cAAE,EAAAkE,GAAA,aAAFlE,MAAE,UAAFA,CA0S8jD,sBA1S9jDA,MAAE,eAAFA,MAAE,aAAFA,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,cAAFA,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,4BAAFA,kBAAE,GAAAsE,GAAA,uBA0Si/E,EAAAzE,IA1Sn/EG,MAAE,GAAFA,MAAE,YAAAF,EAAA6D,MAAF3D,MAAE,GAAFA,MAAE,UAAAF,EAAA2E,QAAAC,cAAF1E,MAAE,GAAFA,MAAE,WAAAF,EAAA2E,QAAAC,aAAA9B,QAAF5C,MAAE,GAAFA,MAAE,OAAAF,EAAAsE,iBAAFpE,MAAE,GAAFA,MAAE,QAAFA,MAAE,oBAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,wBAAFA,MAAE,GAAFA,MAAE,eAAAF,EAAAuI,cA0S+gE,EAAAo2B,aAAA,CAA6hBC,MAAwPA,MAA0EA,MAAuEC,KAA+HA,KAAsGV,KAAyGA,KAAgRA,KAAwGA,KAA4JA,KAAiJA,IAAgKA,KAAuGgC,MAAq2BxG,MAA6KA,MAAiJA,MAAgGA,MAAwFA,MAA+EmF,MAAgBE,gBAAA,IAO/sL,MAAMoB,GAAoC,CACtCC,QAASC,KACTC,eAAaC,OAAW,IAAMC,GAC9BC,OAAO,GAEX,MAAMD,EACF,gBAAIz6B,GACA,OAAO2uB,KAAKgM,WAAahM,KAAKzwB,SAAW,EAC7C,CACAuwB,YAAY8F,GACR5F,KAAK4F,eAAiBA,EACtB5F,KAAK9uB,UAAY,GACjB8uB,KAAKiM,IAAM,IAAIC,MACflM,KAAKmM,OAAS,IAAID,MAClBlM,KAAKoM,KAAO,IAAIF,MAChBlM,KAAKqM,UAAW,EAChBrM,KAAKS,MAAQ,GACbT,KAAKsM,YAAa,EAClBtM,KAAKhvB,cAAe,EACpBgvB,KAAK7uB,cAAe,CACxB,CACAo7B,iBAAiBC,GACbxM,KAAKyM,WAAaD,CACtB,CACAE,kBAAkBF,GACdxM,KAAK2M,UAAYH,CACrB,CACAI,iBAAiBC,GACb7M,KAAKqM,SAAWQ,EAChB7M,KAAK4F,eAAe4B,cACxB,CACAsF,WAAWC,GACP/M,KAAKgM,UAAYe,GAAO,EAC5B,CACAC,QACIhN,KAAKiN,SAASC,cAAcF,OAChC,CACAn8B,SAASvC,EAAO6+B,GACZ,MAAMC,EAAcpN,KAAK3uB,aAAa/C,GACtC,IAAK8+B,EAAYn8B,SAAWm8B,EAAY3gC,GAAI,CACxC0gC,EAAMx8B,cAAe,EACrBqvB,KAAK7uB,aAAe7C,EACpB,MAAMmyB,EAAQT,KAAKqN,WAAWlhC,IAAImC,IAAQ4+B,cAC1CI,WAAW,IAAM7M,GAAOuM,QAC5B,CACJ,CACAt8B,aAAapC,EAAO6+B,GAChB,MAAMC,EAAcpN,KAAK3uB,aAAa/C,GAChCi/B,EAAUJ,EAAMlgB,OAAOzgB,MACzB4gC,IACIG,IACAH,EAAY99B,KAAOi+B,EACnBvN,KAAKoM,KAAKruB,KAAK,CAAEzP,QAAOszB,OAAQwL,KAEpCpN,KAAK7uB,cAAe,EAE5B,CACAX,aAAaoxB,GACJA,EAAO3wB,SACJ+uB,KAAKgM,WACLhM,KAAKgM,UAAYhM,KAAKgM,WAAWjL,OAAOe,GAAKA,EAAExyB,OAASsyB,EAAOtyB,MAC/D0wB,KAAKyM,WAAWzM,KAAKgM,YAGrBhM,KAAKmM,OAAOpuB,KAAK6jB,GAG7B,CACA4L,UAAUL,GACN,OAAQA,EAAMM,KACV,IAAK,IACL,IAAK,QACDzN,KAAK0N,iBACLP,EAAMQ,iBACN,MACJ,IAAK,YACG3N,KAAKhvB,cACLgvB,KAAK4N,mBACL5N,KAAKhvB,cAAe,GAEA,KAAfgvB,KAAKS,QACVT,KAAKhvB,cAAe,GAExB,MACJ,QACIgvB,KAAKhvB,cAAe,EAEhC,CACA68B,aACI7N,KAAKsM,YAAa,EAClBtM,KAAK0N,gBACT,CACAA,iBACI,MAAMn+B,EAAUywB,KAAK8N,sBAAsB9N,KAAKS,OAAOM,OAAOa,KAGzC5B,KAAKzwB,SAAWywB,KAAKgM,YACpBnK,KAAKC,GAAKA,GAAGxyB,OAASsyB,EAAOtyB,OAEnD,IAAK0wB,KAAKgM,WAAahM,KAAKzwB,QACxB,UAAWqyB,KAAUryB,EACjBywB,KAAKiM,IAAIluB,KAAK6jB,QAIlB5B,KAAKgM,aAAY+B,KAAO,IAAI/N,KAAKgM,aAAcz8B,IAC/CywB,KAAKyM,WAAWzM,KAAKgM,WAEzBhM,KAAKS,MAAQ,EACjB,CACAqN,sBAAsBrN,GAClB,OAAOA,EACFuN,MAAM,SACN3M,IAAI4M,GAAKA,EAAEC,QACXnN,OAAOkN,GAAW,KAANA,GACZ5M,IAAI4M,KAAQ3+B,KAAM2+B,EAAGh9B,QAAQ,IACtC,CACA28B,mBACI,GAAI5N,KAAK3uB,aAAalD,OAAQ,CAC1B,MAAMyzB,EAAS5B,KAAK3uB,aAAa2uB,KAAK3uB,aAAalD,OAAS,GAC5D6xB,KAAKxvB,aAAaoxB,EACtB,CACJ,CAACiD,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF+G,GA5aVvgC,MA4aqDA,OAAoB,EAA4Cs5B,SAC5M7E,KAAKyJ,UA7akFl+B,MAAE,CAAAm+B,KA6aJoC,EAAyBnC,UAAA,6BAAAwE,UAAA,SAAA/iC,EAAAC,GAA+a,GAA/a,EAAAD,IA7avBG,KAAE2E,GAAA,GAAF3E,KAAE4E,GAAA,EA6a0bi+B,QAAU,EAAAhjC,EAAA,KAAAijC,EA7atc9iC,MAAE8iC,EAAF9iC,WAAEF,EAAA4hC,SAAAoB,EAAA9sB,OAAFhW,MAAE8iC,EAAF9iC,WAAEF,EAAAgiC,WAAAgB,EAAA,GAAAC,OAAA,CAAAp9B,UAAA,YAAA3B,QAAA,UAAA88B,SAAA,YAAAkC,QAAA,CAAAtC,IAAA,MAAAE,OAAA,SAAAC,KAAA,QAAAxC,SAAA,CAAFr+B,MA6a+M,CAACkgC,MAAkC5B,MAAA,EAAAC,KAAA,EAAAC,OAAA,uXAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,KAAAD,EAAA,OAAA+J,EA7alP5J,cAAE,WAAFA,MAAE,mBAAFA,MAAE4J,GAAA,MAAAmqB,EAAF/zB,MAAE,UAAFA,MA6awiB+zB,EAAA0N,QAAgB,GA7axjBzhC,MAAE,EAAA6F,GAAA,aAAF7F,MAAE,kBAAFA,MAAE,iBAAAoC,GAAA,OA6a+qDtC,EAAAmiC,UAAA7/B,EAAiB,EA7alsDpC,CA6aosD,0BAAAF,EAAAihC,YAAmC,CAAI,EA7a3uD/gC,CA6aosD,yBAA8DF,EAAAwiC,YAAY,EA7a9wDtiC,CA6aosD,yBAAAoC,GAAA,OAAAtC,EAAAo1B,MAAA9yB,CAAA,GA7apsDpC,SA6aw2D,GAAAH,IA7ax2DG,MAAE,QAAAF,EAAAihC,YAAF/gC,MAAE,GAAFA,MAAE,SAAAF,EAAAgG,aAAAlD,QAAF5C,MAAE,GAAFA,MAAE,UAAAF,EAAAo1B,MAAFl1B,CA6aizD,WAAAF,EAAAghC,UAAA,EAAArC,aAAA,CAAoiCE,KAA+HA,KAAsGV,KAAgRA,KAAwGA,KAAwNxE,MAAmJA,OAA4BoF,OAAA,4uCAyB75H,MAAMoE,GACF1O,YAAY2O,GACR,UAAWhB,KAAOzC,OAAO0D,KAAKD,GAC1BzO,KAAKyN,GAAOgB,EAAOhB,EAE3B,EAEJ,MAAMkB,GACF7O,YAAYyF,EAAOxF,EAAa2F,EAAsBG,EAAqB+I,EAAchJ,GACrF5F,KAAKuF,MAAQA,EACbvF,KAAKD,YAAcA,EACnBC,KAAK0F,qBAAuBA,EAC5B1F,KAAK6F,oBAAsBA,EAC3B7F,KAAK4O,aAAeA,EACpB5O,KAAK4F,eAAiBA,EACtB5F,KAAK6O,kBAAmB,EACxB7O,KAAK8O,gBAAiB,EACtB9O,KAAK9xB,aAAe,IACpB8xB,KAAKlyB,YAAc,EACnBkyB,KAAK5W,kBAAoB,IAAI0hB,KAAY,IACzC9K,KAAKhlB,iBAAmB,IAAI+zB,MAAiB,CACzCC,aAAa,EACbC,cAAeA,CAACC,EAAGC,IAAMD,EAAEziC,KAAO0iC,EAAE1iC,GACpC2iC,cAAc,IAElBpP,KAAK5sB,sBAAwB,CAAC,EAC9B4sB,KAAKqP,SAAW,IAAIC,IACxB,CACAlJ,WACIpG,KAAKU,aACDV,KAAKuF,MAAMe,SAASiJ,SAASpjC,IAAI,UAAM,EAAKqjC,SAChDxP,KAAKD,YAAYG,SAASuP,mBAAmB/K,QAAQ4C,UAAUlH,IAC3DJ,KAAKpsB,aAAewsB,EAAKsP,cAAcz3B,sBAE3C,MAAM03B,EAAW3P,KAAKqP,SAAS/O,QAAKp1B,KAAU,IAAM80B,KAAKD,YAAY/vB,QAEhE4/B,0BAA0B5P,KAAKuF,MAAMsK,QAAQvJ,SAASiJ,SAASpjC,IAAI,OACnEg0B,UAAUC,GAAQA,EAAKpwB,WAAQ,EAAG8/B,KAAU9P,KAAKuF,MAAMe,SAASlG,KAAKpwB,UAC1EgwB,KAAK/H,UAAY0X,EAASrP,QAAKp1B,KAAU8E,GAAWgwB,KAAK5W,kBAAkB2hB,aAAazK,QAAKwP,KAAU,KAAE,EAAGzO,KAAI0O,GAAQA,EAClH//B,EAAQ2gB,SAASoQ,OAAOW,GAAKA,EAAEpyB,KAAK0gC,cAAcvrB,SAASsrB,EAAKC,gBAChEhgC,EAAQ2gB,aACdqP,KAAKqG,cAAgBsJ,EAASrP,QAAKe,KAAIrxB,GAAWA,EAAQC,eAC1D+vB,KAAK/W,YAAc+W,KAAK/H,UAAUqI,QAAKe,KAAI1Q,GAAYA,EAASxiB,SAChEwhC,EAASrI,UAAU2I,IACfjQ,KAAKhwB,QAAUigC,EACf,MAAMC,EAAmBD,EAAEtf,SAAS0Q,IAAIK,GAAKA,EAAEnyB,QAAQ8xB,IAAIO,GAAUA,EAAOn1B,KAAKy1B,OAC3EiO,EAAwBF,EAAEtf,SAAS0Q,IAAIK,GAAKA,EAAEnyB,QAAQ8xB,IAAIO,GAAUA,EAAO5I,UAAUkJ,OAC3FlC,KAAK/vB,aAAeggC,EAAEhgC,aAAaoxB,IAAIW,KACnCv1B,GAAIu1B,EAAGv1B,GACPoF,OAAO,EACPvC,KAAM0yB,EAAG1yB,KACT2B,OAAQk/B,EAAsB1rB,SAASud,EAAGv1B,IAC1CqF,OAAQkwB,EAAGzyB,QAAQ8xB,IAAIS,KACnBr1B,GAAIq1B,EAAEr1B,GACN6C,KAAMwyB,EAAExyB,KACR2B,OAAQi/B,EAAiBzrB,SAASqd,EAAEr1B,SAE1C,EAEV,CACAkc,gBAAgBza,GACZ8xB,KAAK9xB,aAAeA,EACpB8xB,KAAKlyB,YAAc,CACvB,CACA2a,cAAc2nB,GACVpQ,KAAKlyB,YAAcsiC,CACvB,CACAC,cAAcC,GACVtQ,KAAK6O,kBAAmB,EACxByB,EAAY5f,SAAU,CAC1B,CACA6f,gBACI,OAAQvQ,KAAK6O,gBACjB,CACA2B,iBACIxQ,KAAK4O,aACA6B,cAAcnG,GAAyC,CACxDoG,OAAQ,CACJhQ,aAAcV,KAAKU,gBAGtBJ,QAAKp1B,KAAUo5B,GACZA,EACOtE,KAAKD,YAAY/vB,QAAQkxB,0BAA0BoD,GAAQhE,QAAKp1B,KAAU,EAAGs3B,8BAA+BxC,KAAKD,YAAY/vB,QAAQuxB,wBAAwB,CAChKC,cAAegB,EAAyB/1B,GACxCgO,UAAWulB,KAAKhwB,QAAQvD,OAIrBkkC,MAGVrJ,UAAUhD,IACXtE,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,uBAEZgT,KAAKqP,SAASuB,OACd5Q,KAAK4F,eAAe4B,cAAa,EAEzC,CACA51B,kBAAkB0vB,GACd,MAAM70B,EAAK60B,EAAY70B,GACjBokC,EAAsB7Q,KAAKhwB,QAAQ2gB,SAASoQ,OAAOW,GAAKA,EAAEnyB,QAAQ8xB,IAAIS,GAAKA,EAAE9I,SAASvU,SAAShY,IAAK0B,OAC1G6xB,KAAK4O,aACAkC,OAAO,CACRC,SAAOrJ,KAAO,+CACdsJ,KAAMH,KAAsBnJ,KAAO,oDAAsD,GACzFuJ,gBAAiB,CAAE3hC,KAAMgyB,EAAYhyB,KAAM2T,MAAO4tB,GAClDK,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAUmmC,GACZA,EACOrR,KAAKD,YAAY/vB,QAAQshC,6BAA6B,CACzD9P,cAAe/0B,EACfgO,UAAWulB,KAAKhwB,QAAQvD,GACxB8kC,OAAO,IAIJZ,MAGVrJ,UAAU,EAAGgK,mCACkC,YAA5CA,EAA6BE,YAC7BxR,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,uBAEZgT,KAAKqP,SAASuB,QAEmC,4BAA5CU,EAA6BE,YAClCxR,KAAK6F,oBAAoB+B,MAAM0J,EAA6B1M,SAAW,GAAE,EAGrF,CACAlzB,UAAUpD,EAAO2qB,GACb,MAAMuN,EAAQxG,KAAK/vB,aAAa3B,GAC5Bk4B,GAASA,EAAM/5B,IACfuzB,KAAKD,YAAY/vB,QACZyhC,iBAAiB,CAClBC,qBAAsBlL,EAAM/5B,GAC5B+B,QAAM8zB,KAAgBrJ,EAAY,KAClCsJ,aAAc,CAAC,CAAEjzB,KAAM2pB,EAAYyH,aAAcV,KAAKU,iBAErD4G,UAAU,EAAGqK,0BACd3R,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,kBAEZgT,KAAKqP,SAASuB,MAAK,EAG/B,CACApgC,aAAalC,GAAS7B,KAAI6C,SACtB,MAAMgyB,EAActB,KAAK/vB,aAAa3B,GAClCgzB,GACAtB,KAAK4O,aACAkC,OAAO,CACRC,SAAOrJ,KAAO,yCACduJ,gBAAiB,CAAE3hC,QACnB4hC,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAUmmC,GACZA,EACOrR,KAAKD,YAAY/vB,QAAQ4hC,oBAAoBnlC,GAG7CkkC,MAGVrJ,UAAU,EAAGsK,0BACVA,EAAoBtN,SAAWC,MAAeC,SAC9CxE,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,kBAEZsU,EAAYxvB,OAASwvB,EAAYxvB,OAAOivB,OAAOW,GAAKA,EAAEj1B,KAAOA,GAC7DuzB,KAAKqP,SAASuB,QAGd5Q,KAAK6F,oBAAoB+B,MAAMgK,EAAoBhN,SAAW,GAAE,EAIhF,CACA5xB,wBAAwB6+B,EAAWrQ,EAAe4J,GACzCpL,KAAK5sB,sBAAsBy+B,KAC5B7R,KAAK5sB,sBAAsBy+B,GAAa,CAAC,GAEzCzG,EACApL,KAAK5sB,sBAAsBy+B,GAAWrQ,GAAiB4J,SAGhDpL,KAAK5sB,sBAAsBy+B,GAAWrQ,EAErD,CACAtuB,mBAAmBuwB,GACf,MAAM9B,EAAY,IACX8B,EAAQl0B,QAAQ8xB,IAAIS,GAAKA,EAAEr1B,OAC3Bu+B,OAAOl5B,OAAOkuB,KAAK5sB,sBAAsBqwB,EAAQh3B,MAExDuzB,KAAKD,YAAY/vB,QACZ8zB,sBAAsB,CACvB,CACIr3B,GAAIg3B,EAAQh3B,GACZk1B,aAAWoM,KAAOpM,MAGrB2F,UAAU,EAAGxD,4BACd9D,KAAKqP,SAASuB,MAAK,EAE3B,CACAx8B,cAAcqvB,GACVzD,KAAK4O,aACAkC,OAAO,CACRC,SAAOrJ,KAAO,0CACduJ,gBAAiB,CAAE3hC,KAAMm0B,EAAQn0B,MACjC4hC,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAU4mC,GAAYA,EAC1B9R,KAAK0F,qBAAqBrB,qBAAqBZ,EAAQh3B,GAAIuzB,KAAKhwB,QAAQvD,IACxEkkC,MACDrJ,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,mBAEZgT,KAAKqP,SAASuB,MAAK,EACpBjJ,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,kBACX,EAET,CACA+kB,mBACI/R,KAAK4O,aACA6B,cAAc7F,GAAqC,CACpD8F,OAAQ,CACJ1gC,QAASgwB,KAAKhwB,WAGjBswB,QAAKp1B,KAAUo5B,GACZA,EACOtE,KAAKD,YAAY/vB,QAAQmyB,sBAAsB,CAACmC,IAGhDqM,MAGVrJ,UAAUhD,IACXtE,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,mBAEZgT,KAAKqP,SAASuB,MAAK,EAE3B,CACAr9B,UAAUkwB,EAASzK,GACf,OAAOyK,EAAQl0B,QAAQsyB,KAAKC,GAAKA,EAAE9I,UAAYA,EACnD,CAAC6L,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF4J,IA9sBVpjC,MA8sB0Dg+B,MA9sB1Dh+B,MA8sB0Fy5B,OA9sB1Fz5B,MA8sBqHs0B,GA9sBrHt0B,MA8sBsJy5B,OA9sBtJz5B,MA8sByLy5B,OA9sBzLz5B,MA8sBqNA,OAAoB,EAA4Cs5B,SAC5W7E,KAAKyJ,UA/sBkFl+B,MAAE,CAAAm+B,KA+sBJiF,GAA8BhF,UAAA,kCAAAE,MAAA,GAAAC,KAAA,GAAAC,OAAA,k9BAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IA/sB5BG,MAAE,mBAAFA,CA+sBgH,cA/sBhHA,MAAE,EAAA+F,GAAA,eAAF/F,MAAE,cAAFA,MAAE,0BA+sB4vCF,EAAAmlC,gBAAgB,GA/sB9wCjlC,MAAE,gBAAFA,MAAE,GAAFA,MAAE,eAAFA,gBAAE,eAAFA,CA+sB29C,UA/sB39CA,CA+sB29C,cA/sB39CA,MAAE,0BA+sB4iDF,EAAA0mC,kBAAkB,GA/sBhkDxmC,MAAE,iBAAFA,MAAE,IAAFA,MAAE,gBAAFA,gBAAE,yBAAFA,MAAE,sBAAAoC,GAAA,OA+sBqhEtC,EAAAod,cAAA9a,EAAqB,EA/sB5iEpC,CA+sB8iE,8BAAAoC,GAAA,OAAuCtC,EAAAsd,gBAAAhb,EAAuB,GA/sB5mEpC,MAAE,YAAFA,MAAE,YAAFA,MAAE,uBAAFA,MAAE,gBAAFA,MAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAwG,GAAA,mBAAFxG,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA0G,GAAA,mBAAF1G,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA4G,GAAA,mBAAF5G,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA8G,GAAA,mBAAF9G,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAgH,GAAA,mBAAFhH,cAAE,GAAAiI,GAAA,yBAAFjI,MAAE,YAAFA,MAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAkI,GAAA,mBAAFlI,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAsI,GAAA,mBAAFtI,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAyI,GAAA,mBAAFzI,eA+sBgxM,EAAAH,IA/sBhxMG,MAAE,GAAFA,MAAE,UAAAF,EAAA4E,cAAF1E,MAAE,GAAFA,MAAE,IAAFA,MAAE,iDAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,6CAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,MAAAF,EAAA4sB,WAAF1sB,CA+sBw2D,eAAAF,EAAA6C,aA/sBx2D3C,CA+sBw2D,aA/sBx2DA,MAAE,MAAAF,EAAA4d,aAAF1d,CA+sBw2D,cAAAF,EAAAyC,aA/sBx2DvC,MAAE,GAAFA,MAAE,oBAAAF,EAAA+d,kBAAF7d,CA+sButE,wBA/sBvtEA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CA+sBk4E,sBA/sBl4EA,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CA+sB4oF,sBA/sB5oFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CA+sBo7F,sBA/sBp7FA,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAAFA,CA+sButG,eA/sBvtGA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CA+sBu9G,eA/sBv9GA,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAF,EAAAg7B,gBAAF96B,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAAFA,CA+sB00K,sBA/sB10KA,MAAE,GAAFA,MAAE,UAAFA,MAAE,+BAAFA,CA+sBmoL,sBA/sBnoLA,MAAE,GAAFA,MAAE,UAAFA,MAAE,uBAAFA,CA+sB27L,iBAAAy+B,aAAA,CAAkqBC,MAAwEA,MAAkEC,KAA+HA,KAAsGV,KAAgRA,KAAwGA,KAAwNgC,MAAq2BxG,MAAmJA,MAAiJA,MAAgGA,MAAqPA,MAAsMA,MAA+IA,MAAgFA,MAAoG8G,EAAyK5B,KAAuDC,KAA6DnF,MAA+DA,OAAqBoF,OAAA,+SAOx9T,MAAM4H,WAAgCC,MAClCnS,YAAY0F,EAAQzF,GAChB+F,MAAMN,EAAQ,CACVgM,WAAY,UACZ/kC,GAAI,GACJG,UAAW,GACXG,UAAW,GACXuC,KAAM,GACNoxB,aAAc,GACdzwB,aAAc,GACd0gB,SAAU,IACXlkB,GAAMszB,EAAY/vB,QAAQ4/B,0BAA0BnjC,GAAIylC,UAAU9R,GAAQA,EAAKpwB,SACtF,CAAC60B,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFiN,IAnuBVzmC,MAmuBmDg+B,MAnuBnDh+B,MAmuB2Ey5B,OAAc,EAA6CH,SAC7N7E,KAAKiF,WApuBkF15B,MAAE,CAAA25B,MAouBY8M,GAAuB7M,QAAvB6M,GAAuBlN,UAAAM,WAAc,SASvJ,MAAM+M,GAAgBC,GAAgB,CAClC,CACI1nB,KAAM,YACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,eACZC,cAAY9K,KAAO,yBAEvB3iB,SAAUqtB,EAAYK,iBAAiB,iBAE3C,CACI/nB,KAAM,gBACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,iBACZC,WAAY,CAAErB,SAAOzJ,KAAO,wBAAyBgL,KAAM,CAAC,MAAO,eAEvE3tB,SAAU,CACN,CACI2F,KAAM,kBACN2nB,UAAW1D,GACX4B,cAAe,CAACoC,OAChBvS,KAAM,CACFoS,WAAYA,EAAGxiC,aAAc,CACzB,CACImhC,MAAQ,GAAEnhC,EAAQV,OAClBojC,KAAM,CAAC,QAEX,CACIvB,SAAOzJ,KAAO,8BACdgL,KAAM,CAAC,sBAInBE,QAAS,CACL5iC,QAAUu1B,MAAUsN,OAAOC,OACtB9iC,QAAQ4/B,0BAA0BrK,EAAMsK,QAAQkD,OAAOtmC,IACvD0zB,UAAUC,GAAQA,EAAKpwB,cAGjCoiC,EAAYK,iBAAiB,oBAGxC,CACI/nB,KAAM,oCACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,yBACZC,WAAY,CAAErB,SAAOzJ,KAAO,wBAAyBgL,KAAM,CAAC,MAAO,eAEvE3tB,SAAUqtB,EAAYK,iBAAiB,2BAE3C,CACI/nB,KAAM,wBACN2nB,UAAWhN,GACXuN,WAASI,OAAkBhB,IAC3BzB,cAAe,CAACoC,OAChBvS,KAAM,CACFoS,WAAYS,KAGpB,CACIvoB,KAAM,gCACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,wBACZC,WAAY,CACR,CAAErB,SAAOzJ,KAAO,wBAAyBgL,KAAM,CAAC,MAAO,cACvD,CACIvB,SAAOzJ,KAAO,8BACdgL,KAAM,CAAC,MAAO,YAAa,sBAIvC3tB,SAAUqtB,EAAYK,iBAAiB,0BAE3C,CACI/nB,KAAM,SACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,aACZC,cAAY9K,KAAO,sBAEvB3iB,SAAUqtB,EAAYK,iBAAiB,eAE3C,CACI/nB,KAAM,aACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,eACZC,WAAY,CAAErB,SAAOzJ,KAAO,qBAAsBgL,KAAM,CAAC,MAAO,YAEpE3tB,SAAUqtB,EAAYK,iBAAiB,iBAE3C,CACI/nB,KAAM,cACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,kBACZC,cAAY9K,KAAO,2BAEvB3iB,SAAUqtB,EAAYK,iBAAiB,oBAE3C,CACI/nB,KAAM,kBACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,oBACZC,WAAY,CAAErB,SAAOzJ,KAAO,0BAA2BgL,KAAM,CAAC,MAAO,iBAEzE3tB,SAAUqtB,EAAYK,iBAAiB,sBAE3C,CACI/nB,KAAM,SACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,aACZC,cAAY9K,KAAO,sBAEvB3iB,SAAUqtB,EAAYK,iBAAiB,eAE3C,CACI/nB,KAAM,aACN2nB,UAAWC,MACXlS,KAAM,CACFmS,WAAY,eACZC,WAAY,CAAErB,SAAOzJ,KAAO,qBAAsBgL,KAAM,CAAC,MAAO,YAEpE3tB,SAAUqtB,EAAYK,iBAAiB,kBAG/C,SAASQ,GAA+B7S,EAAM2S,GAC1C,OAAO3S,EAAKpT,OAAOsT,QAAKe,KAAKrU,GAAW,CACpC,CACImkB,SAAOzJ,KAAO,wBACdgL,KAAM,CAAC,MAAO,cAElB,CACIvB,MAAQ,GAAEnkB,EAAO1d,OACjBojC,KAAM,CAAC,MAAO,YAAaK,EAAOtmC,KAEtC,CACI0kC,SAAOzJ,KAAO,8BACdgL,KAAM,CAAC,cAGnB,CAEA,MAAMQ,EACFpT,YAAY8F,GACR5F,KAAK4F,eAAiBA,EACtB5F,KAAKxrB,eAAiB,EAC1B,CACA2+B,kBACI7F,WAAW,IAAMtN,KAAKoT,SAASpG,QAAS,EAC5C,CACAz4B,eACIyrB,KAAKlb,YAAYkb,KAAKxrB,eAC1B,CACAzF,SACIixB,KAAKlb,aACT,CAAC+f,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFmO,GA/4BV3nC,MA+4BqDA,OAAoB,EAA4Cs5B,SAC5M7E,KAAKyJ,UAh5BkFl+B,MAAE,CAAAm+B,KAg5BJwJ,EAAyBvJ,UAAA,6BAAAwE,UAAA,SAAA/iC,EAAAC,GAAmI,GAAnI,EAAAD,GAh5BvBG,KAg5B+H8nC,MAA2B,KAAAjoC,EAAA,KAAAijC,EAh5B1J9iC,MAAE8iC,EAAF9iC,WAAEF,EAAA+nC,SAAA/E,EAAA9sB,MAAA,GAAAsoB,MAAA,EAAAC,KAAA,EAAAC,OAAA,4KAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,EAAA8I,GAAA,qBAAF9I,MAAE,gCAAFA,MAAE,gCAAAoC,GAAA,OAAAtC,EAAAmJ,eAAA7G,CAAA,GAAFpC,cAAE,EAAA+I,GAAA,qBAg5BgzB,EAAA01B,aAAA,CAA+DhF,MAAkMA,MAAwFA,MAA+EmF,MAAgBE,gBAAA,IAU90C,MAAMiJ,GAAqBC;;;;;;;;;MASrBC;MACAC;EAEN,MAAMC,WAA6BC,MAC/B7T,YAAY+F,EAAqB9F,EAAa4F,GAC1CG,QACA9F,KAAK6F,oBAAsBA,EAC3B7F,KAAKD,YAAcA,EACnBC,KAAK2F,YAAcA,EACnB3F,KAAKne,aAAeme,KAAKmG,qBAAqB,SAC9CnG,KAAKr0B,WAAa,IAAIioC,KAAU,CAC5BtkC,KAAM,IAAIw7B,KAAY,IACtB+I,KAAM,IAAI/I,KAAY,IACtBjpB,aAAcme,KAAK2F,YAAYa,SAAMsN,OAAwB9T,KAAKne,gBAE1E,CACAukB,WACIpG,KAAK2G,MACT,CACAoN,cACI/T,KAAKgU,SACT,CACAC,cAAc9G,GACVnN,KAAKr0B,WAAWQ,IAAI,SAASm9B,SAAS6D,EAAM79B,MAC5C0wB,KAAKr0B,WAAWQ,IAAI,SAASm9B,SAAS6D,EAAM0G,MAC5C7T,KAAKr0B,WAAWuoC,aACpB,CACAzoC,OACIu0B,KAAKD,YAAY/vB,QACZmkC,YAAY,CACb1nC,GAAIuzB,KAAKvzB,GACT6C,KAAM0wB,KAAKr0B,WAAWa,MAAM8C,KAC5BukC,KAAM7T,KAAKr0B,WAAWa,MAAMqnC,KAC5BhyB,aAAcme,KAAKr0B,WAAWa,MAAMqV,eAEnCylB,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CAAE1a,OAAQ,SAAS,EAC7F2a,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,SACX,EAET,CACAob,cAAcpb,EAAQ0T,GAClBV,KAAKr0B,WAAWQ,IAAI,SAASm9B,SAAStc,EAAO1d,MAC7C0wB,KAAKr0B,WAAWQ,IAAI,SAASm9B,SAAStc,EAAO6mB,KAAKxS,IAAI0D,GAAKA,EAAEt4B,KACzDuzB,KAAKne,aAAa1T,QAClB6xB,KAAKoJ,yBAAyBpJ,KAAKne,aAAcme,KAAKr0B,WAAWQ,IAAI,CAAC,iBAAkB6gB,EAEhG,CAAC6X,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF2O,IAr9BVnoC,MAq9BgDy5B,OAr9BhDz5B,MAq9BmFy5B,OAr9BnFz5B,MAq9B8Gi+B,MAAqB,EAA4C3E,SACtQ7E,KAAKyJ,UAt9BkFl+B,MAAE,CAAAm+B,KAs9BJgK,GAAoB/J,UAAA,uBAAAC,SAAA,CAt9BlBr+B,OAAEs+B,MAAA,EAAAC,KAAA,EAAAC,OAAA,0NAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,mBAAFA,CAs9BkH,oBAt9BlHA,MAAE,iBAAFA,MAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAAkJ,GAAA,gBAAFlJ,kBAAE,mBAAFA,CAs9BouB,yBAt9BpuBA,MAAE,uBAAAoC,GAAA,OAs9B08BtC,EAAA4oC,cAAAtmC,EAAqB,GAt9Bj+BpC,MAAE,WAAFA,WAs9B6+B,EAAAH,IAt9B7+BG,MAAE,GAAFA,MAAE,mBAAFA,MAAE,EAAAoJ,KAAFpJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,IAAAF,EAAA6wB,SAAF3wB,CAs9BqyB,cAt9BryBA,CAs9BqyB,eAAAF,EAAAwW,aAt9BryBtW,CAs9BqyB,mBAAAF,EAAAM,WAAAQ,IAAA,mBAAA69B,aAAA,CAAmVhF,MAAgFA,MAAmGA,KAAqGA,MAA0MA,MAA8IA,MAAmHA,MAA2EkF,KAAuDC,MAAgBC,OAAA,qEAAAC,gBAAA,IAOjlE,MAAM+J,WAA2BC,MAC7BvU,YAAY+F,EAAqB+I,EAAc7O,EAAayF,EAAQD,GAChEO,MAAMN,EAAQD,GACdvF,KAAK6F,oBAAsBA,EAC3B7F,KAAK4O,aAAeA,EACpB5O,KAAKD,YAAcA,EACnBC,KAAKsU,YAAc,IAAIC,SAAgBla,GACvC2F,KAAKwU,cAAgB,IAAID,SAAgBla,GACzC2F,KAAKyU,WAAY,EACjB3O,MAAM4O,WAAW,IAAIC,IAAS3U,KAAKD,YAAY/vB,QAAQ4kC,gBAAgBD,GAAME,yBAA0BzU,GAAQA,EAAKlpB,OAAQ,CAAC49B,EAAMhO,KAC/H,MAAMiO,EAAa/U,KAAKsU,YAAY9nC,MAC9BqnC,EAAO7T,KAAKwU,cAAchoC,OAAO60B,IAAI0D,GAAKA,EAAEv4B,OAClD,MAAO,CACH+C,QAAS,CACLulC,OACAhO,UACIiO,EACE,CACEhU,OAAQ,CACJzxB,KAAM,CAAE0lC,SAAUD,KAGxB,CAAC,EACPh5B,KAAM,CACFnP,UAAWqoC,MAAUC,MAEzBrB,OACAsB,aAAcC,MAAgBC,KAEtC,EACD,CAAEvO,KAAM,GAAIgO,KAAM,GACzB,CACA1O,WACIN,MAAMM,WACNpG,KAAKsV,qBAAoBzO,KAAc7G,KAAKhX,cAAegX,KAAK9W,aAAc8W,KAAK/W,aAAaqX,QAAKe,KAAI,EAAEnzB,EAAcJ,EAAasQ,MAAU,CAASlQ,eAAcJ,cAAasQ,iBACpL4hB,KAAKsU,YAAYhU,QAAKiV,KAAa,MAAG,EAAGC,MAAUxV,KAAKyV,WAAWnO,UAAU,IAAMtH,KAAK0V,WACxF1V,KAAKwU,cAAclU,QAAKkV,MAAUxV,KAAKyV,WAAWnO,UAAU,IAAMtH,KAAK0V,WACvE1V,KAAK2V,SAAW3V,KAAKD,YAAY/vB,QAAQ4lC,aAAa1D,UAAU9R,GAAQA,EAAKyT,KAAKp6B,MACtF,CACAo8B,cAAcC,GACNA,EAAM3nC,SACN6xB,KAAKyU,WAAY,EACjBzU,KAAKD,YAAY/vB,QACZ+lC,aAAaD,GACbxV,QAAK0V,MAAS,IAAOhW,KAAKyU,WAAY,IACtCnN,UAAU,EAAGyO,mBACd,IAAIE,EAAe,EACnB,UAAW3R,KAAUyR,EACjB,OAAQzR,EAAOkN,YACX,IAAK,QACDyE,IACA,MACJ,IAAK,gBACDjW,KAAK6F,oBAAoB+B,MAAMtD,EAAOM,SAI9C,EAAIqR,IACJnQ,MAAM4P,UACN1V,KAAK6F,oBAAoB4B,WAAQC,KAAO,sCAAuC,CAC3EzkB,MAAOgzB,IACV,GAIjB,CACAC,aAAah/B,GACT8oB,KAAKmW,mBAAmBj/B,EAAOmqB,IAAI6N,GAAKA,EAAEziC,KACrC6zB,QAAKp1B,KAAU4mC,GACZA,EAASxN,SAAWC,MAAeC,QAC5B,EAAC,GAGDxE,KAAKmW,mBAAmBj/B,EAAOmqB,IAAI6N,GAAKA,EAAEziC,IAAKqlC,EAASlN,SAAW,IAAItE,QAAKe,KAAI+U,GAAKA,EAAE9R,SAAWC,MAAeC,YAG3H8C,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,WAEZgT,KAAK0V,SAAQ,EACd/N,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,UACX,EAET,CACAmpB,mBAAmBE,EAAUzR,GACzB,OAAO5E,KAAK4O,aACPkC,OAAO,CACRC,SAAOrJ,KAAO,iCACduJ,gBAAiB,CACbhuB,MAAOozB,EAASloC,QAEpB6iC,KAAMpM,EACNsM,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAUorC,GAAQA,EAAMtW,KAAKD,YAAY/vB,QAAQkmC,aAAaG,IAAYzR,GAAW+L,MAAM,EAAGtP,KAAIiV,GAAOA,EAAIJ,cAC3H,CAACrR,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFqP,IAnkCV7oC,MAmkC8Cy5B,OAnkC9Cz5B,MAmkCiFy5B,OAnkCjFz5B,MAmkC6Gy5B,OAnkC7Gz5B,MAmkCwIg+B,MAnkCxIh+B,MAmkCgKg+B,MAAmB,EAA4C1E,SACtT7E,KAAKyJ,UApkCkFl+B,MAAE,CAAAm+B,KAokCJ0K,GAAkBzK,UAAA,qBAAAC,SAAA,CApkChBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,sSAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,mBAAFA,CAokC8G,UApkC9GA,CAokC8G,8BApkC9GA,MAAE,4BAAAoC,GAAA,OAokC2PtC,EAAAipC,YAAA1D,KAAAjjC,EAAwB,EApkCrRpC,CAokCuR,sBAAAoC,GAAA,OAA+BtC,EAAAmpC,cAAA5D,KAAAjjC,EAA0B,GApkChVpC,MAAE,WAAFA,MAAE,4BAAFA,MAAE,uBAAAoC,GAAA,OAokCsatC,EAAAwqC,cAAAloC,EAAqB,GApkC7bpC,kBAAE,yBAAFA,MAAE,wBAAAoC,GAAA,OAokCu3BtC,EAAA6qC,aAAAvoC,EAAoB,GApkC74BpC,MAAE,cAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,mBAAFA,cAAE,WAAFA,CAokCu9B,oCApkCv9BA,MAAE,8BAAAoC,GAAA,OAokC4lCtC,EAAAsd,gBAAAhb,EAAuB,GApkCrnCpC,MAAE,YAAFA,cAAE,gCAAFA,MAAE,sBAAAoC,GAAA,OAokCy4CtC,EAAAod,cAAA9a,EAAqB,GApkCh6CpC,MAAE,YAAFA,MAAE,YAAFA,MAAE,YAAFA,aAokCy8C,EAAAH,IApkCz8CG,MAAE,GAAFA,MAAE,OAAFA,MAAE,IAAAF,EAAAsqC,WAAFpqC,MAAE,GAAFA,MAAE,YAAAF,EAAAopC,WAAFlpC,MAAE,GAAFA,MAAE,SAAFA,MAAE,KAAFA,MAAE,KAAAF,EAAAyd,QAAFvd,MAAE,KAAAF,EAAAiqC,oBAAF/pC,MAAE,GAAAqJ,KAAFrJ,CAokC8uB,iBApkC9uBA,CAokC8uB,YApkC9uBA,MAAE,KAAFA,MAAE,GAAAsJ,MAAFtJ,MAAE,GAAFA,MAAE,eAAFA,MAAE,MAAAF,EAAA2d,gBAAFzd,MAAE,GAAFA,MAAE,cAAFA,MAAE,MAAAF,EAAA6d,cAAF3d,CAokCgwC,eApkChwCA,MAAE,MAAAF,EAAA2d,eAAFzd,CAokCgwC,aApkChwCA,MAAE,MAAAF,EAAA4d,cAokC8vC,EAAA+gB,aAAA,CAA2iBhF,MAA8JA,MAAmKA,MAAwLA,MAA8JA,MAAsMA,MAA2EkF,KAAuDqM,MAA6DvR,OAAoBoF,OAAA,yUAc/7F,MAAMoM,EACF,gBAAIC,CAAapF,GAEbrR,KAAK9oB,QAAUm6B,GAAO,IAAIqF,OAC9B,CACA5W,YAAY8O,EAAchJ,GACtB5F,KAAK4O,aAAeA,EACpB5O,KAAK4F,eAAiBA,EACtB5F,KAAK/oB,SAAU,EAEf+oB,KAAK2W,OAAS,IAAIzK,MAClBlM,KAAK9oB,OAAS,EAClB,CACA9B,eACI4qB,KAAK4O,aACA6B,cAAcmG,MAA4B,CAC3CC,KAAM,OAELvP,UAAUhD,IACPA,GAAUA,EAAOn2B,SACjB6xB,KAAK9oB,UAAS62B,KAAO/N,KAAK9oB,OAAO4/B,OAAOxS,GAAS,MAC5CtE,KAAK/qB,gBACN+qB,KAAK/qB,cAAgBqvB,EAAO,IAEhCtE,KAAK+W,gBAAgB/W,KAAK9oB,OAAQ8oB,KAAK/qB,eACvC+qB,KAAK4F,eAAe4B,eAAa,EAG7C,CACA9wB,cAAcsgC,GACVhX,KAAK/qB,cAAgB+hC,EACrBhX,KAAK+W,gBAAgB/W,KAAK9oB,OAAQ8/B,EACtC,CACAjgC,WAAWigC,GACP,QAAShX,KAAK/qB,eAAiB+qB,KAAK/qB,cAAcxI,KAAOuqC,EAAMvqC,EACnE,CACAuI,aAAagiC,GACThX,KAAK4O,aACA6B,cAAcwG,KAA6B,CAC5CJ,KAAM,KACNK,UAAU,EACVxG,OAAQ,CAAEsG,QAAO9/B,OAAQ8oB,KAAK9oB,UAE7BowB,WACT,CACA1wB,YAAYogC,GACRhX,KAAK9oB,OAAS8oB,KAAK9oB,OAAO6pB,OAAOmO,GAAKA,EAAEziC,KAAOuqC,EAAMvqC,IACjDuzB,KAAK/qB,eAAiB+qB,KAAK/qB,cAAcxI,KAAOuqC,EAAMvqC,KACtDuzB,KAAK/qB,cAAgB+qB,KAAK9oB,OAAO/I,OAAS,EAAI6xB,KAAK9oB,OAAO,QAAKmjB,GAEnE2F,KAAK+W,gBAAgB/W,KAAK9oB,OAAQ8oB,KAAK/qB,cAC3C,CACA8hC,gBAAgB7/B,EAAQjC,GACpB+qB,KAAK2W,OAAO54B,KAAK,CACb7G,SACAjC,iBAER,CACAsB,gBAAgB42B,IACZgK,QAAgBnX,KAAK9oB,OAAQi2B,EAAMiK,kBAAkBhX,KAAM+M,EAAMkK,UAAUjX,MAC3EJ,KAAK+W,gBAAgB/W,KAAK9oB,OAAQ8oB,KAAK/qB,cAC3C,CAAC4vB,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFyR,GAhpCVjrC,MAgpC2Cy5B,OAhpC3Cz5B,MAgpCuEA,OAAoB,EAA4Cs5B,SAC9N7E,KAAKyJ,UAjpCkFl+B,MAAE,CAAAm+B,KAipCJ8M,EAAe7M,UAAA,iBAAA2N,SAAA,EAAAC,aAAA,SAAAnsC,EAAAC,GAAA,EAAAD,GAjpCbG,MAAE,UAAAF,EAAA4L,QAAA,EAAAq3B,OAAA,CAAAmI,aAAA,0BAAAxhC,cAAA,gBAAAgC,QAAA,UAAAxB,kBAAA,qBAAA84B,QAAA,CAAAoI,OAAA,UAAA9M,MAAA,EAAAC,KAAA,EAAAC,OAAA,4xCAAA9sB,SAAA,SAAA7R,EAAAC,GAipCqvI,GAjpCrvI,EAAAD,IAAFG,MAAE,EAAAiK,GAAA,aAAFjK,MAAE,EAAA6K,GAAA,yBAAF7K,aAAE,EAAAyL,GAAA,yBAAFzL,QAipCuvI,EAAAH,EAAA,OAAAk0B,EAjpCvvI/zB,MAAE,GAAFA,MAAE,QAAAF,EAAA4L,QAAF1L,CAipCmU,WAAA+zB,EAAA,GAAA0K,aAAA,CAAqyLC,MAAwEC,KAA+HA,KAAsGA,KAAyKsN,KAA+eA,KAA0JA,KAAocxS,MAAuGA,MAAgIA,MAA4FA,MAAsFA,MAAyImF,KAA6DnF,MAAqEA,OAAmBoF,OAAA,4jFAAAC,gBAAA,IAqBt6Q,MAAMoN,EACF,wBAAIngC,GACA,OAAiC,MAA1B0oB,KAAK0X,iBAChB,CACA5X,YAAYC,EAAa8F,GACrB7F,KAAKD,YAAcA,EACnBC,KAAK6F,oBAAsBA,EAC3B7F,KAAK2X,mBAAqB,IAAIC,KAAmB,GACjD5X,KAAK6X,yBAA2B,IAAID,IACxC,CACAxR,WACI,MAAM0R,EAAmB9X,KAAKD,YAAYgY,OACrCC,aACA7X,UAAU,EAAG6X,gBAAiBA,EAAWC,iBACxCC,EAAelY,KAAKD,YAAYG,SAASiY,cAAchY,UAAUC,GAAQA,EAAKgY,WACpFvR,OAAciR,EAAkBI,GAAc5Q,UAAU,EAAE2Q,EAAiBG,MAEvEpY,KAAK3nB,eAAiB+/B,EAAS3+B,MAAMooB,KAAKQ,GAAKA,EAAE51B,KAAOwrC,GACxDjY,KAAKqY,kBAAoBD,EAAS3+B,QAEtCumB,KAAK6X,yBAAyB9M,aAAazD,UAAUgR,IACjDtY,KAAKuY,cAAcD,EAAG,GAE1BtY,KAAKwY,oBAAmB3R,QAAc4R,MAAKzY,KAAK0Y,eAAe,KAAM1Y,KAAK2X,mBAAmB5M,aAAazK,QAAKwP,KAAU,KAAKxP,QAAKe,KAAI,EAAE1Q,EAAUgoB,KAAYhoB,EAAS0Q,IAAIK,KACxKj1B,GAAIi1B,EAAEj1B,GACN6C,KAAMoyB,EAAEpyB,KACRqE,MAAO+tB,EAAE/tB,MACTqE,aAAc0pB,EAAE/tB,OAASglC,MAEjC,CACAJ,cAAcK,GACV5Y,KAAKroB,gBAAkBqoB,KAAKqY,kBAAkBxW,KAAKQ,GAAKA,EAAE51B,KAAOmsC,EAAW,GAChF,CACA//B,SACI,MAAMlB,EAAkBqoB,KAAKroB,gBACzBA,IACKqoB,KAAK1oB,qBAeD0oB,KAAK0X,mBACV1X,KAAKD,YAAY/vB,QACZ6oC,wBAAwB,CACzBC,UAAWnhC,EAAgBlL,GAC3BirC,kBAAmB1X,KAAK0X,kBACxBqB,aAAc/Y,KAAK2X,mBAAmBnrC,QAErC86B,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,6CAA8C,CAClFjwB,QAASE,EAAgBnJ,KAEzByU,MAAO+c,KAAK0X,kBAAkBvpC,SAElC6xB,KAAKlb,aAAY,EAAI,GA3BzBkb,KAAKD,YAAY/vB,QACZgpC,wBAAwB,CACzBF,UAAWnhC,EAAgBlL,GAC3BwsC,WAAYjZ,KAAKiZ,WACjBF,aAAc/Y,KAAK2X,mBAAmBnrC,QAErC86B,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,6CAA8C,CAClFjwB,QAASE,EAAgBnJ,KACzByU,MAAO+c,KAAKiZ,WAAW9qC,SAE3B6xB,KAAKlb,aAAY,EAAI,GAoBrC,CACA/V,SACIixB,KAAKlb,aACT,CACM4zB,eAAe5R,GAAM,IAAAoS,EAAAlZ,KAAA,SAAAmZ,MAAA,YACvB,aAAO,EAAOC,MAAcF,EAAKnZ,YAAY/vB,QAAQqpC,mBAAmB,CACpEC,eAAgBlE,MAAgBmE,GAChCxY,OAAQ,CACJtmB,UAAW,CAAE++B,GAAIN,EAAKD,YACtBxsC,GAAI,CAAE+sC,GAAIN,EAAKxB,oBAEnB5Q,SACDpC,UAAUtB,gBAAgB3pB,KAAM,EARZ,EAS3B,CAACorB,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF0S,GAxvCVlsC,MAwvCkEy5B,OAxvClEz5B,MAwvC6Fy5B,OAAsB,EAA4CH,SACtP7E,KAAKyJ,UAzvCkFl+B,MAAE,CAAAm+B,KAyvCJ+N,EAAsC9N,UAAA,4CAAAE,MAAA,GAAAC,KAAA,GAAAC,OAAA,mhBAAA9sB,SAAA,SAAA7R,EAAAC,GAA64G,GAA74G,EAAAD,IAzvCpCG,MAAE,EAAA8L,GAAA,qBAAF9L,MAAE,UAAFA,CAyvC0c,wBAzvC1cA,CAyvC0c,WAzvC1cA,MAAE,GAAFA,MAAE,eAAFA,cAAE,sCAAFA,cAAE,WAAFA,MAAE,wBAAFA,CAyvCi8B,WAzvCj8BA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,cAAFA,gBAAE,WAAFA,CAyvC+sC,cAzvC/sCA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,aAAFA,CAyvCk1C,WAzvCl1CA,CAyvCk1C,QAzvCl1CA,CAyvCk1C,SAzvCl1CA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,SAAFA,MAAE,IAAFA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,yBAAFA,cAAE,SAAFA,MAAE,GAAAmM,GAAA,qBAAFnM,MAAE,GAAAqM,GAAA,yBAAFrM,yBAAE,YAAFA,MAAE,GAAA4M,GAAA,cAAF5M,MAAE,YAAFA,kBAAE,GAAAoN,GAAA,uBAyvC+6G,EAAAvN,EAAA,OAAAsJ,EAzvCj7GnJ,MAAE,IAAFA,MAAE,GAAFA,YAAE,wBAAFA,MAAE,GAAFA,MAAE,cAAFA,CAyvC2oB,2BAzvC3oBA,CAyvC2oB,oBAAAF,EAAAouC,kBAzvC3oBluC,CAyvC2oB,cAAAF,EAAAwsC,0BAzvC3oBtsC,MAAE,GAAFA,YAAE,0CAAFA,MAAE,GAAFA,MAAE,cAAAF,EAAAssC,oBAAFpsC,MAAE,GAAFA,YAAE,wCAAFA,MAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,iCAAFA,MAAE,GAAAgM,GAAFhM,MAAE,MAAFA,MAAE,YAAAF,EAAAgN,eAAA,KAAAhN,EAAAgN,eAAA7J,SAAA,KAAFjD,MAAE,GAAFA,MAAE,OAAAF,EAAAsM,gBAAFpM,CAyvCsxD,WAAAmJ,GAzvCtxDnJ,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAF,EAAAmtC,kBAyvC0vE,GAAAxO,aAAA,CAA83CC,MAA8EA,MAAkEA,MAAoFC,KAA+HA,KAAsGV,KAAgRA,KAAkKA,KAAwGA,KAA2LA,KAA2LA,KAAmLxE,MAAgGA,MAAwFA,MAAoFA,MAA8KkF,KAAuDC,KAA6DnF,MAAyEA,OAAqBoF,OAAA,2NAAAC,gBAAA,IAOt3L,MAAMqP,GAAwCnG;;;;;;;;;;;;;;;;;;;EAoBxCoG,GAAwCpG;;;;;;;;;;;;;;;;;;;;EAqBxCqG,GAAuBrG;;;;;;;;;;;;EAavBsG,GAAuBtG;;;;;;;;;;;;EAc7B,MAAMuG,GACFha,YAAYC,EAAaga,GACrB/Z,KAAKD,YAAcA,EACnBC,KAAK+Z,kBAAoBA,EAEzB/Z,KAAKga,KAAO,UACZha,KAAKia,MAAQ,UACbja,KAAKxrB,eAAiB,GACtBwrB,KAAKvmB,MAAQ,GACbumB,KAAKnmB,oBAAqB,CAC9B,CACAusB,WACI,MAAM8T,EAA2B,YAAdla,KAAKga,KAClBha,KAAKD,YACFoa,MAAMT,GAAuC,CAC9CpB,IAAKtY,KAAKsY,KAAO,KAEhBnY,UAAU,EAAGia,cAAeA,EAAS3gC,MAAM4nB,IAAI4O,QAAWA,EAAG12B,YAAa,IAAI02B,EAAE12B,iBACnFymB,KAAKD,YACFoa,MAAMR,GAAuC,CAC9CrB,IAAKtY,KAAKsY,KAAO,KAEhBnY,UAAU,EAAGiD,qBAAsBA,EAAgB3pB,MAAM4nB,IAAI4O,QAAWA,EAAG12B,YAAa,IAAI02B,EAAE12B,iBACvGymB,KAAKqa,aAAeH,EAAW5S,UAAU,CACrCsJ,KAAMn3B,IACFumB,KAAKvmB,MAAQA,EACbumB,KAAKia,MAAQ,QACbja,KAAK+Z,kBAAkBvS,cAAa,GAGhD,CACAuM,cACI/T,KAAKqa,cAAcC,aACvB,CACAvrC,SACIixB,KAAKlb,aACT,CACAzL,iBAAiB9M,EAAMguC,GACnBhuC,EAAKgN,YAAchN,EAAKgN,YAAYwnB,OAAOyZ,GAAMA,EAAG/tC,KAAO8tC,GAC3Dva,KAAKnmB,oBAAqB,CAC9B,CACAD,iBACI,MAAM6gC,EAAwBza,KAAKxrB,eAAe6sB,IAAIqZ,GAAMA,EAAGjuC,IAC/D,OAAAuzB,KAAKia,MAAQ,UACe,YAAdja,KAAKga,KACbha,KAAKD,YAAY4a,OAAOf,GAAsB,CAC5CnZ,MAAOT,KAAKvmB,OAAO4nB,IAAIrxB,KACnBvD,GAAIuD,EAAQvD,GACZmuC,iBAAe7M,KAAO,IACf/9B,EAAQuJ,YAAY8nB,IAAImZ,GAAMA,EAAG/tC,OACjCguC,SAIbza,KAAKD,YAAY4a,OAAOd,GAAsB,CAC5CpZ,MAAOT,KAAKvmB,OAAO4nB,IAAIrxB,KACnBvD,GAAIuD,EAAQvD,GACZmuC,iBAAe7M,KAAO,IACf/9B,EAAQuJ,YAAY8nB,IAAImZ,GAAMA,EAAG/tC,OACjCguC,UAINnT,UAAUhD,IACnBtE,KAAKlb,YAAYkb,KAAKxrB,eAAc,EAE5C,CAACqwB,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF+U,IAv4CVvuC,MAu4C6Dy5B,OAv4C7Dz5B,MAu4CwFA,OAAoB,EAA4Cs5B,SAC/O7E,KAAKyJ,UAx4CkFl+B,MAAE,CAAAm+B,KAw4CJoQ,GAAiCnQ,UAAA,uCAAAE,MAAA,GAAAC,KAAA,EAAAC,OAAA,8cAAA9sB,SAAA,SAAA7R,EAAAC,GAAmwD,GAAnwD,EAAAD,IAx4C/BG,MAAE,EAAAwN,GAAA,qBAAFxN,MAAE,UAAFA,CAw4CuO,UAx4CvOA,CAw4CuO,WAx4CvOA,MAAE,GAAFA,MAAE,eAAFA,cAAE,gCAAFA,MAAE,gCAAAoC,GAAA,OAAAtC,EAAAmJ,eAAA7G,CAAA,GAAFpC,kBAAE,EAAAiO,GAAA,eAAFjO,MAAE,EAAAmO,GAAA,yBAAFnO,aAAE,GAAAoO,GAAA,sBAw4CgyD,EAAAvO,EAAA,OAAAsJ,EAx4ClyDnJ,MAAE,GAAFA,MAAE,GAAFA,MAAE,IAAFA,MAAE,oCAAFA,MAAE,GAAFA,MAAE,mBAAAF,EAAA4uC,MAAF1uC,CAw4CylB,WAAAmJ,EAAA,GAAAs1B,aAAA,CAA23CC,MAAmIC,KAA+HA,KAAsGlF,MAAkMA,MAAyKA,MAAwFA,MAA+EmF,MAAgBC,OAAA,4JAAAC,gBAAA,IAOl8F,MAAMwQ,EACF/a,YAAYyF,EAAOC,EAAQzF,GACvBC,KAAKuF,MAAQA,EACbvF,KAAKwF,OAASA,EACdxF,KAAKD,YAAcA,EACnBC,KAAK8a,uBAAwB,EAC7B9a,KAAK+a,kBAAoB,IAAInD,KAAmB,IAChD5X,KAAKgb,WAAY,EACjBhb,KAAKib,oBAAsB,IAAI1G,IAAgB,IAC/CvU,KAAKkb,gBAAkB,IAAI3G,IAAgB,IAC3CvU,KAAKmb,eAAiB,IAAI5G,IAAgB,IAC1CvU,KAAKob,uBAAyB,IAAI7G,KAAgB,GAClDvU,KAAKqP,SAAW,IAAIkF,KAAgB,GACpCvU,KAAKyV,SAAW,IAAInG,IACxB,CACAlJ,WACIpG,KAAKqb,qBAAuBrb,KAAKuF,MAAM+V,cAAchb,QAAKe,KAAIka,GAAOA,EAAIpvC,IAAI,kBAAe,EAAGk1B,KAAI+O,GAAUA,GAAYA,EAAL,IAAU,EAAGN,KAAU,IAAC,EAAG0L,QAC/Ixb,KAAKyb,sBAAwBzb,KAAKuF,MAAM+V,cAAchb,QAAKe,KAAIka,GAAOA,EAAIpvC,IAAI,qBAAkB,EAAGk1B,KAAIqa,GAAaA,GAAgBA,EAAN,KAAc,EAAG5L,KAAU,KAAE,EAAG0L,QAC9J,MAAMG,EAAc3b,KAAK+a,kBAAkBhQ,aAAazK,QAAKiV,KAAa,MAAG,EAAGhP,KAAI,IAAMvG,KAAK4b,sBAAsB,KAAE,EAAG9L,KAAU,KAC9HqL,EAAiBnb,KAAKmb,eAAeU,eAAevb,QAAKS,MAAO,IAAMf,KAAK8a,wBAAqB,EAAGvU,KAAI,IAAMvG,KAAK4b,sBAAsB,KAAE,EAAG9L,KAAU,KACvJsL,EAAyBpb,KAAKob,uBAAuBS,eAAevb,QAAKS,MAAO,IAA6B,MAAvBf,KAAK8b,iBAAsB,EAAGN,QAAqB,EAAGjV,KAAI,IAAMvG,KAAK4b,sBAAsB,KAAE,EAAG9L,MAAU,IAEhMiM,KADelV,KAAc7G,KAAKib,oBAAqBjb,KAAKkb,gBAAiBlb,KAAKqb,qBAAsBrb,KAAKyb,sBAAuBE,EAAaR,EAAgBC,EAAwBpb,KAAKqP,UACnK/O,QAAKkV,MAAUxV,KAAKyV,WAAQ,EAAGlP,KAAI,IAAOvG,KAAKgb,WAAY,IAAK,EAAGzF,KAAa,KAAE,EAAGrqC,KAAU,EAAEuB,EAAIuY,EAAUlX,EAAaI,EAAc8tC,EAAY3/B,EAASy/B,MAC5L,MAAMhV,EAAO54B,EACP4mC,GAAQhnC,EAAc,GAAKI,EACjC,GAAImO,EAAQlO,QAAU6xB,KAAK8a,sBAAuB,CAC9C,MAAMmB,EAAeD,EACf,CAAE1sC,KAAM,CAAE0lC,SAAUgH,SACpB3hB,EACN,OAAO2F,KAAKD,YAAYngB,WACnBs8B,0BAA0B,CAC3Bl3B,WACA3I,UACAy/B,kBACD,CACChV,OACAgO,OACA/T,OAAQkb,IAEP9b,UAAUC,GAAQA,EAAK8b,2BACvB5b,QAAK6b,MAAW,OAAM1a,MAAG,CAAEhoB,MAAO,GAAI2E,WAAY,KAC3D,CACK,OAAI3R,EACEuzB,KAAKD,YAAYngB,WACnBw8B,sBAAsB3vC,EAAIq6B,EAAMgO,EAAMkH,GACtC7b,UAAUC,GAAQA,EAAKxgB,YAAYwjB,kBAAe,EAGhD3B,MAAG,KAAI,IAErB,EAAG8E,KAAI,IAAOvG,KAAKgb,WAAY,IAAM,EAAGhF,MAAS,IAAOhW,KAAKgb,WAAY,IAC1Ehb,KAAKqc,UAAYN,EAAYzb,QAAKe,KAAIiD,GAAWA,EAASA,EAAO7qB,MAAQ,KACzEumB,KAAKsc,oBAAsBP,EAAYzb,QAAKe,KAAIiD,GAAWA,EAASA,EAAOlmB,WAAa,GAC5F,CACAm+B,YAAYC,GACJ,iBAAkBA,GAClBxc,KAAKib,oBAAoBrK,KAAK4L,EAAQC,aAAaC,cAEnD,aAAcF,GACdxc,KAAKkb,gBAAgBtK,KAAK4L,EAAQx3B,SAAS03B,cAE3C,mBAAoBF,GACpBxc,KAAKob,uBAAuBxK,KAAK4L,EAAQV,eAAeY,cAExD,mBAAoBF,GAChBxc,KAAK2c,gBACL3c,KAAKmb,eAAevK,KAAK5Q,KAAK2c,eAG1C,CACA5I,cACI/T,KAAKyV,SAAS7E,OACd5Q,KAAKyV,SAASmH,UAClB,CACAhB,sBAAsBxL,GAClBpQ,KAAK6c,SAAS,eAAgBzM,EAClC,CACA0M,wBAAwBpB,GACpB1b,KAAK6c,SAAS,kBAAmBnB,EACrC,CACAhG,UACI1V,KAAKqP,SAASuB,MAAK,EACvB,CACAiM,SAASpP,EAAKjhC,GACVwzB,KAAKwF,OAAOuX,SAAS,CAAC,MAAO,CACzBC,WAAYhd,KAAKuF,MACjB0X,YAAa,CACTC,CAACzP,GAAMjhC,GAEX2wC,oBAAqB,QACrBC,YAAY,GAEpB,CAACvY,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF8V,GA5+CVtvC,MA4+CuDg+B,MA5+CvDh+B,MA4+CuFg+B,MA5+CvFh+B,MA4+C+Gy5B,OAAc,EAA4CH,SAChQ7E,KAAKyJ,UA7+CkFl+B,MAAE,CAAAm+B,KA6+CJmR,EAA2BlR,UAAA,8BAAA0T,eAAA,SAAAjyC,EAAAC,EAAAiyC,GAA0S,GAA1S,EAAAlyC,GA7+CzBG,MAAE+xC,EA6+CsTC,MAAW,KAAAnyC,EAAA,KAAAijC,EA7+CnU9iC,MAAE8iC,EAAF9iC,WAAEF,EAAAmyC,eAAAnP,EAAA9sB,MAAA,GAAA+sB,OAAA,CAAAmO,aAAA,eAAAz3B,SAAA,WAAA82B,eAAA,iBAAAa,eAAA,iBAAA7B,sBAAA,yBAAAlR,SAAA,CAAFr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,0YAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,EAAAuO,GAAA,sBAAFvO,MAAE,WAAFA,cAAE,wBAAFA,MAAE,sBAAAoC,GAAA,OA6+CyiCtC,EAAAuwC,sBAAAjuC,EAA6B,EA7+CxkCpC,CA6+C0kC,8BAAAoC,GAAA,OAAmCtC,EAAAyxC,wBAAAnvC,EAA+B,GA7+C5oCpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,uBAAFA,MAAE,gBAAFA,MAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAwO,GAAA,mBAAFxO,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA0O,GAAA,mBAAF1O,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA4O,GAAA,mBAAF5O,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAgP,GAAA,mBAAFhP,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAmP,GAAA,mBAAFnP,aA6+CiwF,EAAAH,IA7+CjwFG,MAAE,GAAFA,MAAE,UAAAF,EAAA2vC,WAAFzvC,MAAE,GAAFA,MAAE,mBAAAF,EAAAmyC,eAAFjyC,CA6+CknB,0BA7+ClnBA,MAAE,GAAAqP,GAAFrP,MAAE,KAAAF,EAAAixC,uBAAF/wC,MAAE,GAAFA,MAAE,UAAAF,EAAA2vC,WAAFzvC,MAAE,QAAFA,MAAE,KAAAF,EAAAgxC,WAAF9wC,CA6+Ck2B,eA7+Cl2BA,MAAE,KAAAF,EAAAowC,uBAAFlwC,CA6+Ck2B,aA7+Cl2BA,MAAE,KAAAF,EAAAixC,qBAAF/wC,CA6+Ck2B,cA7+Cl2BA,MAAE,KAAAF,EAAAgwC,uBAAF9vC,MAAE,GAAFA,MAAE,oBAAAF,EAAA0vC,kBAAFxvC,CA6+C2uC,wBA7+C3uCA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CA6+C04C,sBA7+C14CA,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CA6+CgoD,sBA7+ChoDA,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CA6+Co5D,sBA7+Cp5DA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CA6+CkqE,eA7+ClqEA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CA6+CylF,iBAAAy+B,aAAA,CAA6lBC,MAAwEC,KAAyKX,KAA2OvE,MAAqPA,MAAsMA,MAA0IkF,KAAuDC,KAA6DnF,OAAiBoF,OAAA,sdAAAC,gBAAA,IAoBh8I,MAAMoT,UAAqCC,MACvC5d,YAAYia,EAAmB4D,EAAqB5d,EAAa6d,GAC7D9X,MAAMiU,EAAmB4D,EAAqB5d,GAC9CC,KAAK+Z,kBAAoBA,EACzB/Z,KAAK2d,oBAAsBA,EAC3B3d,KAAKD,YAAcA,EACnBC,KAAK4d,SAAWA,EAChB5d,KAAK6d,YAAc,IAAI3R,MACvBlM,KAAK8d,SAAW,GAChB9d,KAAKjhB,cAAgB,CAAC,EACtBihB,KAAK+d,cAAgB,CAACzvC,EAAO/B,IACLyzB,KAAKge,SAASC,iBAAiB3vC,IAC/B8xB,KAAKxgB,WAAWoF,WAAazY,EAAK6zB,KAAKxgB,WAAWoF,QAE9E,CACAu3B,YAAYC,GAER,GADA1W,MAAMyW,YAAYC,GACdA,EAAQ0B,gBAAkB1B,EAAQ/iC,MAAO,CACzC,MAAM0kC,EAAiB,GACvB,UAAWv+B,KAAcogB,KAAKvmB,OAAS,GAAI,CACvC0kC,EAAe9a,KAAKzjB,GACpB,MAAMw+B,EAAuBpe,KAAKlgB,kBAAkBF,GACpDu+B,EAAe9a,QAAQ+a,EAAqBlc,OAChD,CACAic,EAAeE,QAAQ,CAACz+B,EAAYtR,IAAW0xB,KAAKjhB,cAAca,EAAWnT,IAAM6B,EACvF,CACJ,CACA6kC,kBACInT,KAAKse,kBAAkB9B,QAAQlV,UAAW+J,IACtCrR,KAAKge,SAASC,iBAAiBI,QAAQ9xC,GAAQyzB,KAAKge,SAASO,WAAWhyC,IACxE,UAAWiyC,KAAOnN,EAAIoN,UAClBD,EAAIE,cAAgB1e,KAAKge,SACzBQ,EAAIG,SAASC,mBAAmB5e,KAAKge,SAASa,cAC9C7e,KAAKge,SAASc,QAAQN,EAAG,EAGrC,CACA1+B,kBAAkBvT,GACd,OAAOyzB,KAAKke,gBAAgBnd,OAAOsB,GAAKA,EAAErd,WAAazY,EAAKE,KAAO,EACvE,CACAsyC,OAAO5R,GACH,MAAM6R,EAA+D,IAAlD7R,EAAM5gC,KAAK6zB,KAAKxgB,WAAW+B,YAAYxT,OACpD8wC,EAAkBD,GAAchf,KAAKlyB,YAAc,GAAKkyB,KAAK9xB,aAAe,EAC5E8W,EAAWmoB,EAAM5gC,KAAK6zB,KAAKxgB,WAAWoF,SACtCk6B,EAAclf,KAAKvmB,MAAM0lC,UAAU/hC,GAAKA,EAAE3Q,KAAOuY,GACjDo6B,EAAgBH,EAAkB9R,EAAMkS,aAAeH,EAAc,EAM3E,GALAlf,KAAK6d,YAAY9/B,KAAK,CAClB0+B,aAActP,EAAM5gC,KAAK6zB,KAAKxgB,WAAWnT,GACzC6B,MAAO8wC,EACPp6B,SAAUmoB,EAAM5gC,KAAK6zB,KAAKxgB,WAAWoF,WAErCg6B,EACAhf,KAAKvmB,MAAQ,IAAIumB,KAAKvmB,OACtBumB,KAAKvmB,MAAM6lC,OAAOnS,EAAMoS,cAAe,GACvCvf,KAAKvmB,MAAM6lC,OAAOnS,EAAMkS,aAAc,EAAGlS,EAAM5gC,KAAK6zB,KAAKxgB,gBAExD,CACD,MAAMiwB,EAAS7P,KAAKvmB,MAAMooB,KAAKzkB,GAAKA,EAAE3Q,KAAOuY,GAC7C,GAAI6qB,EAAQ,CACR,MAAMqO,EAAiBle,KAAKlgB,kBAAkB+vB,GACxC2P,EAAwBP,EAAkB9R,EAAMoS,cAAgBL,EAAc,EACpFhB,EAAeoB,OAAOE,EAAuB,GAC7CtB,EAAeoB,OAAOnS,EAAMkS,aAAc,EAAGlS,EAAM5gC,KAAK6zB,KAAKxgB,WACjE,CACJ,CACAogB,KAAK+Z,kBAAkBvS,cAC3B,CAAC3C,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF0Y,GApkDVlyC,MAokDwDA,OApkDxDA,MAokDyFy5B,OApkDzFz5B,MAokD4Hy5B,OApkD5Hz5B,MAokDuJisC,MAAa,EAA4C3S,SACvS7E,KAAKyJ,UArkDkFl+B,MAAE,CAAAm+B,KAqkDJ+T,EAA4B9T,UAAA,gCAAAwE,UAAA,SAAA/iC,EAAAC,GAAqV,GAArV,EAAAD,IArkD1BG,KAqkD4Nk0C,KAAW,GArkDvOl0C,KAAEsP,GAAA,EAqkDsW6kC,OAAO,EAAAt0C,EAAA,KAAAijC,EArkD/W9iC,MAAE8iC,EAAF9iC,WAAEF,EAAA2yC,SAAA3P,EAAA9sB,OAAFhW,MAAE8iC,EAAF9iC,WAAEF,EAAAizC,kBAAAjQ,EAAA,GAAAC,OAAA,CAAA4P,eAAA,kBAAA3P,QAAA,CAAAsP,YAAA,eAAAjU,SAAA,CAAFr+B,aAAEo0C,mBAAAz/B,GAAA2pB,MAAA,GAAAC,KAAA,GAAAC,OAAA,21DAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAEwU,IAAFxU,MAAE,WAAFA,MAAE,GAAFA,cAAE,UAAFA,CAqkDikB,YArkDjkBA,CAqkDikB,UArkDjkBA,CAqkDikB,UArkDjkBA,MAAE,EAAAuP,GAAA,YAAFvP,MAAE,EAAAmQ,GAAA,YAAFnQ,MAAE,OAAFA,CAqkDi6E,UArkDj6EA,CAqkDi6E,oCArkDj6EA,MAAE,mBAAAoC,GAAA,OAqkDurFtC,EAAAu0C,gBAAAjyC,EAAuB,EArkDhtFpC,CAqkDktF,iCAAiDF,EAAAw0C,gBAAgB,GArkDnxFt0C,MAAE,YAAFA,oBAAE,GAAAmR,GAAA,aAAFnR,cAAE,cAAFA,MAAE,8BAAAoC,GAAA,OAqkDojKtC,EAAA0zC,OAAApxC,EAAc,GArkDpkKpC,MAAE,GAAA+R,GAAA,uBAAF/R,MAAE,eAAFA,MAAE,IAAFA,MAAE,GAAAkS,GAAA,YAAFlS,0BAAE,aAAFA,MAAE,GAAAoS,GAAA,sCAAFpS,MAAE,GAAA8S,GAAA,cAAF9S,MAAE,GAAA+S,GAAA,kCAAF/S,cAAE,GAAAsU,GAAA,0BAAFtU,QAqkDguR,EAAAH,IArkDhuRG,MAAE,GAAFA,MAAE,YAAAF,EAAAy0C,eAAFv0C,MAAE,GAAFA,MAAE,uBAAAF,EAAA2P,iBAAA,KAAA3P,EAAA2P,iBAAA+kC,UAAA5xC,QAAF5C,MAAE,GAAFA,MAAE,OAAAF,EAAA2P,kBAAFzP,MAAE,GAAFA,MAAE,UAAAF,EAAA0R,sBAAFxR,MAAE,GAAFA,MAAE,aAAFA,MAAE,MAAAF,EAAA20C,aAAFz0C,CAqkDklF,UAAAF,EAAA40C,eArkDllF10C,MAAE,GAAFA,MAAE,OAAAF,EAAA2R,iBAAA3R,EAAA6R,uBAAA,MAAA7R,EAAAgR,QAAA,KAAAhR,EAAAgR,QAAAlO,SAAF5C,MAAE,GAAFA,MAAE,2BAAAF,EAAA0yC,eAAFxyC,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAF,EAAAoO,MAAFlO,MAAE,GAAAyU,GAAA3U,EAAA6C,aAAA7C,EAAAyC,YAAAzC,EAAA+S,WAAA/S,EAAAoB,KAAFlB,CAqkDsjL,eAAAF,EAAAwlB,WArkDtjLtlB,MAAE,GAAFA,MAAE,eAAAF,EAAAoO,OAAApO,EAAAoO,MAAAtL,SAAF5C,MAAE,GAAFA,MAAE,OAAAF,EAAA+S,YAAF7S,MAAE,GAAFA,MAAE,OAAAF,EAAA+S,YAAF7S,MAAE,GAAFA,MAAE,OAAAF,EAAA+S,YAqkDyxN,EAAA4rB,aAAA,CAA8pMC,MAA+GA,MAAwEA,MAAoFC,KAAgGA,KAA+HA,KAAsGA,KAAyKsN,KAA+eA,KAAocA,KAAiHxS,MAAmKA,MAAwLA,MAAgGA,MAA2HA,MAAuIA,MAA6KkF,KAAuDqM,MAA6DpM,MAAgBC,OAAA,87KAAAC,gBAAA,IAiBxyf,MAAM6V,GAA0B3M;;;;;;MAM1B4M;EAEN,MAAMC,WAAkCzM,MACpC7T,YAAY8F,EAAgB7F,EAAa4F,EAAaE,EAAqB+I,EAAc+O,GACrF7X,QACA9F,KAAK4F,eAAiBA,EACtB5F,KAAKD,YAAcA,EACnBC,KAAK2F,YAAcA,EACnB3F,KAAK6F,oBAAsBA,EAC3B7F,KAAK4O,aAAeA,EACpB5O,KAAK2d,oBAAsBA,EAC3B3d,KAAKne,aAAeme,KAAKmG,qBAAqB,cAC9CnG,KAAKr0B,WAAaq0B,KAAK2F,YAAYa,MAAM,CACrCl3B,KAAM,CAAC,GAAIi7B,KAAWC,UACtB7kB,KAAM,CAAC,MAAI06B,OAAwB,0BACnCx9B,YAAa,GACby9B,SAAS,EACTxE,gBAAgB,EAChBz/B,QAAS2jB,KAAK2F,YAAYgD,MAAM,IAChC9mB,aAAcme,KAAK2F,YAAYa,SAAMsN,OAAwB9T,KAAKne,iBAEtEme,KAAKjE,aAAe,CAAC,EACrBiE,KAAK3jB,QAAU,GACf2jB,KAAKjd,WAAa,GAClBid,KAAKtc,aAAc,EACnBsc,KAAK5zB,iBAAmB,CAAC45B,MAAWC,cAAeD,MAAWua,kBAC9DvgB,KAAKwgB,eAAiB,IAAIlR,KAC1BtP,KAAKtc,YAAcsc,KAAK2d,oBAAoBxxC,IAAI,mCAAoC,CACxF,CACAi6B,WACIpG,KAAK2G,OACL3G,KAAKD,YAAYngB,WAAW6gC,uBAAuB/b,QAAQ4C,UAAUgP,IACjEtW,KAAKjd,WAAauzB,EAAIoK,oBAE1B,MAAMC,EAAmB3gB,KAAKr0B,WAAWQ,IAAI,WACvCy0C,EAAwB5gB,KAAKr0B,WAAWQ,IAAI,kBAClD6zB,KAAK6gB,gBAAkBD,EAAsB7V,aAAazK,QAAKkb,QAC/Dxb,KAAK8gB,mBAAkBC,MAAMJ,EAAiBK,cAAehhB,KAAKwgB,gBAAgBlgB,QAAKiV,KAAa,MAAG,EAAGxU,MAAO,IAAM4f,EAAiBM,UAAO,EAAG5f,KAAI,IAAMrB,KAAKkhB,sBAAsBlhB,KAAK3jB,QAASskC,EAAiBn0C,OAAOu0B,OAAOogB,IAGhO,UAAWC,KAAOD,EAAQE,UACtB,GAAkB,KAAdD,EAAI50C,MACJ,OAAO,EAGf,OAAO,MAEXwzB,KAAKshB,UAAYthB,KAAKuF,MAAMgK,SAASjP,QAAKe,KAAIkgB,GAAMA,EAAGp1C,IAAI,kBAAekuB,IAAS,EAAGnvB,KAAU8Z,GACxFA,KACOyc,MAAGzc,GAGHgb,KAAK9D,QAAQoE,QAAKe,KAAIzhB,GAAcA,EAAWiwB,QAAQpjC,MAG1E,CACAsnC,cACI/T,KAAKgU,SACT,CACAzxB,oBAAoB4+B,GAChB,OAAOnhB,KAAKjd,WAAW8e,KAAK2f,GAAKA,EAAEhzC,OAAS2yC,EAAQ3yC,KACxD,CACAiS,gBACI,QAASuqB,OAAOl5B,OAAOkuB,KAAKjE,cAAc5tB,MAC9C,CAIAszC,WAAWC,GACP,MAAMC,EAAc3hB,KAAKr0B,WAAWQ,IAAI,CAAC,SACnC68B,EAAqBhJ,KAAKhT,UAASuW,OAAgBvD,KAAKhT,OAAQgT,KAAKU,mBAAgBrG,EACrFunB,GAAsB5Y,IAAuBA,EAAmBrjB,KAClEg8B,GAAeA,EAAY/1C,UAAYg2C,GACvCD,EAAYrY,YAAShH,KAAiB,GAAEof,IAAa,KAE7D,CACA9+B,UAAUi/B,GACN,MAAMC,EAAe9hB,KAAKr0B,WAAWQ,IAAI,WACnC41C,EAAWF,EAAiBlN,KAAK1S,OAAO,CAAC+f,EAAQZ,SAChDY,EACH,CAACZ,EAAI9xC,OAAI,EAAG2yC,OAAkBb,EAAI50C,SAClC,CAAC,GACLs1C,EAAaze,KAAKrD,KAAK2F,YAAY0D,QAAQ,CACvC76B,KAAMqzC,EAAiBrzC,KACvBmmC,KAAMoN,KAEV/hB,KAAK3jB,QAAQgnB,KAAK,CACd70B,KAAMqzC,EAAiBrzC,KACvBmmC,KAAMkN,EAAiBlN,KAAKtT,IAAI6N,KAAQ5/B,KAAM4/B,EAAE5/B,KAAM9C,SAAOy1C,OAAkB/S,EAAE1iC,WAEzF,CACA4V,aAAa9T,GACT,MAAMwzC,EAAe9hB,KAAKr0B,WAAWQ,IAAI,YAC3B,IAAVmC,IACAwzC,EAAaI,SAAS5zC,GACtBwzC,EAAa5N,cACb4N,EAAaK,gBACbniB,KAAK3jB,QAAQijC,OAAOhxC,EAAO,GAC3B0xB,KAAKwgB,eAAe5P,OAE5B,CACAtwB,SACI,IAAK0f,KAAKr0B,WAAWq7B,MACjB,OAEJ,MAAMvG,EAAQT,KAAKoiB,qBAAqB,CACpC31C,GAAI,GACJG,UAAW,GACXG,UAAW,GACX2zB,aAAcV,KAAKU,aACnBpxB,KAAM,GACNqW,KAAM,GACNmC,WAAW,EACXnG,YAAa,GACbkB,YAAa,GACb5N,cAAe,KACfiC,OAAQ,GACRqrB,aAAc,GACduZ,gBAAgB,EAChBz/B,QAAS,GACTwzB,OAAQ,CAAC,EACT9qB,SAAU,MACXib,KAAKr0B,WAAYq0B,KAAKU,cACnB1b,EAAWgb,KAAKuF,MAAMe,SAASiJ,SAASpjC,IAAI,YAC9C6Y,IACAyb,EAAMzb,SAAWA,GAErBgb,KAAKD,YAAYngB,WAAWyiC,iBAAiB5hB,GAAO6G,UAAUlH,IAC1DJ,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,eAEZgT,KAAKjE,aAAe,CAAC,EACrBiE,KAAKr0B,WAAW47B,iBAChBvH,KAAK4F,eAAe4B,eACpBxH,KAAKwF,OAAOuX,SAAS,CAAC,MAAO3c,EAAKiiB,iBAAiB51C,IAAK,CAAEuwC,WAAYhd,KAAKuF,OAAO,EACnFoC,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,cACX,EAET,CACAvhB,QACIo7B,OAAc7G,KAAK9D,QAAS8D,KAAK1H,eAC5BgI,QAAKwG,KAAK,IAAC,EAAG1F,KAAS,EAAEkhB,EAAU5hB,MACpC,MAAMD,EAAQT,KAAKoiB,qBAAqBE,EAAUtiB,KAAKr0B,WAAY+0B,GACnE,OAAOV,KAAKD,YAAYngB,WAAW2iC,iBAAiB9hB,EAAK,IAExD6G,UAAU,KACXtH,KAAKjE,aAAe,CAAC,EACrBiE,KAAKr0B,WAAW47B,iBAChBvH,KAAK4F,eAAe4B,eACpBxH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,eAEZgT,KAAKwiB,kBAAkB9M,SAAQ,EAChC/N,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,cACX,EAET,CACAujB,gBACI,OAAOzK,MAAMyK,kBAAoBvQ,KAAKjE,aAAa7kB,SAAW8oB,KAAKjE,aAAa9mB,aACpF,CACAqO,oBACI0c,KAAKtc,aAAesc,KAAKtc,YACzBsc,KAAK2d,oBAAoB8E,IAAI,gCAAiCziB,KAAKtc,YACvE,CACAmN,UAAUviB,EAAO/B,GACb,OAAOm2C,KAAKC,UAAUp2C,EAC1B,CAIA67B,cAAcpb,EAAQ0T,GAClB,MAAMsI,KAAqBzF,OAAgBvW,EAAQ0T,GACnDV,KAAKr0B,WAAWi3C,WAAW,CACvBtzC,KAAM05B,EAAqBA,EAAmB15B,KAAO,GACrDqW,KAAMqjB,EAAqBA,EAAmBrjB,KAAO,GACrD9C,YAAammB,EAAqBA,EAAmBnmB,YAAc,GACnEy9B,SAAUtzB,EAAOlF,UACjBg0B,eAAgB9uB,EAAO8uB,iBAE3B,MAAM+G,EAAY7iB,KAAKr0B,WAAWQ,IAAI,WAClC02C,EAAU10C,SAAW6e,EAAO3Q,QAAQlO,SACpC00C,EAAUC,QACV9iB,KAAK3jB,QAAU,GACf2Q,EAAO3Q,QAAQgiC,QAAQmD,GAAKxhB,KAAKpd,UAAU4+B,KAE3CxhB,KAAKne,aAAa1T,QAClB6xB,KAAKoJ,yBAAyBpJ,KAAKne,aAAcme,KAAKr0B,WAAWQ,IAAI,CAAC,iBAAkB6gB,EAAQgc,EAExG,CAKAoZ,qBAAqBE,EAAUpzC,EAAMwxB,GAajC,MAAO,KACH,EAboBoH,OAA0B,CAC9CC,aAAcua,EACdta,cAAe94B,EAAK1C,MACpBy7B,kBAAmBjI,KAAKne,aACxB6e,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAMgzC,EAAShzC,MAAQ,GACvBqW,KAAM28B,EAAS38B,MAAQ,GACvB9C,YAAay/B,EAASz/B,aAAe,MAKzCwzB,SAAUrW,KAAKjE,aAAa7kB,QAAQmqB,IAAI6N,GAAKA,EAAEziC,IAC/Cs2C,gBAAiB/iB,KAAKjE,aAAa9mB,eAAexI,GAClDqb,WAAY5Y,EAAK1C,MAAM8zC,QACvBjkC,QAAS2jB,KAAKkhB,sBAAsBlhB,KAAK3jB,QAAS2jB,KAAKr0B,WAAWa,MAAM6P,SAEhF,CAIA6kC,sBAAsB8B,EAAYC,GAC9B,OAAOD,EAAW3hB,IAAI,CAACS,EAAG1kB,MACtB5O,KAAMszB,EAAEtzB,KACR6yC,UAAWrW,OAAOE,QAAQ+X,EAAoB7lC,GAAGu3B,MAAMtT,IAAI,EAAE/xB,EAAM9C,GAAQ02C,MACvE5zC,OACA9C,SAAO22C,OAAqB32C,QAGxC,CAACq4B,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFqb,IAl0DV70C,MAk0DqDA,OAl0DrDA,MAk0DsFy5B,OAl0DtFz5B,MAk0DiHi+B,MAl0DjHj+B,MAk0D4Iy5B,OAl0D5Iz5B,MAk0D+Ky5B,OAl0D/Kz5B,MAk0D2My5B,OAAsB,EAA4CH,SACpW7E,KAAKyJ,UAn0DkFl+B,MAAE,CAAAm+B,KAm0DJ0W,GAAyBzW,UAAA,4BAAAwE,UAAA,SAAA/iC,EAAAC,GAn0DrB,GAm0DqB,EAAAD,GAn0DvBG,KAAE4U,GAAA,KAAA/U,EAAA,KAAAijC,EAAF9iC,MAAE8iC,EAAF9iC,WAAEF,EAAAm3C,kBAAAnU,EAAA9sB,MAAA,GAAAqoB,SAAA,CAAFr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,8kEAAA9sB,SAAA,SAAA7R,EAAAC,GAm0D4iX,GAn0D5iX,EAAAD,IAAFG,MAAE,mBAAFA,CAm0DqP,mBAn0DrPA,CAm0DqP,gBAn0DrPA,CAm0DqP,6BAn0DrPA,MAAE,8BAAAoC,GAAA,OAm0DqjBtC,EAAA2lB,YAAArjB,EAAmB,GAn0D1kBpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,gBAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAA6U,GAAA,gBAAF7U,MAAE,YAAFA,MAAE,GAAAmV,GAAA,yBAAFnV,yBAAE,YAAFA,CAm0DwqD,4BAn0DxqDA,CAm0DwqD,6BAn0DxqDA,CAm0DwqD,cAn0DxqDA,CAm0DwqD,uBAn0DxqDA,MAAE,gBAAFA,MAAE,yBAAFA,MAAE,cAAFA,MAAE,oBAAFA,MAAE,cAAFA,MAAE,GAAAoV,GAAA,sBAAFpV,MAAE,GAAAqV,GAAA,yBAAFrV,2BAAE,GAAAsV,GAAA,mBAAFtV,MAAE,YAAFA,cAAE,GAAAkW,GAAA,yBAAFlW,MAAE,YAAFA,MAAE,oBAAFA,CAm0Dm7H,cAn0Dn7HA,CAm0Dm7H,YAn0Dn7HA,CAm0Dm7H,wBAn0Dn7HA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,iBAAAoC,GAAA,OAm0Di4ItC,EAAAo2C,WAAA9zC,EAAAsf,OAAAzgB,MAA+B,GAn0Dl6IjB,MAAE,oBAAFA,gBAAE,wBAAFA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,oBAAFA,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,8BAAFA,MAAE,oBAAFA,kBAAE,GAAAqW,GAAA,mBAAFrW,MAAE,0CAAFA,MAAE,kBAAFA,MAAE,gBAAFA,MAAE,oBAAFA,MAAE,kBAAAoC,GAAA,OAAAtC,EAAA0wB,aAAApuB,CAAA,GAAFpC,gBAAE,kBAAFA,MAAE,gBAAFA,MAAE,wBAAFA,MAAE,gBAAFA,MAAE,yBAAFA,MAAE,eAAFA,MAAE,oBAAFA,MAAE,cAAFA,MAAE,GAAAuW,GAAA,sBAAFvW,MAAE,GAAAwW,GAAA,0BAAFxW,yBAAE,aAAFA,MAAE,GAAAyW,GAAA,uBAAFzW,cAAE,GAAAuX,GAAA,eAAFvX,cAAE,kBAAFA,MAAE,gBAAFA,MAAE,oCAAFA,MAAE,YAAFA,MAAE,YAAFA,MAAE,YAAFA,MAAE,GAAA6X,GAAA,qBAAF7X,iBAm0D8iX,EAAAH,EAAA,OAAAk0B,EAn0D9iX/zB,MAAE,IAAAkkB,EAAFlkB,MAAE,IAAAwJ,EAAFxJ,MAAE,IAAFA,MAAE,GAAFA,MAAE,WAAFA,MAAE,KAAAF,EAAAgtB,QAAF9sB,CAm0D6X,yBAn0D7XA,MAAE,KAAAF,EAAA4lB,qBAAF1lB,CAm0D6X,sBAn0D7XA,MAAE,KAAAF,EAAAitB,gBAAF/sB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAAgtB,QAAF9sB,CAm0Du3B,WAAA+zB,GAn0Dv3B/zB,MAAE,GAAFA,MAAE,YAAAF,EAAAM,YAAFJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,OAAAF,EAAAM,WAAAa,MAAA8zC,QAAF/0C,CAm0D83E,WAAAkkB,GAn0D93ElkB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAA6wB,UAAF3wB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAA6wB,UAAF3wB,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,CAm0DolJ,SAn0DplJA,MAAE,GAAAoY,GAAFpY,MAAE,sCAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,OAAAF,EAAAwW,aAAA1T,QAAF5C,MAAE,GAAFA,MAAE,UAAAF,EAAA6wB,QAAF3wB,CAm0Di1M,aAAAF,EAAAM,YAn0Dj1MJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,yBAAFA,MAAE,GAAFA,MAAE,eAAAF,EAAA2hB,OAAA,KAAA3hB,EAAA2hB,OAAA9V,OAAF3L,CAm0DykN,sBAAAF,EAAA2hB,OAAA,KAAA3hB,EAAA2hB,OAAA/X,cAn0DzkN1J,CAm0DykN,oBAAAF,EAAAe,kBAn0DzkNb,MAAE,GAAFA,MAAE,QAAFA,MAAE,0BAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,qCAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,OAAAF,EAAAM,WAAAa,MAAAsvC,eAAFvwC,CAm0D4lP,WAAAwJ,GAn0D5lPxJ,MAAE,GAAFA,MAAE,UAAAF,EAAAgR,QAAF9Q,CAm0D8pQ,eAAAF,EAAAwlB,WAn0D9pQtlB,MAAE,GAAFA,MAAE,mBAAAF,EAAAe,kBAAFb,MAAE,GAAFA,MAAE,QAAFA,MAAE,yBAAFA,CAm0D22T,eAn0D32TA,MAAE,GAAFA,MAAE,eAAAF,EAAAoB,GAAFlB,CAm0D09T,WAn0D19TA,MAAE,MAAAF,EAAAi2C,WAAF/1C,CAm0D09T,iBAn0D19TA,MAAE,MAAAF,EAAAy1C,iBAAFv1C,CAm0D09T,iBAn0D19TA,MAAE,MAAAF,EAAAw1C,iBAAFt1C,CAm0D09T,wBAAAF,EAAAqY,YAAA,GAAAsmB,aAAA,CAAiwEC,MAA+GA,MAAwEA,MAA8EA,MAAoFA,MAAyGC,KAA+HA,KAAsGV,KAAyGA,KAAgRA,KAAiLA,KAAwGA,KAA4JA,KAAwNA,KAAiJA,IAAgKA,KAAuGA,KAAuGD,KAA2OvE,MAAgFA,MAAmGA,KAAqGA,MAAwMA,MAAiJA,MAAgGA,MAAsMA,KAA0HA,MAAuGA,MAAgIA,MAA4FA,MAAsFA,MAA8IA,MAAmHA,MAAuGA,MAAwMA,MAAmKA,MAAgFA,MAA+GA,MAA+FA,MAAiGA,MAAoGwR,EAAgKqE,EAA6L3Q,KAAuDC,KAA6DnF,OAAoBoF,OAAA,qqBAAAC,gBAAA,IAa3xjB,MAAM+Y,EACFC,UAAU72C,GACN,OAAOA,GAAOmV,YAAY+0B,MAAM,GAAG,EACvC,CAAC7R,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFqe,EAAwB,EAA8Cve,SACvK7E,KAAKsjB,WAr1DkF/3C,MAAE,CAAA+D,KAAA,uBAAAo6B,KAq1DM0Z,EAAwBG,MAAA,IASpI,MAAMC,GACF1jB,YAAYC,EAAa0jB,GACrBzjB,KAAKD,YAAcA,EACnBC,KAAKyjB,YAAcA,EACnBzjB,KAAK5W,kBAAoB,IAAI0hB,KAAY,IACzC9K,KAAK9W,aAAe,IAAIqrB,IAAgB,GACxCvU,KAAKhX,cAAgB,IAAIurB,IAAgB,IACzCvU,KAAK0jB,aAAe,IAAIpU,KACxBtP,KAAKxb,YAAc,EACvB,CACA4hB,WACI,MAAMud,EAAuB3jB,KAAKD,YAAYngB,WAAWgkC,iBACnDtP,EAActU,KAAK5W,kBAAkB2hB,aAAazK,QAAKiV,KAAa,MAAG,EAAGiG,QAAqB,EAAG1L,KAAU,KAC5G5mB,EAAe8W,KAAK9W,aAAaoX,QAAKkb,QACtCxyB,EAAgBgX,KAAKhX,cAAcsX,QAAKkb,SAC9C3U,OAAcyN,EAAaprB,EAAcF,GAAese,UAAU,EAAEyN,EAAYjnC,EAAaI,MACzF,MAAM21C,EAA8B,KAAf9O,EACrB4O,EAAqBnF,IAAIsF,QAAQ,CAC7Bv0C,QAAS,CACLulC,MAAOhnC,EAAc,GAAKI,EAC1B44B,KAAM54B,EACN6yB,OAAQ,CACJzxB,KAAM,CAAE0lC,SAAUD,IAEtB8O,iBAEP,GAEL,MAAME,EAAoB/jB,KAAKD,YAAYngB,WACtCgkC,eAAe,CAChB9c,KAAM,EACN+c,cAAc,IAEb1jB,UAAUC,GAAQA,EAAK4jB,YAAYvqC,MAAM,GAAGuL,UACjDgb,KAAKlX,UAAS+d,KAAc8c,EAAqBzR,UAAU,EAAG8R,iBAAkBA,GAAcD,GAAmBzjB,QAAKe,KAAI,EAAE2iB,EAAaC,KAAsB,IACvJA,EACE,CACE,CACIx3C,GAAIw3C,EACJ30C,KAAM0wB,KAAKyjB,YAAYS,UAAU,2BACjCv+B,KAAM,GACNX,SAAU,KACVsB,SAAU,EACVrR,cAAe,KACf8P,SAAU,GACVpD,YAAa,GACbmG,WAAW,EACXlb,UAAW,GACXG,UAAW,KAGjB,MACHi3C,EAAYvqC,SAEnBumB,KAAK/W,YAAc06B,EAAqBzR,UAAU9R,GAAQA,EAAK4jB,YAAY5lC,YAC3E4hB,KAAKjX,gBAAkBiX,KAAK0jB,aAAapjB,QAAKiG,KAAI8K,GAAQrR,KAAKxb,YAAc6sB,IAAI,EAAGnmC,KAAUotC,GACtFA,EAAInqC,OACG6xB,KAAKD,YAAYngB,WACnBgkC,eAAe,CAChB9c,KAAM,IACN/F,OAAQ,CACJ/b,SAAU,CAAEw0B,GAAIlB,MAGnBpG,UAAU9R,GAAQA,EAAK4jB,YAAYvqC,QAAK,EAGtCgoB,MAAG,KAGtB,CACAld,eAAe3E,GACX,IAAI4E,EAAcwb,KAAKxb,YAClBA,EAAYC,SAAS7E,EAAWnT,IAIjC+X,EAAcA,EAAYuc,OAAOt0B,GAAMA,IAAOmT,EAAWnT,IAHzD+X,EAAY6e,KAAKzjB,EAAWnT,IAKhCuzB,KAAK0jB,aAAa9S,KAAKpsB,EAC3B,CAACqgB,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFye,IA/6DVj4C,MA+6D0Dy5B,OA/6D1Dz5B,MA+6DqFy5B,OAAc,EAA4CH,SACtO7E,KAAKyJ,UAh7DkFl+B,MAAE,CAAAm+B,KAg7DJ8Z,GAA8B7Z,UAAA,kCAAAE,MAAA,GAAAC,KAAA,GAAAC,OAAA,k3BAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAh7D5BG,MAAE,EAAAsY,GAAA,qBAAFtY,MAAE,iCAAFA,MAAE,sBAAAoC,GAAA,OAg7D8gBtC,EAAA6d,aAAA0nB,KAAAjjC,EAAyB,EAh7DziBpC,CAg7D2iB,8BAAAoC,GAAA,OAA+BtC,EAAA2d,cAAA4nB,KAAAjjC,EAA0B,GAh7DpmBpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,sBAAFA,MAAE,eAAFA,MAAE,sBAAFA,MAAE,gBAAFA,MAAE,GAAAuY,GAAA,mBAAFvY,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAqZ,GAAA,oBAAFrZ,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAga,GAAA,mBAAFha,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAka,GAAA,mBAAFla,WAg7DgzG,EAAAH,IAh7DhzGG,MAAE,GAAFA,MAAE,QAAFA,MAAE,KAAAF,EAAAyd,QAAFvd,CAg7D2T,iBAh7D3TA,MAAE,KAAAF,EAAA0d,iBAAFxd,CAg7D2T,eAh7D3TA,MAAE,KAAAF,EAAA2d,eAAFzd,CAg7D2T,aAh7D3TA,MAAE,KAAAF,EAAA4d,aAAF1d,CAg7D2T,cAh7D3TA,MAAE,KAAAF,EAAA6d,eAAF3d,MAAE,GAAFA,MAAE,oBAAAF,EAAA+d,kBAAF7d,CAg7DurB,wBAh7DvrBA,MAAE,+BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CAg7Dy1B,sBAh7Dz1BA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CAg7D2jC,eAh7D3jCA,MAAE,GAAFA,MAAE,UAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAg7DoqG,EAAAy+B,aAAA,CAA8pBC,MAAwEC,KAAgGA,KAA+HA,KAAsGlF,MAAoFA,MAAsMA,MAA+IyY,EAAmJvT,KAAuDC,KAA6DiZ,GAAwBhZ,OAAA,2rBAAAC,gBAAA,IAO7/J,MAAM8Z,MAA8BC,OAAuB,CACvDC,SAAU,kBACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWwe,mBACvED,EAAgB9/B,SAASuhB,MAAWye,eACxCC,YAAan4C,GAAQA,EAAK+C,KAC1Bq1C,WAAYA,CAAC5kB,EAAauY,IAAQvY,EAAYngB,WAAWglC,kBAAkBtM,GAAKhY,QAAKe,KAAIiV,GAAOA,EAAIsO,sBAElGC,GAA4B,CAC9BR,SAAU,kBACVlT,SAAOzJ,KAAO,4BACdod,KAAM,cACNR,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAWua,kBACxCwE,QAASA,EAAGC,WAAUjF,YAAWkF,gBAAeC,qBAC5C,MAAMtW,EAAeoW,EAAS74C,IAAIg5C,OAC5BplB,EAAcilB,EAAS74C,IAAI2mC,OAC3BjN,EAAsBmf,EAAS74C,IAAIi5C,OACzCxW,EACK6B,cAAc+S,GAAgC,CAC/C3M,KAAM,KACNK,UAAU,IAET5W,QAAKp1B,KAAUo5B,IAChB,GAAIA,EAAQ,CACR,MAAMgK,EAASyR,EAAU1e,IAAIgB,KACzBoa,aAAcpa,EAAE51B,GAChBuY,SAAUsf,EAAO73B,GACjB6B,MAAO,KAEX,OAAOyxB,EAAYngB,WAAWylC,eAAe/W,EACjD,CAEI,OAAOqC,OAGVrJ,UAAUhD,IACXuB,EAAoB4B,WAAQC,KAAO,oCAAqC,CACpEzkB,MAAO88B,EAAU5xC,SAErB+2C,IACAD,EAAcvP,SAAQ,EACzB,GAGH4P,MAAuCC,OAAgC,CACzElB,SAAU,kBACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAWua,kBACxCmE,YAAan4C,GAAQA,EAAK+C,KAC1Bk2C,oBAAqBA,CAACzlB,EAAa0lB,EAAe3M,IAAc/Y,EAAYngB,WACvE8lC,2BAA2B,CAC5BD,gBACA3M,cAECxY,QAAKe,KAAIiV,GAAOA,EAAIoP,+BAEvBC,MAAyCC,OAAkC,CAC7EvB,SAAU,kBACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWye,gBACvEF,EAAgB9/B,SAASuhB,MAAWwe,kBACxCE,YAAan4C,GAAQA,EAAK+C,KAC1Bu2C,sBAAuBA,CAAC9lB,EAAa0lB,EAAe3M,IAAc/Y,EAAYngB,WACzEkmC,6BAA6B,CAC9BhN,UAAWA,EACX2M,kBAECnlB,QAAKe,KAAIiV,GAAOA,EAAIwP,iCAG7B,MAAMC,WAAgCC,MAClClmB,YAAYC,EAAa8F,GACrBC,QACA9F,KAAKD,YAAcA,EACnBC,KAAK6F,oBAAsBA,EAC3B7F,KAAKxb,YAAc,GACnBwb,KAAKne,aAAeme,KAAKmG,qBAAqB,cAC9CnG,KAAK3jB,QAAU2jB,KAAKimB,yBACfC,cACAC,iBACAvjC,UAAU,CACXtT,KAAM,OACN6hC,SAAOzJ,KAAO,eACdgC,KAAM,CAAE0c,KAAM,QACdC,YAAa,SAEZzjC,UAAU,CACXtT,KAAM,aACNo6B,KAAM,CAAE0c,KAAM,WACdjV,SAAOzJ,KAAO,qBACd4e,cAAe95C,KACXsb,UAAW,CAAEy+B,IAAK/5C,OAGrBg6C,sBAAsBxmB,KAAKne,cAC3B4kC,eAAezmB,KAAKuF,OACzBvF,KAAK3X,MAAQ2X,KAAK0mB,uBACbC,YAAY,WAAY,OACxBC,QAAQ,CAAEt3C,KAAM,cAChBs3C,QAAQ,CAAEt3C,KAAM,cAChBs3C,QAAQ,CAAEt3C,KAAM,SAChBs3C,QAAQ,CAAEt3C,KAAM,SAChBs3C,QAAQ,CAAEt3C,KAAM,aAChBu3C,oBAAoB7mB,KAAKne,cACzB4kC,eAAezmB,KAAKuF,OACzBO,MAAMghB,UAAU,CACZC,SAAUC,MACVC,SAAU7mB,GAAQA,EAAK4jB,YACvBkD,aAAcA,CAACpS,EAAMqS,KACjB,MAAMtD,EAAgD,KAAjC7jB,KAAK5W,kBAAkB5c,OAAsD,IAAtCwzB,KAAK3jB,QAAQI,cAActO,aAEjFksB,EACN,MAAO,CACH9qB,QAAS,CACLulC,OACAhO,KAAMqgB,EACNpmB,OAAQ,CACJzxB,KAAM,CAAE0lC,SAAUhV,KAAK5W,kBAAkB5c,UACtCwzB,KAAK3jB,QAAQ+qC,qBAEpBvD,eACA9nC,KAAMikB,KAAK3X,MAAMg/B,mBAEzB,EAEJC,qBAAsB,CAACtnB,KAAK3jB,QAAQ0uB,aAAc/K,KAAK3X,MAAM0iB,eAErE,CACA3E,WACIN,MAAMM,WACNpG,KAAKzW,oBAAsByW,KAAKuF,MAAMgK,SAASjP,QAAKe,KAAIkgB,GAAMA,EAAGp1C,IAAI,cAAW,EAAGqvC,QACnF,MAAMkI,EAAe1jB,KAAKuF,MAAM+V,cAAchb,QAAKe,KAAIka,GAAOA,EAAIpvC,IAAI,cAAW,EAAGqvC,QAAqB,EAAGna,KAAIiX,GAAQA,EAAMA,EAAItK,MAAM,KAAO,KAC/I0V,EAAapjB,QAAKkV,MAAUxV,KAAKyV,WAAWnO,UAAUgR,IAClDtY,KAAKxb,YAAc8zB,IAEvBtY,KAAKjX,mBAAkB8d,KAAc6c,EAAc1jB,KAAKqP,UAAU/O,QAAKp1B,KAAU,EAAEotC,KAC3EA,EAAInqC,OACG6xB,KAAKD,YAAYngB,WACnBgkC,eAAe,CAChB9c,KAAM,IACN/F,OAAQ,CACJ/b,SAAU,CAAEw0B,GAAIlB,MAGnBpG,UAAU9R,GAAQA,EAAK4jB,YAAYvqC,QAAK,EAGtCgoB,MAAG,MAGlBzB,KAAKunB,0BAAyB1gB,KAAc7G,KAAKzW,oBAAqByW,KAAKlX,OAAQkX,KAAKjX,iBAAiBuX,QAAKe,KAAI,EAAE50B,EAAIu3C,EAAa9F,MACjI,GAAIzxC,EAAI,CACJ,MAAM+6C,EAAQ,IAAIxD,KAAgB9F,GAAgBrc,KAAKQ,GAAKA,EAAE51B,KAAOA,GACrE,OAAO+6C,EAAQA,EAAMl4C,KAAO,EAChC,CACA,MAAO,MAEX0wB,KAAK7W,0BAAyB0d,KAAc7G,KAAKzW,oBAAqByW,KAAKlX,OAAQkX,KAAKjX,iBAAiBuX,QAAKe,KAAI,EAAE50B,EAAIu3C,EAAa9F,MACjI,GAAIzxC,EAAI,CACJ,MAAM0xC,EAAiB,GACvB,UAAWv+B,KAAcokC,EAAa,CAClC7F,EAAe9a,KAAKzjB,GACpB,MAAMw+B,EAAuBF,EAAend,OAAOsB,GAAKA,EAAErd,UAAYqd,EAAErd,WAAapF,EAAWnT,IAChG0xC,EAAe9a,QAAQ+a,EAC3B,CACA,OAAOD,EAAegB,UAAU9c,GAAKA,EAAE51B,KAAOA,EAClD,CACA,OAAO,IAEf,CACAoc,YAAYskB,GACRnN,KAAKD,YAAYngB,WAAWylC,eAAe,CAAClY,IAAQ7F,UAAU,CAC1DsJ,KAAMA,KACF5Q,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCACxC1H,KAAK0V,SAAQ,EAEjB9N,MAAOD,IACH3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,oCAAmC,GAGrF,CACA+f,gBACI,MAAM1U,EAAS,IAAK/S,KAAKuF,MAAMe,SAASyM,eACjCA,EAAO/qB,SACdgY,KAAKwF,OAAOuX,SAAS,CAAC,KAAMhK,GAAS,CAAEiK,WAAYhd,KAAKuF,MAAO4X,oBAAqB,YACxF,CACAnsB,YAAYxiB,GACRwxB,KAAKD,YAAYgY,OAAO2P,mBAAmBl5C,GAAM84B,WACrD,CACA/iB,eAAe3E,GACX,IAAI4E,EAAcwb,KAAKxb,YAClBA,EAAYC,SAAS7E,EAAWnT,IAIjC+X,EAAcA,EAAYuc,OAAOt0B,GAAMA,IAAOmT,EAAWnT,IAHzD+X,EAAY6e,KAAKzjB,EAAWnT,IAKhCuzB,KAAKwF,OAAOuX,SAAS,CAAC,MAAO,CACzBE,YAAa,CACTlzB,SAAUvF,EAAYuc,OAAOt0B,KAAQA,GAAI8jB,KAAK,MAElD4sB,oBAAqB,QACrBH,WAAYhd,KAAKuF,OAEzB,CAACV,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFghB,IAnoEVx6C,MAmoEmDy5B,OAnoEnDz5B,MAmoE8Ey5B,OAAsB,EAA4CH,SACvO7E,KAAKyJ,UApoEkFl+B,MAAE,CAAAm+B,KAooEJqc,GAAuBpc,UAAA,0BAAAC,SAAA,CApoErBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,+iDAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,mBAAFA,CAooEwH,mBApoExHA,CAooEwH,gBApoExHA,CAooEwH,6BApoExHA,MAAE,8BAAAoC,GAAA,OAooE0YtC,EAAA2lB,YAAArjB,EAAmB,GApoE/ZpC,MAAE,WAAFA,MAAE,WAAFA,gBAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAAsa,GAAA,WAAFta,kBAAE,sBAAFA,MAAE,iCAooEwlCF,EAAAo8C,eAAe,GApoEzmCl8C,MAAE,YAAFA,MAAE,GAAA+c,GAAA,uBAAF/c,MAAE,GAAAie,GAAA,qBAAFje,MAAE,YAAFA,SAooE8+P,EAAAH,IApoE9+PG,MAAE,GAAFA,MAAE,yBAAFA,MAAE,IAAAF,EAAA4lB,qBAAF1lB,CAooE2R,sBApoE3RA,MAAE,IAAAF,EAAA6lB,mBAAF3lB,MAAE,GAAFA,MAAE,mBAAFA,MAAE,GAAAke,KAAFle,MAAE,GAAFA,MAAE,iBAAFA,MAAE,KAAAF,EAAAke,sBAAFhe,MAAE,GAAFA,MAAE,iBAAFA,MAAE,MAAAF,EAAAk8C,yBAooEouP,EAAAvd,aAAA,CAA4vBC,MAAwEC,KAAgGA,KAA+HA,KAAsGX,KAA2OvE,MAAgFA,MAAmGA,KAAqGA,MAAmJA,MAAsMA,MAA8IA,MAAmHA,MAAwJA,MAAsMA,MAA+IA,MAAmKA,MAAuIA,MAAwFA,MAAsHA,MAAgF6V,EAAkM4C,EAAmJvT,KAAuDC,KAA6DnF,MAA+Doe,GAAwBhZ,OAAA,CAA5vH,0rBAA4vHC,gBAAA,IAWroX,MAAMsd,EACF7nB,cACIE,KAAK4nB,iBAAmB,GACxB5nB,KAAK6nB,YAAc,IAAIvY,KACvBtP,KAAK8nB,SAAW,IAAIxY,KACpBtP,KAAK+nB,WAAa/nB,KAAK6nB,YAAYhM,eACnC7b,KAAKgoB,QAAUhoB,KAAK8nB,SAASjM,cACjC,CACA9H,cACI/T,KAAK6nB,YAAYjL,WACjB5c,KAAK8nB,SAASlL,UAClB,CACAqL,kBAAkBC,GACdloB,KAAKxU,eAAiB08B,CAC1B,CACAC,gBACInoB,KAAK4nB,iBAAmB,EAC5B,CACA38B,iBAAiBrL,GACb,OAAqC,IAAjCogB,KAAK4nB,iBAAiBz5C,SACtB6xB,KAAK4nB,iBAAmB5nB,KAAKooB,6BAE1BpoB,KAAK4nB,iBAAiB7mB,OAAOx0B,GAAQA,EAAKE,KAAOmT,EAAWnT,KAC9DF,EAAK87C,eAAeC,IAAI1oC,EAAWnT,KACpCF,EAAKE,KAAOmT,EAAWiwB,QAAQpjC,GACvC,CACAsyC,OAAO5R,GACH,MAAM5gC,EAAO4gC,EAAM5gC,KAAK6zB,KAElBmoB,EADYpb,EAAMkK,UAAUjX,KACJ3zB,GAC9B,GAAmB,MAAf87C,EACA,MAAM,IAAIxmB,MAAO,qDAErB/B,KAAK6nB,YAAYjX,KAAK,CAClB6L,aAAclwC,EAAKE,GACnBuY,SAAUujC,EACVj6C,MAAO6+B,EAAMkS,cAErB,CACAmJ,OAAOrb,GACHnN,KAAK6nB,YAAYjX,KAAKzD,EAC1B,CACAsb,SAASh8C,GACLuzB,KAAK8nB,SAASlX,KAAKnkC,EACvB,CACA27C,4BACI,MAAMM,EAAQA,CAACC,EAAMC,EAAYP,EAAgBrG,KAC7C,MAAMt3B,EAAOk+B,EAAW9R,OAAO6R,EAAKr5C,MACpC0yC,SAAO3e,KAAK,CAAE3Y,KAAMA,EAAKgsB,MAAM,GAAGnmB,KAAK,QAAU,OAAQ9jB,GAAIk8C,EAAKl8C,GAAI47C,mBACtEM,EAAK5jC,SAASs5B,QAAQwK,GAASH,EAAMG,EAAOn+B,EAAM,IAAIo+B,IAAI,IAAIT,EAAgBM,EAAKl8C,KAAMu1C,IAClFA,GAEX,OAAO0G,EAAM1oB,KAAKxU,eAAgB,GAAI,IAAIs9B,IAAO,GACrD,CAACjkB,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF4iB,EAAqB,EAAoD9iB,SAC1K7E,KAAKiF,WAtsEkF15B,MAAE,CAAA25B,MAssEYyiB,EAAqBxiB,QAArBwiB,EAAqB7iB,YAMvI,MAAMikB,EACFjpB,YAAY+P,EAAQ9P,EAAaipB,EAAuBxjB,EAAQD,EAAOwU,GACnE/Z,KAAK6P,OAASA,EACd7P,KAAKD,YAAcA,EACnBC,KAAKgpB,sBAAwBA,EAC7BhpB,KAAKwF,OAASA,EACdxF,KAAKuF,MAAQA,EACbvF,KAAK+Z,kBAAoBA,EACzB/Z,KAAK3iB,MAAQ,EACb2iB,KAAKlW,WAAY,EACjBkW,KAAKvU,cAAgB,GACjBokB,IACA7P,KAAK3iB,MAAQwyB,EAAOxyB,MAAQ,EAEpC,CACA+oB,WACIpG,KAAKipB,WAAajpB,KAAKxU,eAAelc,MAAQ,SAC9C,MAAM45C,EAAelpB,KAAKD,YAAYgY,OACjCC,aACA9F,UAAU9R,GAAQA,EAAK4X,WAAWmR,aAClC7oB,QAAKC,MAAY,IACtBP,KAAKvV,qBAAuBy+B,EAAa5oB,QAAKe,KAAI+nB,GAASA,EAAM3kC,SAASuhB,MAAWC,gBAAkBmjB,EAAM3kC,SAASuhB,MAAWua,oBACjIvgB,KAAKtU,qBAAuBw9B,EAAa5oB,QAAKe,KAAI+nB,GAASA,EAAM3kC,SAASuhB,MAAWye,gBAAkB2E,EAAM3kC,SAASuhB,MAAWwe,oBACjIxkB,KAAKqa,aAAera,KAAKhlB,kBAAkBquC,kBAAkB/hB,UAAU,IAAMtH,KAAK+Z,kBAAkBvS,eACxG,CACA+U,YAAYC,GACR,MAAM8M,EAAkB9M,EAAQ1yB,UAC5Bw/B,IACsC,IAAlCA,EAAgBC,gBAA2D,IAAjCD,EAAgB5M,cAC1D1c,KAAKxU,eAAezG,SAASs5B,QAAQhc,GAAMA,EAAEtY,UAAW,EAGpE,CACAgqB,cACI/T,KAAKqa,cAAcC,aACvB,CACAzpB,UAAUviB,EAAO/B,GACb,OAAOA,EAAKE,EAChB,CACA8X,eAAe3E,GACXA,EAAWmK,UAAYnK,EAAWmK,SAClC,IAAIvF,EAAcwb,KAAKuF,MAAMe,SAASgV,cAAcnvC,IAAI,aAAa6hC,MAAM,MAAQ,GAC/EpuB,EAAWmK,SACXvF,EAAY6e,KAAKzjB,EAAWnT,IAG5B+X,EAAcA,EAAYuc,OAAOt0B,GAAMA,IAAOmT,EAAWnT,IAE7DuzB,KAAKwF,OAAOuX,SAAS,CAAC,MAAO,CACzBE,YAAa,CACTlzB,SAAUvF,EAAYuc,OAAOt0B,KAAQA,GAAI8jB,KAAK,MAElD4sB,oBAAqB,QACrBH,WAAYhd,KAAKuF,OAEzB,CACAta,iBAAiBrL,GACbogB,KAAKvU,cAAgBuU,KAAKgpB,sBAAsB/9B,iBAAiBrL,EACrE,CACA4K,KAAK5K,EAAYoF,GACbgb,KAAKgpB,sBAAsBR,OAAO,CAC9Bl6C,MAAO,EACP0W,WACAy3B,aAAc78B,EAAWnT,IAEjC,CACA2e,OAAOxL,EAAYy/B,GACVz/B,EAAWiwB,QAGhB7P,KAAKgpB,sBAAsBR,OAAO,CAC9Bl6C,MAAO+wC,EAAe,EACtBr6B,SAAUpF,EAAWiwB,OAAOpjC,GAC5BgwC,aAAc78B,EAAWnT,IAEjC,CACA4e,SAASzL,EAAYy/B,GACZz/B,EAAWiwB,QAGhB7P,KAAKgpB,sBAAsBR,OAAO,CAC9Bl6C,MAAO+wC,EAAe,EACtBr6B,SAAUpF,EAAWiwB,OAAOpjC,GAC5BgwC,aAAc78B,EAAWnT,IAEjC,CACA+8C,KAAKrc,IACDgK,QAAgBnX,KAAKxU,eAAezG,SAAUooB,EAAMoS,cAAepS,EAAMkS,cACzErf,KAAKgpB,sBAAsBjK,OAAO5R,EACtC,CACA7hB,OAAO7e,GACHuzB,KAAKgpB,sBAAsBP,SAASh8C,EACxC,CAACo4B,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFgkB,GAzyEVx9C,MAyyEuDw9C,EAA2B,IAzyElFx9C,MAyyE+Hy5B,OAzyE/Hz5B,MAyyE0Jo8C,GAzyE1Jp8C,MAyyE4Lg+B,MAzyE5Lh+B,MAyyEoNg+B,MAzyEpNh+B,MAyyEoPA,OAAoB,EAA4Cs5B,SAC3Y7E,KAAKyJ,UA1yEkFl+B,MAAE,CAAAm+B,KA0yEJqf,EAA2Bpf,UAAA,+BAAA2E,OAAA,CAAA9iB,eAAA,iBAAAZ,mBAAA,qBAAAd,UAAA,YAAA9O,iBAAA,oBAAA4uB,SAAA,CA1yEzBr+B,OAAEs+B,MAAA,EAAAC,KAAA,EAAAC,OAAA,8sDAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,aAAFA,MAAE,8BAAAoC,GAAA,OA0yEkdtC,EAAAm+C,KAAA77C,EAAY,GA1yEhepC,MAAE,WAAFA,MAAE,EAAAwf,GAAA,eAAFxf,SA0yEohN,EAAAH,IA1yEphNG,MAAE,kBAAAF,EAAAmgB,eAAFjgB,CA0yEoX,uBA1yEpXA,MAAE,IAAAF,EAAAof,uBAAFlf,MAAE,GAAFA,MAAE,UAAAF,EAAAmgB,eAAAzG,SAAFxZ,CA0yEuoB,eAAAF,EAAAwlB,WAAA,EAAAmZ,aAAA,CAA+rPC,MAA+GA,MAAwEA,MAAoFC,KAAgGA,KAA+HA,KAAsGX,KAA2OiO,KAA+eA,KAAocA,KAAiHxS,MAAmJA,MAAgGA,MAAuGA,MAAgIA,MAA4FA,MAAsFA,MAA8I+jB,EAA8K7e,KAAuDC,MAAgBC,OAAA,s2EAAAC,gBAAA,IAuBxxW,SAASof,GAAYC,EAAOC,EAAcnlC,EAAc,IACpD,MAAMolC,EAAgB,GAChBC,EAAY,CAAC,EACbC,EAqCV,SAASC,GAAU7B,GACf,MAAM8B,EAAU,IAAIC,IACpB,SAASvB,EAAMC,GACXqB,EAAQvH,IAAIkG,EAAKl8C,GAAIk8C,GACrBA,EAAK5jC,SAASs5B,QAAQqK,EAC1B,CACA,OAAIR,GACAQ,EAAMR,GAEH8B,CACX,CA/C4BD,CAAUJ,GAElC,UAAWhB,KAAQe,EACfG,EAAUlB,EAAKl8C,IAAM,IAAKk8C,EAAM5jC,SAAU,IAE9C,UAAWtY,KAAMi9C,EAAMroB,IAAI6b,GAAKA,EAAEzwC,IAC9B,GAAIo9C,EAAUK,eAAez9C,GAAK,CAC9B,MAAM09C,EAAaN,EAAUp9C,GAC7B09C,EAAWpgC,SAAW+/B,EAAgB39C,IAAIM,IAAKsd,UAAYvF,EAAYC,SAAShY,GAChF,MAAMojC,EAASsa,EAAWta,OAC1B,IAAKA,EACD,SAGkBga,EAAUha,EAAOpjC,IAE/Bo9C,EAAUha,EAAOpjC,IACjBo9C,EAAUha,EAAOpjC,IAAIsY,SAASse,KAAK8mB,GAGnCN,EAAUha,EAAOpjC,IAAM,CAAEsY,SAAU,CAAColC,IAIxCP,EAAcvmB,KAAK8mB,EAE3B,CAIJ,MAAO,CAAE19C,GADMm9C,EAAcz7C,OAASy7C,EAAc,GAAG/Z,OAAOpjC,QAAK4tB,EAC9CtV,SAAU6kC,EACnC,CAkBA,MAAMQ,GACFtqB,YAAYkpB,GACRhpB,KAAKgpB,sBAAwBA,EAC7BhpB,KAAKlW,WAAY,EACjBkW,KAAKxb,YAAc,GACnBwb,KAAKqqB,UAAY,IAAIne,MACrBlM,KAAKsqB,iBAAmB,IAAIpe,KAChC,CACAqQ,YAAYC,GACJ,gBAAiBA,GAAWxc,KAAKgkB,cACjChkB,KAAKxU,eAAiBi+B,GAAYzpB,KAAKgkB,YAAahkB,KAAKxU,eAAgBwU,KAAKxb,aAC9Ewb,KAAKgpB,sBAAsBf,kBAAkBjoB,KAAKxU,gBAClDwU,KAAKgpB,sBAAsBb,gBAEnC,CACA/hB,WACIpG,KAAKgpB,sBAAsBjB,WAAWzgB,UAAU6F,GAASnN,KAAKqqB,UAAUtsC,KAAKovB,IAC7EnN,KAAKgpB,sBAAsBhB,QAAQ1gB,UAAU76B,GAAMuzB,KAAKsqB,iBAAiBvsC,KAAKtR,GAClF,CAACo4B,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFqlB,IAx4EV7+C,MAw4EmDo8C,GAAqB,EAA4C9iB,SAC3M7E,KAAKyJ,UAz4EkFl+B,MAAE,CAAAm+B,KAy4EJ0gB,GAAuBzgB,UAAA,0BAAA2E,OAAA,CAAA0V,YAAA,cAAAp5B,mBAAA,qBAAAd,UAAA,YAAAtF,YAAA,cAAAxJ,iBAAA,oBAAAuzB,QAAA,CAAA8b,UAAA,YAAAC,iBAAA,oBAAA1gB,SAAA,CAz4ErBr+B,MAy4E0T,CAACo8C,IAz4E3Tp8C,OAAEs+B,MAAA,EAAAC,KAAA,EAAAC,OAAA,yMAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,GAAFG,MAAE,EAAAogB,GAAA,kCAy4E8pB,EAAAvgB,GAz4EhqBG,MAAE,OAAAF,EAAAmgB,eAy4Esb,EAAAwe,aAAA,CAAuSE,KAAsGsN,KAA0JuR,GAA2B1e,gBAAA,IAqB9lC,MAAMkgB,GACFzqB,cACIE,KAAKrP,SAAW,EACpB,CACA1hB,UACI+wB,KAAKlb,aAAY,EACrB,CACA/V,SACIixB,KAAKlb,aACT,CAAC+f,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFwlB,GAAqC,EAAmD1lB,SACzL7E,KAAKyJ,UAz6EkFl+B,MAAE,CAAAm+B,KAy6EJ6gB,GAAqC5gB,UAAA,0CAAAE,MAAA,EAAAC,KAAA,EAAAC,OAAA,4JAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAz6EnCG,MAAE,EAAAqgB,GAAA,qBAAFrgB,MAAE,GAAFA,MAAE,eAAFA,MAAE,QAAFA,MAAE,EAAAsgB,GAAA,YAAFtgB,cAAE,EAAAwgB,GAAA,sBAy6E2sB,EAAA3gB,IAz6E7sBG,MAAE,GAAFA,MAAE,KAAFA,MAAE,8DAAFA,MAAE,GAAFA,MAAE,UAAAF,EAAAslB,UAy6EoW,EAAAqZ,aAAA,CAAsaE,KAA+HlF,MAAwFA,MAA+EmF,MAAgBE,gBAAA,IAOtqC,MAAMmgB,GAAqBjX;;;;;;MAMrBkX;EAEN,MAAMC,WAA6B/W,MAC/B7T,YAAY8F,EAAgB7F,EAAa4F,EAAaE,EAAqB+I,GACvE9I,QACA9F,KAAK4F,eAAiBA,EACtB5F,KAAKD,YAAcA,EACnBC,KAAK2F,YAAcA,EACnB3F,KAAK6F,oBAAsBA,EAC3B7F,KAAK4O,aAAeA,EACpB5O,KAAKne,aAAeme,KAAKmG,qBAAqB,SAC9CnG,KAAKpT,kBAAoBoT,KAAKmG,qBAAqB,cACnDnG,KAAKr0B,WAAaq0B,KAAK2F,YAAYa,MAAM,CACrCmkB,MAAO3qB,KAAK2F,YAAYa,MAAM,CAC1Bh4B,KAAM,CAAC,GAAI+7B,KAAWC,UACtBl7B,KAAM,GACNgxC,SAAS,EACTz+B,aAAcme,KAAK2F,YAAYa,SAAMsN,OAAwB9T,KAAKne,iBAEtE/P,OAAQkuB,KAAK2F,YAAYgD,MAAM,MAEnC3I,KAAKluB,OAAS,GACdkuB,KAAK5zB,iBAAmB,CAAC45B,MAAWC,cAAeD,MAAW4kB,YAClE,CACAxkB,WACIpG,KAAK2G,MACT,CACAoN,cACI/T,KAAKgU,SACT,CACAvJ,WAAWogB,EAAanJ,GACpB,IAAKmJ,EAAa,CACd,MAAMlgB,EAAc3K,KAAKr0B,WAAWQ,IAAI,CAAC,QAAS,SAC9Cw+B,GAAeA,EAAY/+B,UAC3B++B,EAAYrB,YAAShH,KAAgBof,EAAW,KAExD,CACJ,CACA30B,gBAAgB89B,EAAanJ,EAAWpzC,GACpC,IAAKu8C,EAAa,CACd,MAAMlgB,EAAc3K,KAAKr0B,WAAWQ,IAAI,CAAC,SAAUmC,EAAO,SACtDq8B,GAAeA,EAAY/+B,UAC3B++B,EAAYrB,YAAShH,KAAgBof,EAAW,KAExD,CACJ,CACAoJ,sBAAsBx8C,EAAOgB,GACzB,QAAS0wB,KAAKr0B,WAAWQ,IAAI,CAAC,SAAUmC,EAAO,eAAgBgB,GACnE,CACAme,qBACI,OAAOuS,KAAKr0B,WAAWQ,IAAI,SAC/B,CACAmhB,gBACI,MAAMy9B,EAAkB/qB,KAAKr0B,WAAWQ,IAAI,UAC5C,GAAI4+C,EAAiB,CACjB,MAAMC,EAAahrB,KAAK2F,YAAYa,MAAM,CACtC/5B,GAAI,GACJ6C,KAAM,CAAC,GAAIi7B,KAAWC,UACtBh8B,KAAM,GACNqT,aAAcme,KAAK2F,YAAYa,MAAM,CAAC,KAEpCykB,EAAW,CAAE37C,KAAM,GAAId,KAAM,IACnC,GAAIwxB,KAAKpT,kBAAkBze,OAAQ,CAC/B,MAAM86B,EAAyB,IAAIxC,KAAiB,CAAC,GACrDwkB,EAASppC,aAAe,CAAC,EACzB,UAAWqpC,KAAYlrB,KAAKpT,kBAAmB,CAC3C,MAAM6gB,EAAMyd,EAAS57C,KACrB25B,EAAuBL,WAAW6E,EAAK,IAAImK,KAC/C,CACAoT,EAAWpiB,WAAW,eAAgBK,EAC1C,CACA8hB,EAAgBI,OAAOJ,EAAgB58C,OAAQ68C,GAC/ChrB,KAAKluB,OAAOuxB,KAAK4nB,EACrB,CACJ,CACA3qC,SACI,MAAM8qC,EAAYprB,KAAKr0B,WAAWQ,IAAI,SACtC,IAAKi/C,IAAcA,EAAUpkB,MACzB,OAEJ,MAAMqkB,EAAWrrB,KAAKsrB,gBAAgB,CAClC7+C,GAAI,GACJG,UAAW,GACXG,UAAW,GACX+a,WAAW,EACX4Y,aAAcV,KAAKU,aACnBpxB,KAAM,GACNd,KAAM,GACN+zB,aAAc,GACdzwB,OAAQ,IACTs5C,EAAWprB,KAAKU,cACnBV,KAAKD,YAAY4qB,MAAMY,YAAYF,GAAU/jB,UAAUlH,IACnDJ,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CAAE1a,OAAQ,UACnFgT,KAAKr0B,WAAW47B,iBAChBvH,KAAK4F,eAAe4B,eACpBxH,KAAKwF,OAAOuX,SAAS,CAAC,MAAO3c,EAAKmrB,YAAY9+C,IAAK,CAAEuwC,WAAYhd,KAAKuF,OAAO,EAC9EoC,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,SACX,EAET,CACAvhB,OACI,MAAM+/C,EAAcxrB,KAAKr0B,WAAWQ,IAAI,WACxC06B,OAAc7G,KAAK9D,QAAS8D,KAAK1H,eAC5BgI,QAAKwG,KAAK,IAAC,EAAG1F,KAAS,EAAEupB,EAAOjqB,MACjC,MAAM0qB,EAAYprB,KAAKr0B,WAAWQ,IAAI,SAChC82B,EAAmB,GACzB,GAAImoB,GAAaA,EAAUpkB,MAAO,CAC9B,MAAMqkB,EAAWrrB,KAAKsrB,gBAAgBX,EAAOS,EAAW1qB,GACpD2qB,GACApoB,EAAiBI,KAAKrD,KAAKD,YAAY4qB,MAAMc,YAAYJ,GAEjE,CACA,GAAIG,GAAeA,EAAYxkB,MAAO,CAClC,MAAM0kB,EAAgB1rB,KAAK2rB,sBAAsBhB,EAAOa,EAAa9qB,GACjEgrB,EAAcv9C,QACd80B,EAAiBI,KAAKrD,KAAKD,YAAY4qB,MAAMiB,kBAAkBF,GAAeprB,QAAKp1B,KAAU,IAAM80B,KAAKD,YAAYoa,MAAM0R,MAAwB,CAC9Ip/C,GAAIuzB,KAAKvzB,KACVi4B,WAEP,MAAMonB,EAAgB9rB,KAAK+rB,sBAAsBpB,EAAOa,EAAa9qB,GACjEorB,EAAc39C,QACd80B,EAAiBI,KAAKrD,KAAKD,YAAY4qB,MAAMqB,kBAAkBF,GAEvE,CACA,SAAO3qB,MAAS8B,EAAgB,IAE/BqE,UAAU,KACXtH,KAAKr0B,WAAW47B,iBAChBvH,KAAK4F,eAAe4B,eACpBxH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CAAE1a,OAAQ,SAAS,EAC7F2a,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,SACX,EAET,CACAE,iBAAiBqtB,EAAcjsC,GAC3B,IAAKisC,EAAc,CAEf,MAAMwQ,EAAkB/qB,KAAKr0B,WAAWQ,IAAI,UAK5C,OAJI4+C,GACAA,EAAgB7I,SAAS5zC,QAE7B0xB,KAAKluB,OAAOwtC,OAAOhxC,EAAO,EAE9B,CACA0xB,KAAKmW,mBAAmBoE,GACnBja,QAAKp1B,KAAU4mC,GACZA,EAASxN,SAAWC,MAAeC,QAC5B,EAAC,GAGDxE,KAAKmW,mBAAmBoE,EAAczI,EAASlN,SAAW,IAAItE,QAAKe,KAAI+U,GAAKA,EAAE9R,SAAWC,MAAeC,YAEtH,EAAGt5B,KAAU+gD,GAAWA,EACnBjsB,KAAKD,YAAYoa,MAAM0R,MAAwB,CAC7Cp/C,GAAIuzB,KAAKvzB,KACVi4B,QACD,KACD4C,UAAU,KACX,MAAMyjB,EAAkB/qB,KAAKr0B,WAAWQ,IAAI,UACxC4+C,GACAA,EAAgB7I,SAAS5zC,GAE7B0xB,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,cACX,EACF2a,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,cACX,EAET,CACAmpB,mBAAmBoE,EAAc3V,GAC7B,OAAO5E,KAAK4O,aACPkC,OAAO,CACRC,SAAOrJ,KAAO,sCACdsJ,KAAMpM,EACNsM,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAUo5B,GAAUA,EAAStE,KAAKD,YAAY4qB,MAAMuB,kBAAkB,CAAC3R,KAAiB3V,GAAW+L,MAAK,EAAGtP,KAAIiD,GAAUA,EAAO4nB,kBAAkB,IAChK,CAIA9jB,cAAcuiB,EAAOjqB,GACjB,MAAMsI,KAAqBzF,OAAgBonB,EAAOjqB,GAQlD,GAPAV,KAAKr0B,WAAWi3C,WAAW,CACvB+H,MAAO,CACHn8C,KAAMm8C,EAAMn8C,KACZ8xC,SAAUqK,EAAM7iC,UAChBxY,KAAM05B,GAAoB15B,MAAQ,MAGtC0wB,KAAKne,aAAa1T,OAAQ,CACA6xB,KAAKr0B,WAAWQ,IAAI,CAAC,QAAS,iBACxD6zB,KAAKoJ,yBAAyBpJ,KAAKne,aAAcme,KAAKr0B,WAAWQ,IAAI,CAAC,QAAS,iBAAkBw+C,EAAO3hB,EAC5G,CACA,MAAMmjB,EAAyBnsB,KAAKr0B,WAAWQ,IAAI,UACnD6zB,KAAKluB,OAAS,IAAI64C,EAAM74C,QACxB64C,EAAM74C,OAAOusC,QAAQ7xC,IACjB,MAAM4/C,KAAmB7oB,OAAgB/2B,EAAOk0B,GAC1C8F,EAAQ,CACV/5B,GAAID,EAAMC,GACV+B,KAAMhC,EAAMgC,KACZc,KAAM88C,EAAmBA,EAAiB98C,KAAO,IAErD,IAAI+8C,EAAeF,EAAuB7xB,SAASuH,KAAKwH,GAAWA,EAAQ78B,MAAMC,KAAOD,EAAMC,IAU9F,GATI4/C,GACAA,EAAalgD,IAAI,OAAOm9B,SAAS9C,EAAM/5B,IACvC4/C,EAAalgD,IAAI,SAASm9B,SAAS9C,EAAMh4B,MACzC69C,EAAalgD,IAAI,SAASm9B,SAAS9C,EAAMl3B,QAGzC+8C,EAAersB,KAAK2F,YAAYa,MAAMA,GACtC2lB,EAAuB9oB,KAAKgpB,IAE5BrsB,KAAKpT,kBAAkBze,OAAQ,CAC/B,IAAI86B,EAAyBojB,EAAalgD,IAAI,CAAC,iBAK/C,GAJK88B,IACDA,EAAyB,IAAIxC,KAAiB,CAAC,GAC/C4lB,EAAazjB,WAAW,eAAgBK,IAExCA,EACA,UAAWiiB,KAAYlrB,KAAKpT,kBAAmB,CAC3C,MAAM6gB,EAAMyd,EAAS57C,KACfg9C,EAA+B,iBAAlBpB,EAASxhB,KACtB0iB,GAAkBvqC,eAAe4rB,GACjCjhC,EAAMqV,aAAa4rB,GACnBpE,EAAUJ,EAAuB98B,IAAIshC,GACvCpE,EACAA,EAAQC,SAASgjB,GAGjBrjB,EAAuBL,WAAW6E,EAAK,IAAImK,KAAmB0U,GAEtE,CAER,GAER,CAKAhB,gBAAgBX,EAAO4B,EAAgB7rB,GACnC,MAAMD,KAAQqH,OAA0B,CACpCC,aAAc4iB,EACd3iB,cAAeukB,EAAe//C,MAC9By7B,kBAAmBjI,KAAKne,aACxB6e,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAMq7C,EAAMr7C,MAAQ,MAG5BmxB,SAAM3Y,WAAaykC,EAAe//C,MAAM8zC,QACjC7f,CACX,CAKAkrB,sBAAsBhB,EAAOI,EAAiBrqB,GAC1C,OAAOqqB,EAAgBzwB,SAClByG,OAAOsB,IAAMA,EAAE71B,OAAOC,IACtB40B,IAAIgB,GAAKA,EAAE71B,OACX60B,IAAI70B,MAASs7B,OAA0B,CACxCC,aAAc,IAAKv7B,EAAO+1B,aAAc,IACxCyF,cAAex7B,GAAS,CAAC,EACzBy7B,kBAAmBjI,KAAKpT,kBACxB8T,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAM,OAGT+xB,IAAIZ,KACL+rB,QAAS7B,EAAMl+C,GACf+B,KAAMiyB,EAAMjyB,MAAQ,MACjBiyB,IAEX,CAKAsrB,sBAAsBpB,EAAOI,EAAiBrqB,GAC1C,MAAM+rB,EAAc9B,EAAM74C,OAAOivB,OAAO,CAACW,EAAGtkB,KACxC,MAAMsvC,EAAU3B,EAAgB5+C,IAAIiR,EAAEuvC,YACtC,OAAOD,GAAWA,EAAQ1lB,OAAS0lB,EAAQlgD,MAAMC,KAE/CmgD,EAAmB7B,EAAgBzwB,SACpCyG,OAAOsB,GAAKA,EAAE2E,OAAS3E,EAAE71B,MAAMC,IAC/B40B,IAAIgB,GAAKA,EAAE71B,OAChB,GAAIigD,EAAYt+C,SAAWy+C,EAAiBz+C,OACxC,MAAM,IAAI4zB,SAAM2F,KAAQ,+CAE5B,OAAO+kB,EACFprB,IAAI,CAAC70B,EAAO4Q,OAAM0qB,OAA0B,CAC7CC,aAAcv7B,EACdw7B,cAAe4kB,EAAiBxvC,GAChC6qB,kBAAmBjI,KAAKpT,kBACxB8T,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAM,OAGTyxB,OAAO2B,sBAChB,CAACmC,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF2lB,IAlvFVn/C,MAkvFgDA,OAlvFhDA,MAkvFiFy5B,OAlvFjFz5B,MAkvF4Gi+B,MAlvF5Gj+B,MAkvFuIy5B,OAlvFvIz5B,MAkvF0Ky5B,OAAe,EAA4CH,SAC5T7E,KAAKyJ,UAnvFkFl+B,MAAE,CAAAm+B,KAmvFJghB,GAAoB/gB,UAAA,uBAAAC,SAAA,CAnvFlBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,yzDAAA9sB,SAAA,SAAA7R,EAAAC,GAmvF2zS,GAnvF3zS,EAAAD,IAAFG,MAAE,mBAAFA,CAmvFkH,mBAnvFlHA,CAmvFkH,gBAnvFlHA,CAmvFkH,6BAnvFlHA,MAAE,8BAAAoC,GAAA,OAmvFkbtC,EAAA2lB,YAAArjB,EAAmB,GAnvFvcpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,gBAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAAygB,GAAA,gBAAFzgB,MAAE,YAAFA,MAAE,GAAA2gB,GAAA,yBAAF3gB,yBAAE,YAAFA,CAmvF8gD,4BAnvF9gDA,CAmvF8gD,+BAnvF9gDA,CAmvF8gD,cAnvF9gDA,CAmvF8gD,uBAnvF9gDA,MAAE,gBAAFA,MAAE,yBAAFA,MAAE,cAAFA,MAAE,oBAAFA,MAAE,cAAFA,MAAE,GAAA4gB,GAAA,sBAAF5gB,MAAE,GAAA6gB,GAAA,0BAAF7gB,2BAAE,eAAFA,MAAE,GAAA8gB,GAAA,+BAAF9gB,MAAE,YAAFA,gBAAE,oBAAFA,CAmvFw1F,gBAnvFx1FA,CAmvFw1F,YAnvFx1FA,CAmvFw1F,wBAnvFx1FA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,iBAAAoC,GAAA,OAmvF8zGtC,EAAAo/B,WAAA,MAAAp/B,EAAA2hB,OAAA,KAAA3hB,EAAA2hB,OAAAxe,KAAAb,EAAAsf,OAAAzgB,MAA6C,GAnvF72GjB,MAAE,oBAAFA,gBAAE,wBAAFA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,oBAAFA,kBAAE,GAAAghB,GAAA,mBAAFhhB,MAAE,0CAAFA,MAAE,GAAAiiB,GAAA,mBAAFjiB,MAAE,YAAFA,aAmvF6zS,EAAAH,EAAA,OAAAk0B,EAnvF7zS/zB,MAAE,IAAAkkB,EAAFlkB,MAAE,IAAFA,MAAE,GAAFA,MAAE,WAAFA,MAAE,KAAAF,EAAAgtB,QAAF9sB,CAmvF0P,yBAnvF1PA,MAAE,KAAAF,EAAA4lB,qBAAF1lB,CAmvF0P,sBAnvF1PA,MAAE,KAAAF,EAAAitB,gBAAF/sB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAAgtB,QAAF9sB,CAmvFmvB,WAAA+zB,GAnvFnvB/zB,MAAE,GAAFA,MAAE,YAAAF,EAAAM,YAAFJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,eAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,aAAAF,EAAAM,WAAAa,MAAAm+C,MAAA,KAAAt/C,EAAAM,WAAAa,MAAAm+C,MAAArK,QAAF/0C,CAmvFmwE,WAAAkkB,GAnvFnwElkB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAA6wB,UAAF3wB,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAe,mBAAFb,MAAE,GAAFA,MAAE,OAAAF,EAAAwW,aAAA1T,QAAF5C,MAAE,GAAFA,MAAE,UAAAF,EAAA6wB,QAAF3wB,CAmvFw+I,aAAAF,EAAAM,YAnvFx+IJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,MAAAF,EAAAgtB,QAmvFmpJ,GAAA2R,aAAA,CAA+zJC,MAAwEA,MAA8EA,MAAoFA,MAAyGC,KAA+HA,KAAsGV,KAAyGA,KAAgRA,KAAiLA,KAAwGA,KAA4JA,KAAiJA,IAAgKA,KAAuGA,KAAuGxE,MAAgFA,MAAmGA,KAAqGA,MAAiJA,MAAgGA,MAAsMA,MAAuGA,MAAgIA,MAA4FA,MAAsFA,MAA8IA,MAAmHA,MAAuGA,MAA+GA,MAAwMA,MAAmKA,MAAgFA,MAA+GA,MAA+FA,MAAiGA,MAA+FkF,KAAuDC,KAA6DnF,OAAoBoF,OAAA,kEAAAC,gBAAA,IAO76b,MAAMwiB,MAAyBzI,OAAuB,CAClDC,SAAU,aACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAW8mB,cACvEvI,EAAgB9/B,SAASuhB,MAAWye,eACxCC,YAAan4C,GAAQA,EAAK+C,KAC1By9C,gBAAiBA,CAACjb,EAAUvlC,MAAWulC,EAASlN,QAChD+f,WAAYA,CAAC5kB,EAAauY,EAAK0U,IAAajtB,EAAY4qB,MAAMsC,aAAa3U,EAAK0U,GAAU1sB,QAAKe,KAAIiV,GAAOA,EAAI2W,iBAE5GC,MAAkC3H,OAAgC,CACpElB,SAAU,aACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAW4kB,aACxClG,YAAan4C,GAAQA,EAAK+C,KAC1Bk2C,oBAAqBA,CAACzlB,EAAaotB,EAAUrU,IAAc/Y,EAAY4qB,MAClEyC,sBAAsB,CACvBD,WACArU,cAECxY,QAAKe,KAAIiV,GAAOA,EAAI8W,0BAEvBC,MAAoCzH,OAAkC,CACxEvB,SAAU,aACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWye,gBACvEF,EAAgB9/B,SAASuhB,MAAW8mB,aACxCpI,YAAan4C,GAAQA,EAAK+C,KAC1Bu2C,sBAAuBA,CAAC9lB,EAAaotB,EAAUrU,EAAWkU,IAAajtB,EAAY4qB,MAC9E2C,wBAAwB,CACzBxU,UAAWA,EACXqU,WACA5b,MAAOyb,IAEN1sB,QAAKe,KAAIiV,GAAOA,EAAIgX,0BACzBC,cAAejpB,GAAiC,oBAAtBA,EAAOkN,WAAmClN,EAAOM,aAAUvK,IAEnFmzB,GAAqC,CACvCnJ,SAAU,aACVlT,SAAOzJ,KAAO,+BACd+lB,mBAAoBA,EAAGzI,eAAS,EAAM0I,OAA6B1I,EAAS74C,IAAI2mC,QAChFgS,KAAM,SACN6I,UAAW,aACXrJ,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAW4kB,cACvErG,EAAgB9/B,SAASuhB,MAAWC,eACxC2nB,UAAWA,EAAG5I,eAAS,EAAM6I,OAA2B7I,EAAS74C,IAAI2mC,QACrEiS,QAASA,EAAGC,WAAUjF,YAAWkF,gBAAeC,qBAC5C,MAAMtW,EAAeoW,EAAS74C,IAAIg5C,OAC5BplB,EAAcilB,EAAS74C,IAAI2mC,OAC3BjN,EAAsBmf,EAAS74C,IAAIi5C,OACnCtN,EAAmB/X,EAAYgY,OAChCC,aACA7X,UAAU,EAAG6X,gBAAiBA,EAAWC,iBAC9C,SAAS9B,EAAmBgX,EAAUvoB,GAClC,OAAOgK,EACFkC,OAAO,CACRC,SAAOrJ,KAAO,+BACduJ,gBAAiB,CACbhuB,MAAO88B,EAAU5xC,QAErB0oC,KAAMjS,EAAU,KAAO,KACvBoM,KAAMpM,EACNsM,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CACIgC,KAAM,SACNyH,MAAOvM,KAAU8C,KAAO,wBAAqB,EAAIA,KAAO,iBACxD0J,aAAa,MAIpB9Q,QAAKp1B,KAAUorC,GAAOA,EACrBwB,EAAiBxX,QAAKp1B,KAAU+sC,GAAmBA,EAC/ClY,EAAY4qB,MAAM2C,wBAAwB,CACxCxU,UAAWb,EACXkV,WACA5b,QAAS3M,IAEX+L,MAAK,EAAGtP,KAAIysB,GAAQA,EAAKR,0BAC7B3c,KACV,CACAwF,KAAmBpI,KAAOgS,EAAU1e,IAAImgB,GAAKA,EAAE/0C,MAC1C6zB,QAAKp1B,KAAUo5B,IAChB,IAAIypB,EAAehO,EAAU5xC,OAC7B,MAAM6/C,EAAS,GACTC,EAAW,GACjB,IAAI7wC,EAAI,EACR,UAAW7Q,KAAQ+3B,EACS,oBAApB/3B,EAAKilC,aACLwc,EAAO3qB,KAAK92B,EAAKq4B,SACjBqpB,EAAS5qB,KAAK0c,EAAU3iC,IAAI3Q,IAC5BshD,KAEJ3wC,IAEJ,OAAI,EAAI6wC,EAAS9/C,OACNgoC,EAAmB8X,EAAUD,EAAOz9B,KAAK,OAAO+P,QAAKe,KAAI6sB,IAC5D,MAAMC,EAAkBD,EAAQntB,OAAOqV,GAAsB,oBAAjBA,EAAE5E,YAAkCrjC,OAChF,OAAO4xC,EAAU5xC,OAASggD,MAC5B,EAGK1sB,MAAGssB,EAAY,IAE7B,EAAG7iD,KAAU6iD,GAAgBA,KACxBL,OAA6B3tB,GAAaquB,KAAK,EAAG71C,kBAAY,CAC5DA,cACAw1C,kBAEFpd,MACDrJ,UAAU,EAAGymB,eAAcx1C,kBACxBw1C,IACA9I,EAAcvP,UACdwP,IACArf,EAAoB4B,WAAQC,KAAO,qDAAsD,CACrFzkB,MAAO8qC,EACPx1C,gBACH,EAER,GAIH81C,GAAmB9a;;;;;;;;;MASnBkX;EAEN,MAAM6D,WAA2BtI,MAC7BlmB,YAAYC,GACR+F,QACA9F,KAAKD,YAAcA,EACnBC,KAAKnR,aAAe,EACpBmR,KAAK/Q,aAAe,CAAC,EACrB+Q,KAAKne,aAAeme,KAAKmG,qBAAqB,SAC9CnG,KAAK3jB,QAAU2jB,KAAKimB,yBACfC,cACAC,iBACAvjC,UAAU,CACXtT,KAAM,aACNo6B,KAAM,CAAE0c,KAAM,WACdjV,SAAOzJ,KAAO,qBACd4e,cAAe95C,KACXsb,UAAW,CAAEy+B,IAAK/5C,OAGrBg6C,sBAAsBxmB,KAAKne,cAC3B4kC,eAAezmB,KAAKuF,OACzBvF,KAAK3X,MAAQ2X,KAAK0mB,uBACbC,YAAY,YAAa,QACzBC,QAAQ,CAAEt3C,KAAM,OAChBs3C,QAAQ,CAAEt3C,KAAM,cAChBs3C,QAAQ,CAAEt3C,KAAM,cAChBs3C,QAAQ,CAAEt3C,KAAM,SAChBs3C,QAAQ,CAAEt3C,KAAM,SAChBu3C,oBAAoB7mB,KAAKne,cACzB4kC,eAAezmB,KAAKuF,OACzBO,MAAMghB,UAAU,CACZC,SAAUwH,MACVtH,SAAU7mB,GAAQA,EAAKouB,OACvBtH,aAAcA,CAACpS,EAAMhO,MACjBv3B,QAAS,CACLulC,OACAhO,OACA/F,OAAQ,CACJzxB,KAAM,CACF0lC,SAAUhV,KAAK5W,kBAAkB5c,UAElCwzB,KAAK3jB,QAAQ+qC,qBAEpBrrC,KAAMikB,KAAK3X,MAAMg/B,qBAGzBC,qBAAsB,CAACtnB,KAAK3jB,QAAQ0uB,aAAc/K,KAAK3X,MAAM0iB,eAErE,CACA/b,mBAAmB27B,GACX3qB,KAAK/Q,aAAa07B,EAAMl+C,MAAQk+C,EAAM74C,OAAO3D,OAC7C6xB,KAAK/Q,aAAa07B,EAAMl+C,IAAMuzB,KAAKnR,aAGnCmR,KAAK/Q,aAAa07B,EAAMl+C,IAAMk+C,EAAM74C,OAAO3D,MAEnD,CACA6iB,YAAYxiB,GACRwxB,KAAKD,YAAYgY,OAAO2P,mBAAmBl5C,GAAM84B,WACrD,CAACzC,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFupB,IAx7FV/iD,MAw7F8Cy5B,OAAc,EAA4CH,SAC/L7E,KAAKyJ,UAz7FkFl+B,MAAE,CAAAm+B,KAy7FJ4kB,GAAkB3kB,UAAA,qBAAAC,SAAA,CAz7FhBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,kiCAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,mBAAFA,CAy7F8G,mBAz7F9GA,CAy7F8G,gBAz7F9GA,CAy7F8G,6BAz7F9GA,MAAE,8BAAAoC,GAAA,OAy7FgYtC,EAAA2lB,YAAArjB,EAAmB,GAz7FrZpC,MAAE,WAAFA,MAAE,WAAFA,gBAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAAmiB,GAAA,WAAFniB,kBAAE,wBAAFA,MAAE,sBAAAoC,GAAA,OAy7F6wCtC,EAAAod,cAAA9a,EAAqB,EAz7FpyCpC,CAy7FsyC,8BAAAoC,GAAA,OAA+BtC,EAAAsd,gBAAAhb,EAAuB,GAz7F51CpC,MAAE,YAAFA,MAAE,YAAFA,MAAE,YAAFA,MAAE,YAAFA,MAAE,4BAAFA,CAy7F4hD,uBAz7F5hDA,MAAE,gBAAFA,MAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAoiB,GAAA,mBAAFpiB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAsiB,GAAA,mBAAFtiB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAwiB,GAAA,mBAAFxiB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA0iB,GAAA,mBAAF1iB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA4iB,GAAA,mBAAF5iB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAgjB,GAAA,mBAAFhjB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA2jB,GAAA,mBAAF3jB,cAAE,GAAA4jB,GAAA,qCAAF5jB,SAy7FggK,EAAAH,IAz7FhgKG,MAAE,GAAFA,MAAE,yBAAFA,MAAE,KAAAF,EAAA4lB,qBAAF1lB,CAy7FiR,sBAz7FjRA,MAAE,KAAAF,EAAA6lB,mBAAF3lB,MAAE,GAAFA,MAAE,mBAAFA,MAAE,GAAAgiB,KAAFhiB,MAAE,GAAFA,MAAE,QAAFA,MAAE,MAAAF,EAAAyd,QAAFvd,CAy7FilC,eAz7FjlCA,MAAE,MAAAF,EAAA2d,eAAFzd,CAy7FilC,aAz7FjlCA,MAAE,MAAAF,EAAA4d,aAAF1d,CAy7FilC,cAz7FjlCA,MAAE,MAAAF,EAAA6d,cAAF3d,CAy7FilC,UAAAF,EAAAgR,SAz7FjlC9Q,MAAE,GAAFA,MAAE,gBAAAF,EAAFE,CAy7Fy8C,mBAAAF,EAAA2P,kBAz7Fz8CzP,MAAE,GAAFA,MAAE,oBAAAF,EAAA+d,kBAAF7d,CAy7FwmD,wBAz7FxmDA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CAy7F2wD,qBAz7F3wDA,CAy7F2wD,OAAAF,EAAAgd,MAAAlc,IAAA,OAz7F3wDZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAy7F+gE,qBAz7F/gEA,CAy7F+gE,OAAAF,EAAAgd,MAAAlc,IAAA,cAz7F/gEZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAy7Fs1E,qBAz7Ft1EA,CAy7Fs1E,OAAAF,EAAAgd,MAAAlc,IAAA,cAz7Ft1EZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CAy7F4oF,cAz7F5oFA,CAy7F4oF,OAAAF,EAAAgd,MAAAlc,IAAA,SAz7F5oFZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,yBAAFA,MAAE,GAAFA,MAAE,UAAAF,EAAAwW,cAy7Fk7J,EAAAmoB,aAAA,CAAuOC,MAAwEC,KAA+HA,KAAsGX,KAA2OvE,MAAgFA,MAAmGA,KAAqGA,MAAmJA,MAAyKA,MAAsMA,MAA8IA,MAAmHA,MAAwJA,MAAqPA,MAAsMA,MAA+IA,MAAmKA,MAA2EkF,KAAuDA,KAAuDC,KAA6DnF,OAAiBoF,OAAA,oHAO97P,MAAMqkB,GAAuB,sBAC7B,MAAMC,GACF5uB,YAAYC,EAAa4F,GACrB3F,KAAKD,YAAcA,EACnBC,KAAK2F,YAAcA,EACnB3F,KAAK2uB,eAAiB,IAAIziB,MAC1BlM,KAAK/vB,aAAe,GACpB+vB,KAAKvP,kBAAoB,CAAC,EAC1BuP,KAAKhQ,wBAA0B,IACnC,CACAoW,WACIpG,KAAKD,YAAYG,SAASuP,mBAAmB/K,QAAQ4C,UAAUlH,IAC3DJ,KAAKpsB,aAAewsB,EAAKsP,cAAcz3B,sBAE3C+nB,KAAK4uB,gBAAkB5uB,KAAKD,YACvBoa,MAAM0U,MAA8B,CACrCt/C,QAAS,CACLu3B,KAAM,OAGT+N,yBACA3C,UAAU,EAAG4c,oBAAqBA,EAAer1C,OACjD6mB,QAAKiG,KAAI9sB,IACNA,EAAMtL,SACN6xB,KAAKhQ,wBAA0BvW,EAAM,GAAGhN,OAGhDuzB,KAAKrQ,kBACT,CACAje,YACIsuB,KAAK/vB,aAAaozB,KAAK,CAAE/zB,KAAM,GAAIwC,OAAQ,KAC3C,MAAMxD,EAAQ0xB,KAAK/vB,aAAa9B,OAAS,EACzCm/B,WAAW,KACOtN,KAAK+uB,gBAAgB5iD,IAAImC,IAAQ4+B,eACxCF,OAAM,EAErB,CACAx8B,aAAalB,GACT0wB,KAAK/vB,aAAe+vB,KAAK/vB,aAAa8wB,OAAOC,GAAKA,EAAE1xB,OAASA,GAC7D0wB,KAAKrQ,kBACT,CACAA,mBAEI,MAAMmR,EADmBd,KAAK/vB,aAAagyB,OAAO,CAAC+sB,EAAKxoB,IAAUwoB,EAAMxoB,EAAM10B,OAAO3D,OAAQ,GAEvF6xB,KAAK/vB,aAAaoxB,IAAIL,GAAKA,EAAElvB,OAAOuvB,IAAIK,GAAKA,EAAEpyB,OAC/C,CAAC,CAACm/C,KACRzuB,KAAKrP,YAAWs+B,4BAAwBnuB,GAAQO,IAAIvvB,KAAarF,GAAIqF,EAAOye,KAAK,KAAMze,YACvFkuB,KAAKrP,SAAS0tB,QAAQ,CAAC5a,EAASn1B,KAC5B,IAAK0xB,KAAKvP,kBAAkBgT,EAAQh3B,IAAK,CACrC,MAAMs8B,EAAY/I,KAAK2F,YAAYupB,YAAY1oB,MAAM,CACjDn1B,aAAc,CAACoyB,EAAQ3xB,QACvB4e,SAAS,EACT/c,MAAOqsB,KAAKmvB,gBAAgB1rB,EAAQh3B,GAAI,QAAS,GACjDmD,IAAKowB,KAAKmvB,gBAAgB1rB,EAAQh3B,GAAI,MAAO,IAC7Ck2B,MAAO3C,KAAKmvB,gBAAgB1rB,EAAQh3B,GAAI,QAAS,KAErDs8B,EAAUgC,aAAazD,UAAU,IAAMtH,KAAKovB,gBAC9B,IAAV9gD,IACAy6B,EAAU58B,IAAI,UAAU4+B,aAAazD,UAAU96B,IAC3CwzB,KAAKqvB,qBAAqB,QAAStmB,EAAU58B,IAAI,SAAQ,GAE7D48B,EAAU58B,IAAI,QAAQ4+B,aAAazD,UAAU96B,IACzCwzB,KAAKqvB,qBAAqB,MAAOtmB,EAAU58B,IAAI,OAAM,GAEzD48B,EAAU58B,IAAI,UAAU4+B,aAAazD,UAAU96B,IAC3CwzB,KAAKqvB,qBAAqB,QAAStmB,EAAU58B,IAAI,SAAQ,IAGjE6zB,KAAKvP,kBAAkBgT,EAAQh3B,IAAMs8B,CACzC,GAER,CACAlY,UAAUviB,EAAOm1B,GACb,OAAOA,EAAQ3xB,OAAOye,KAAK,IAC/B,CACAb,YAAYyd,EAAOmiB,GACfniB,EAAMQ,iBACNR,EAAMoiB,kBACND,EAA0BtiB,OAC9B,CACAqiB,qBAAqBlmB,EAAOqmB,GACnBA,GAGLxkB,OAAOl5B,OAAOkuB,KAAKvP,mBAAmB4tB,QAAQtV,IAC1C,MAAM0mB,EAA2B1mB,EAAU58B,IAAIg9B,GAC3CsmB,GAA4BA,EAAyB7jD,UACrD6jD,EAAyBnmB,SAASkmB,EAAYhjD,MAAO,CAAEkjD,WAAW,GAAO,EAGrF,CACAN,eACI,MAAMO,EAAmB3vB,KAAKrP,SACzB0Q,IAAIK,GAAK1B,KAAKvP,kBAAkBiR,EAAEj1B,IAAID,OACtCu0B,OAAOW,GAAKA,EAAEhR,SACnBsP,KAAK2uB,eAAe5wC,KAAK,CACrB+iB,OAAQd,KAAK/vB,aAAaoxB,IAAIW,KAAS1yB,KAAM0yB,EAAG1yB,KAAMwC,OAAQkwB,EAAGlwB,OAAOuvB,IAAIK,GAAKA,EAAEpyB,SACnFqhB,SAAUg/B,EAEVvtB,gBAAiBpC,KAAKhQ,yBAE9B,CACAm/B,gBAAgBtd,EAAW+d,EAAMpjD,GAC7B,OAAOqlC,IAAc4c,GACfzuB,KAAKvP,kBAAkBg+B,IAAsBtiD,IAAIyjD,IAAOpjD,MACxDA,CACV,CAACq4B,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF2pB,IA3iGVnjD,MA2iG4Dy5B,OA3iG5Dz5B,MA2iGuFi+B,MAAc,EAA4C3E,SACxO7E,KAAKyJ,UA5iGkFl+B,MAAE,CAAAm+B,KA4iGJglB,GAAgC/kB,UAAA,oCAAAwE,UAAA,SAAA/iC,EAAAC,GAAgN,GAAhN,EAAAD,GA5iG9BG,KAAE8jB,GAAA,EA4iGkO+e,OAAU,EAAAhjC,EAAA,KAAAijC,EA5iG9O9iC,MAAE8iC,EAAF9iC,WAAEF,EAAA0jD,gBAAA1gB,EAAA,GAAAE,QAAA,CAAAogB,eAAA,kBAAA9kB,MAAA,EAAAC,KAAA,EAAAC,OAAA,ulCAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,EAAA+jB,GAAA,eAAF/jB,MAAE,cAAFA,MAAE,0BA4iGiiDF,EAAAqG,WAAW,GA5iG9iDnG,MAAE,gBAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,EAAAulB,GAAA,sBAAFvlB,MAAE,cAAAH,IAAFG,MAAE,UAAAF,EAAA4E,cAAF1E,MAAE,GAAFA,MAAE,IAAFA,MAAE,gCAAFA,MAAE,GAAFA,MAAE,OAAFA,MAAE,IAAAF,EAAAujD,kBA4iG4sD,EAAA5kB,aAAA,CAAkpGC,MAAwPA,MAA0EA,MAAuEA,MAA+GA,MAAwEA,MAA8EA,MAAoFA,MAAkEC,KAA+HA,KAAsGV,KAAkGA,KAA2GA,KAAgRA,KAAkKA,KAAiLA,KAA8MA,KAAwGA,KAA4JA,KAA6NA,KAA2LA,KAAwNA,KAAiJA,IAAgKxE,MAA6KA,MAAiJA,MAAgG8G,EAAyK5B,KAAuDC,MAAgBC,OAAA,mXAY9vR,MAAMylB,UAAoC7J,MACtClmB,cACIgG,QACA9F,KAAK8vB,oBAAqB,EAC1B9vB,KAAKne,aAAeme,KAAKmG,qBAAqB,kBAC9CnG,KAAK3jB,QAAU2jB,KAAKimB,yBACfC,cACAC,iBACA4J,WAAW,CACZ,CACIzgD,KAAM,OACNo6B,KAAM,CAAE0c,KAAM,QACdjV,SAAOzJ,KAAO,eACd2e,YAAa,QAEjB,CACI/2C,KAAM,UACNo6B,KAAM,CAAE0c,KAAM,WACdjV,SAAOzJ,KAAO,kBACd2e,YAAa,WAEjB,CACI/2C,KAAM,MACNo6B,KAAM,CAAE0c,KAAM,QACdjV,SAAOzJ,KAAO,eACd2e,YAAa,OAEjB,CACI/2C,KAAM,QACNo6B,KAAM,CAAE0c,KAAM,SAAU4J,UAAW,YACnC7e,SAAOzJ,KAAO,gBACd2e,YAAa,SAEjB,CACI/2C,KAAM,eACNo6B,KAAM,CAAE0c,KAAM,SAAU4J,UAAW,YACnC7e,SAAOzJ,KAAO,yBACd2e,YAAa,kBAGhBG,sBAAsBxmB,KAAKne,cAC3B4kC,eAAezmB,KAAKuF,OACzBvF,KAAK3X,MAAQ2X,KAAK0mB,uBACbuJ,SAAS,CACV,CAAE3gD,KAAM,MACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,QACR,CAAEA,KAAM,OACR,CAAEA,KAAM,SACR,CAAEA,KAAM,kBAEPu3C,oBAAoB7mB,KAAKne,cACzB4kC,eAAezmB,KAAKuF,OACzBvF,KAAK8mB,UAAU,CACXC,SAAUmJ,MACVjJ,SAAU7mB,GAAQA,EAAKgD,gBACvB8jB,aAAcA,CAACpS,EAAMhO,MACjBv3B,QAAS,CACLulC,OACAhO,OACA/F,OAAQ,CACJnxB,IAAK,CACDolC,SAAUhV,KAAK5W,kBAAkB5c,UAElCwzB,KAAK3jB,QAAQ+qC,uBACZpnB,KAAKvlB,UAAY,CAAEA,UAAW,CAAE8rC,GAAIvmB,KAAKvlB,YAAgB,CAAC,GAElEsB,KAAMikB,KAAK3X,MAAMg/B,qBAGzBC,qBAAsB,CAACtnB,KAAK3X,MAAM0iB,aAAc/K,KAAK3jB,QAAQ0uB,eAErE,CAAClG,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF8qB,EAA2B,EAAmDhrB,SAC/K7E,KAAKyJ,UAnoGkFl+B,MAAE,CAAAm+B,KAmoGJmmB,EAA2BlmB,UAAA,+BAAA2E,OAAA,CAAA7zB,UAAA,YAAAq1C,mBAAA,sBAAAlmB,SAAA,CAnoGzBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,k8BAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,EAAAwlB,GAAA,wBAAFxlB,MAAE,wBAAFA,MAAE,sBAAAoC,GAAA,OAmoGuyBtC,EAAAod,cAAA9a,EAAqB,EAnoG9zBpC,CAmoGg0B,8BAAAoC,GAAA,OAA+BtC,EAAAsd,gBAAAhb,EAAuB,GAnoGt3BpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,2BAAFA,CAmoG0iC,sBAnoG1iCA,MAAE,eAAFA,MAAE,sBAAFA,MAAE,gBAAFA,MAAE,GAAA4lB,GAAA,mBAAF5lB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA8lB,GAAA,mBAAF9lB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAgmB,GAAA,mBAAFhmB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAqmB,GAAA,mBAAFrmB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAwmB,GAAA,mBAAFxmB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAymB,GAAA,mBAAFzmB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA6mB,GAAA,mBAAF7mB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA8mB,GAAA,mBAAF9mB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAgnB,GAAA,mBAAFhnB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAwnB,GAAA,mBAAFxnB,cAAE,GAAA2nB,GAAA,qCAAF3nB,SAmoGu3K,EAAAH,IAnoGv3KG,MAAE,QAAAF,EAAAykD,oBAAFvkD,MAAE,GAAFA,MAAE,QAAFA,MAAE,KAAAF,EAAAyd,QAAFvd,CAmoG2mB,eAnoG3mBA,MAAE,KAAAF,EAAA2d,eAAFzd,CAmoG2mB,aAnoG3mBA,MAAE,KAAAF,EAAA4d,aAAF1d,CAmoG2mB,cAnoG3mBA,MAAE,KAAAF,EAAA6d,cAAF3d,CAmoG2mB,UAAAF,EAAAgR,SAnoG3mB9Q,MAAE,GAAFA,MAAE,gBAAAF,EAAFE,CAmoG6+B,mBAAAF,EAAA2P,kBAnoG7+BzP,MAAE,GAAFA,MAAE,oBAAAF,EAAA+d,kBAAF7d,CAmoGsnC,wBAnoGtnCA,MAAE,+BAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CAmoGwwC,qBAnoGxwCA,CAmoGwwC,OAAAF,EAAAgd,MAAAlc,IAAA,OAnoGxwCZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAmoGghD,qBAnoGhhDA,CAmoGghD,OAAAF,EAAAgd,MAAAlc,IAAA,cAnoGhhDZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAmoG21D,qBAnoG31DA,CAmoG21D,OAAAF,EAAAgd,MAAAlc,IAAA,cAnoG31DZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,uBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAAFA,CAmoGszF,cAnoGtzFA,CAmoGszF,OAAAF,EAAAgd,MAAAlc,IAAA,SAnoGtzFZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CAmoGwyG,OAAAF,EAAAgd,MAAAlc,IAAA,QAnoGxyGZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,yBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAAFA,CAmoG0+H,qBAnoG1+HA,CAmoG0+H,OAAAF,EAAAgd,MAAAlc,IAAA,UAnoG1+HZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,+BAAFA,CAmoGuzI,OAAAF,EAAAgd,MAAAlc,IAAA,iBAnoGvzIZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,+BAAFA,CAmoG6lJ,sBAnoG7lJA,MAAE,GAAFA,MAAE,UAAAF,EAAAwW,cAmoG+yK,EAAAmoB,aAAA,CAA69BC,MAAwEC,KAA+HA,KAAsGX,KAA2OvE,MAAmJA,MAAsMA,MAAwJA,MAAqPA,MAAsMA,MAA+IA,MAAmKA,MAA2EkF,KAAuDC,KAA6DnF,MAAmEA,MAA+DA,OAAqBoF,OAAA,8sCAW97Q,MAAM+lB,GAAqB5c;;;;;;MAMrB6c;EAEN,MAAMC,UAA+B1c,MACjC7T,YAAYyF,EAAOC,EAAQC,EAAqBC,EAAsBC,EAAaiJ,EAAc/I,EAAqB9F,EAAa6F,GAC/HE,QACA9F,KAAK0F,qBAAuBA,EAC5B1F,KAAK2F,YAAcA,EACnB3F,KAAK4O,aAAeA,EACpB5O,KAAK6F,oBAAsBA,EAC3B7F,KAAKD,YAAcA,EACnBC,KAAK4F,eAAiBA,EACtB5F,KAAKne,aAAeme,KAAKmG,qBAAqB,WAC9CnG,KAAKr0B,WAAaq0B,KAAK2F,YAAYa,MAAM,CACrC9V,SAAS,EACTphB,KAAM,CAAC,GAAIi7B,KAAWC,UACtBzE,wBAAwB,EACxBpgB,KAAM,CAAC,MAAI06B,OAAwB,0BACnCx9B,YAAa,GACb+3B,cAAe,CAAC,IAChB/4B,aAAcme,KAAK2F,YAAYa,SAAMsN,OAAwB9T,KAAKne,iBAEtEme,KAAKjE,aAAe,CAAC,EACrBiE,KAAK3M,qBAAuB,CAAEyN,OAAQ,GAAInQ,SAAU,GAAIyR,gBAAiB,IACzEpC,KAAKvqB,kBAAoB,CAACuwB,MAAWC,cAAeD,MAAWE,cACnE,CACAE,WACIpG,KAAK2G,OACL,MAAM2pB,EAAsBtwB,KAAK9D,QAAQoE,QAAKe,KAAIrxB,GAAWA,EAAQuJ,cAG/Dg3C,EAFevwB,KAAKr0B,WAEoBQ,IAAI,iBAAiB4+B,aAAazK,QAAKwU,MAAK,IAAC,EAAG0G,QAAqB,EAAGtwC,KAAUotC,GAAOtY,KAAKD,YAAY4qB,MACnJ6F,eAAe,CAAEzvB,OAAQ,CAAEt0B,GAAI,CAAE+sC,GAAIlB,MACrCnY,UAAU,EAAG5mB,iBAAkBA,EAAYE,SAAM,EAAG8mB,MAAY,IACrEP,KAAK/D,gBAAe6a,MAAOwZ,EAAoBhwB,QAAKwG,KAAK,IAAKwpB,EAAoBhwB,KAAKx1B,GAAYylD,KACnGvwB,KAAK9L,iBAAmB8L,KAAK9D,QAAQoE,QAAKe,KAAI4O,GAAKA,EAAEmI,UACzD,CACArE,cACI/T,KAAKgU,SACT,CACAjgB,iBAAiBxb,GACb,OAAOA,IAAgBk4C,KAC3B,CACAx8B,kBACI+L,KAAK9L,iBACAoM,QAAKwG,KAAK,IAAC,EAAG57B,KAAUktC,GAAYpY,KAAK4O,aAAa6B,cAAcgH,EAAwC,CAC7GZ,KAAM,KACNnG,OAAQ,CACJuI,WAAY,CAACjZ,KAAKvzB,IAClBgtC,kBAAmBrB,EAAS/W,IAAIgB,GAAKA,EAAE51B,SAG1C66B,WACT,CACA1T,kBAAkBklB,IACdL,WAAKiV,OAA6B1tB,KAAKD,YAAa+Y,IAC/CxY,QAAKp1B,KAAU,EAAGqN,iBAAkBynB,KAAK4O,aAAakC,OAAO,CAC9DC,SAAOrJ,KAAO,uCACdwJ,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CACIgC,KAAM,SACNyH,SAAOzJ,KAAO,+BACduJ,gBAAiB,CAAE14B,eACnB64B,aAAa,QAGvB,EAAGlmC,KAAU4mC,GAAYA,EACrB9R,KAAKD,YAAY/vB,QAAQ0gD,0BAA0B,CACjD5X,YACAG,WAAY,CAACjZ,KAAKvzB,MAEpBkkC,MACDrJ,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,sDAAqD,EAC9FC,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,oDAAmD,EAEjG,CACAipB,uBAAuBltB,GACnB,OAAOzD,KAAK4O,aACP6B,cAAcgH,EAAwC,CACvDZ,KAAM,KACNnG,OAAQ,CACJuI,WAAY,CAACjZ,KAAKvzB,IAClBirC,kBAAmB,CAACjU,EAAQh3B,IAC5BgtC,kBAAmBhW,EAAQ2U,SAAS/W,IAAIgB,GAAKA,EAAE51B,OAGlD66B,WACT,CACAspB,0BAA2B9X,YAAWrV,aAClCgV,WAAKiV,OAA6B1tB,KAAKD,YAAa+Y,IAC/CxY,QAAKp1B,KAAU,EAAGqN,iBAAkBynB,KAAK4O,aAAakC,OAAO,CAC9DC,SAAOrJ,KAAO,+CACdwJ,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CACIgC,KAAM,SACNyH,SAAOzJ,KAAO,+BACduJ,gBAAiB,CAAE14B,eACnB64B,aAAa,QAGvB,EAAGlmC,KAAU4mC,GAAYA,EACrB9R,KAAKD,YAAY/vB,QAAQ6gD,0BAA0B,CACjD/X,YACApB,kBAAmB,CAACjU,EAAQh3B,MAE9BkkC,MACDrJ,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,sDAAqD,EAC9FC,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,oDAAmD,EAEjG,CACAjnB,gBACI,QAASuqB,OAAOl5B,OAAOkuB,KAAKjE,cAAc5tB,MAC9C,CAIAszC,WAAWC,GACP,MAAMC,EAAc3hB,KAAKr0B,WAAWQ,IAAI,QAClC68B,EAAqBhJ,KAAKhT,UAASuW,OAAgBvD,KAAKhT,OAAQgT,KAAKU,mBAAgBrG,EACrFunB,GAAsB5Y,IAAuBA,EAAmBrjB,KAClEg8B,GAAeA,EAAY/1C,UAAYg2C,GACvCD,EAAYrY,YAAShH,KAAiB,GAAEof,IAAa,KAE7D,CACA1sB,0BACIgL,KAAK8wB,yBAAyBxpB,UAAUsT,IACpC,GAAIA,EAAe,CACf,MAAMmW,EAAe/wB,KAAKr0B,WACpBqlD,EAAuBD,EAAavkD,MAAMouC,eAAiB,GACjEmW,EAAanO,WAAW,CACpBhI,iBAAe7M,KAAO,IAAIijB,KAAyBpW,MAEvDmW,EAAa7c,aACjB,GAER,CACAnQ,oBAAoBtD,IAChBoG,OAAc7G,KAAK9D,QAAS8D,KAAK1H,eAC5BgI,QAAKwG,KAAK,IAAC,EAAG1F,KAAS,EAAEpxB,EAAS0wB,KAAkBV,KAAK0F,qBAAqB3B,oBAAoBtD,EAAOzwB,EAAS0wB,KAClH4G,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,iBACX,EACF2a,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,iBACX,EAET,CACA4H,wBAAwB2lB,GACpB,MAAMwW,EAAe/wB,KAAKr0B,WACpBqlD,EAAuBD,EAAavkD,MAAMouC,eAAiB,GACjEmW,EAAanO,WAAW,CACpBhI,cAAeoW,EAAqBjwB,OAAOt0B,GAAMA,IAAO8tC,KAE5DwW,EAAa7c,aACjB,CACA4c,yBACI,OAAO9wB,KAAK4O,aACP6B,cAAcyC,EAA2B,CAC1C2D,KAAM,KACNK,UAAU,IAET5W,QAAKe,KAAI9nB,GAAeA,GAAeA,EAAY8nB,IAAIK,GAAKA,EAAEj1B,KACvE,CACA6T,SACI,MAAMywC,EAAe/wB,KAAKr0B,WAC1B,IAAKolD,EAAa/pB,MACd,OAEJ,MAAMiqB,EAAajxB,KAAKkxB,kBAAkB,CACtCzkD,GAAI,GACJG,UAAW,GACXG,UAAW,GACX2jB,SAAS,EACTgQ,aAAcV,KAAKU,aACnBpxB,KAAM,GACNqW,KAAM,GACN1Q,cAAe,KACfiC,OAAQ,GACR2L,YAAa,GACb0f,aAAc,GACdtyB,aAAc,GACdsJ,YAAa,GACb6+B,SAAU,IACX2Y,EAAc/wB,KAAKU,cACtBV,KAAK0F,qBACAlF,0BAA0BywB,EAAYjxB,KAAK3M,qBAAsB2M,KAAKU,cACtE4G,UAAU,EAAGnF,wBAAuB1nB,gBACrCulB,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,YAEZgT,KAAKjE,aAAe,CAAC,EACrBiE,KAAKr0B,WAAW47B,iBAChBvH,KAAKwF,OAAOuX,SAAS,CAAC,MAAOtiC,GAAY,CAAEuiC,WAAYhd,KAAKuF,OAAO,EACpEoC,IAECwpB,QAAQvpB,MAAMD,GACd3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,WACX,EAET,CACAvhB,QACIo7B,OAAc7G,KAAK9D,QAAS8D,KAAK1H,eAC5BgI,QAAKwG,KAAK,IAAC,EAAG1F,KAAS,EAAEpxB,EAAS0wB,MACnC,MAAMqwB,EAAe/wB,KAAKr0B,WAC1B,IAAIo3B,EAEJ,OAAIguB,EAAa/pB,OAAShH,KAAKvf,mBAC3BsiB,EAAe/C,KAAKkxB,kBAAkBlhD,EAAS+gD,EAAcrwB,IAE1DV,KAAK0F,qBAAqB9C,cAAc,CAC3C5yB,UACA0wB,eACAoC,WAAY9C,KAAKr0B,WAAWQ,IAAI,CAAC,UAAW,4BAA4BK,QAAS,EACjFu2B,eACAC,cATAA,WAUH,IAEAsE,UAAUhD,IACXtE,KAAKoxB,oBAAoB9sB,GACzBtE,KAAKr0B,WAAW47B,iBAChBvH,KAAKjE,aAAe,CAAC,EACrBiE,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,YAEZgT,KAAK4F,eAAe4B,cAAa,EAClCG,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,WACX,EAET,CACAujB,gBACI,OAAOzK,MAAMyK,kBAAoBvQ,KAAKjE,aAAa7kB,SAAW8oB,KAAKjE,aAAa9mB,aACpF,CAIAmzB,cAAcp4B,EAAS0wB,GACnB,MAAMsI,KAAqBzF,OAAgBvzB,EAAS0wB,GACpDV,KAAKr0B,WAAWi3C,WAAW,CACvBlyB,QAAS1gB,EAAQ0gB,QACjBphB,KAAM05B,EAAqBA,EAAmB15B,KAAO,GACrDqW,KAAMqjB,EAAqBA,EAAmBrjB,KAAO,GACrD9C,YAAammB,EAAqBA,EAAmBnmB,YAAc,GACnE+3B,cAAe5qC,EAAQuJ,YAAY8nB,IAAImZ,GAAMA,EAAG/tC,MAEhDuzB,KAAKne,aAAa1T,QAClB6xB,KAAKoJ,yBAAyBpJ,KAAKne,aAAcme,KAAKr0B,WAAWQ,IAAI,CAAC,iBAAkB6D,EAASg5B,EAEzG,CAKAkoB,kBAAkBlhD,EAASqhD,EAAkB3wB,GAazC,MAAO,KACH,EAbmBoH,OAA0B,CAC7CC,aAAc/3B,EACdg4B,cAAeqpB,EAAiB7kD,MAChCy7B,kBAAmBjI,KAAKne,aACxB6e,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAMU,EAAQV,MAAQ,GACtBqW,KAAM3V,EAAQ2V,MAAQ,GACtB9C,YAAa7S,EAAQ6S,aAAe,MAKxCwzB,SAAUrW,KAAKjE,aAAa7kB,QAAQmqB,IAAI6N,GAAKA,EAAEziC,IAC/Cs2C,gBAAiB/iB,KAAKjE,aAAa9mB,eAAexI,GAClDmuC,cAAeyW,EAAiB7kD,MAAMouC,cAE9C,CAIAwW,oBAAoBE,GAChB,MAAMC,EAAcD,EAAQ,GACtB3P,EAAc3hB,KAAKr0B,WAAWQ,IAAI,CAAC,UAAW,SAIhDw1C,GAHJ,SAAS6P,EAAiB/wB,GACtB,OAAOA,EAAMypB,eAAe,gBAChC,CACmBsH,CAAiBD,IAChC5P,EAAYrY,SAASioB,EAAY3uB,cAAcjd,KAAM,CAAE+pC,WAAW,GAE1E,CAAC7qB,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFsrB,GA37GV9kD,MA27GkDg+B,MA37GlDh+B,MA27GkFg+B,MA37GlFh+B,MA27G0Gy5B,OA37G1Gz5B,MA27G6Is0B,GA37G7It0B,MA27G8Ki+B,MA37G9Kj+B,MA27GyMy5B,OA37GzMz5B,MA27GqOy5B,OA37GrOz5B,MA27GwQy5B,OA37GxQz5B,MA27GmSA,OAAoB,EAA4Cs5B,SAC1b7E,KAAKyJ,UA57GkFl+B,MAAE,CAAAm+B,KA47GJ2mB,EAAsB1mB,UAAA,0BAAAC,SAAA,CA57GpBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,0nEAAA9sB,SAAA,SAAA7R,EAAAC,GA47G0yV,GA57G1yV,EAAAD,IAAFG,MAAE,mBAAFA,CA47GuH,mBA57GvHA,CA47GuH,iBA57GvHA,MAAE,WAAFA,MAAE,6BAAFA,MAAE,8BAAAoC,GAAA,OA47G8etC,EAAA2lB,YAAArjB,EAAmB,GA57GngBpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,gBAAE,kBAAFA,MAAE,4BAAFA,MAAE,GAAA6nB,GAAA,gBAAF7nB,MAAE,YAAFA,MAAE,GAAAgoB,GAAA,yBAAFhoB,yBAAE,YAAFA,CA47GqpD,4BA57GrpDA,CA47GqpD,6BA57GrpDA,CA47GqpD,cA57GrpDA,CA47GqpD,uBA57GrpDA,MAAE,gBAAFA,MAAE,GAAAkoB,GAAA,4BAAFloB,gBAAE,GAAA6oB,GAAA,sBAAF7oB,MAAE,YAAFA,MAAE,GAAAkpB,GAAA,kBAAFlpB,MAAE,kBAAFA,MAAE,gBAAFA,MAAE,aAAFA,MAAE,GAAAmpB,GAAA,+BAAFnpB,MAAE,YAAFA,cAAE,UAAFA,MAAE,GAAAspB,GAAA,iBAAFtpB,gBAAE,GAAA0pB,GAAA,kBAAF1pB,MAAE,YAAFA,cAAE,qBAAFA,MAAE,gBAAFA,MAAE,cAAFA,CA47GolM,YA57GplMA,CA47GolM,SA57GplMA,CA47GolM,wBA57GplMA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,iBAAAoC,GAAA,OA47G2kNtC,EAAAo2C,WAAA9zC,EAAAsf,OAAAzgB,MAA+B,GA57G5mNjB,MAAE,oBAAFA,gBAAE,GAAA4pB,GAAA,aAAF5pB,MAAE,YAAFA,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,eAAFA,MAAE,oBAAFA,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,8BAAFA,MAAE,oBAAFA,kBAAE,GAAA6pB,GAAA,kBAAF7pB,MAAE,0CAAFA,MAAE,kBAAFA,MAAE,gBAAFA,MAAE,oBAAFA,MAAE,kBAAAoC,GAAA,OAAAtC,EAAA0wB,aAAApuB,CAAA,GAAFpC,gBAAE,kBAAFA,MAAE,gBAAFA,MAAE,YAAFA,MAAE,GAAA8pB,GAAA,cAAF9pB,MAAE,YAAFA,MAAE,GAAAgqB,GAAA,0BAAFhqB,aAAE,GAAAkqB,GAAA,cAAFlqB,MAAE,YAAFA,eA47G4yV,EAAAH,EAAA,OAAAk0B,EA57G5yV/zB,MAAE,IAAA4J,EAAF5J,MAAE,QAAAkmD,EAAFlmD,MAAE,GAAFA,MAAE,WAAFA,MAAE,KAAAF,EAAAgtB,QAAF9sB,CA47GsT,yBA57GtTA,MAAE,KAAAF,EAAA4lB,qBAAF1lB,CA47GsT,sBA57GtTA,MAAE,KAAAF,EAAAitB,gBAAF/sB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAAgtB,QAAF9sB,CA47GizB,WAAA+zB,GA57GjzB/zB,MAAE,GAAFA,MAAE,YAAAF,EAAAM,YAAFJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,6BAAFA,MAAE,GAAFA,MAAE,mBAAAF,EAAAoK,mBAAFlK,MAAE,GAAFA,MAAE,QAAFA,MAAE,MAAAF,EAAAgtB,SAAF9sB,MAAE,GAAFA,MAAE,aAAAF,EAAA2hB,OAAA,KAAA3hB,EAAA2hB,OAAA/c,aAAA9B,QAAF5C,MAAE,GAAFA,MAAE,QAAFA,MAAE,yBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAF,EAAA4wB,eAAF1wB,MAAE,GAAFA,MAAE,mBAAAF,EAAAoK,mBAAFlK,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAA6wB,UAAF3wB,MAAE,GAAFA,MAAE,QAAFA,MAAE,+BAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAoK,oBAAFlK,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAgtB,UAAA,OAAAo5B,EAAApmD,EAAAM,WAAAQ,IAAFZ,MAAE,GAAAmqB,MAAA,KAAA+7B,EAAAzqB,QAAFz7B,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,CA47Gm/O,SA57Gn/OA,MAAE,GAAAoY,GAAFpY,MAAE,sCAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAoK,oBAAFlK,MAAE,GAAFA,MAAE,QAAFA,MAAE,4BAAFA,CA47GioQ,SA57GjoQA,MAAE,GAAAoY,GAAFpY,MAAE,sCAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAoK,oBAAFlK,MAAE,GAAFA,MAAE,OAAAF,EAAAwW,aAAA1T,QAAF5C,MAAE,GAAFA,MAAE,UAAAF,EAAA6wB,QAAF3wB,CA47GiuS,aAAAF,EAAAM,YA57GjuSJ,MAAE,GAAFA,MAAE,QAAFA,MAAE,yBAAFA,MAAE,GAAFA,MAAE,SAAAF,EAAA0wB,aAAA7kB,SAAA,MAAA7L,EAAA2hB,OAAA,KAAA3hB,EAAA2hB,OAAA9V,QAAF3L,CA47Gg/S,gBAAAF,EAAA0wB,aAAA9mB,gBAAA,MAAA5J,EAAA2hB,OAAA,KAAA3hB,EAAA2hB,OAAA/X,eA57Gh/S1J,CA47Gg/S,oBAAAF,EAAAoK,mBA57Gh/SlK,MAAE,GAAFA,MAAE,QAAFA,MAAE,kCAAFA,CA47Gu1T,WA57Gv1TA,MAAE,MAAAF,EAAAgtB,SAAF9sB,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAAgtB,QAAF9sB,CA47Gu6T,WAAA4J,GA57Gv6T5J,MAAE,GAAFA,MAAE,YAAFA,MAAE,MAAAF,EAAAgtB,QA47G0/U,GAAA2R,aAAA,CAA0rCC,MAAwEA,MAA8EA,MAAoFA,MAAyGC,KAA+HA,KAAsGV,KAAyGA,KAAgRA,KAAiLA,KAAwGA,KAA4JA,KAAmLA,KAAiJA,IAAgKD,KAA2OvE,MAAgFA,MAAmGA,KAAqGA,MAAmJA,MAAyKA,MAAiJA,MAAgGA,MAA4GA,MAAsMA,KAA0HA,MAA8IA,MAA6HA,MAAmHA,MAA+GA,MAA6IA,MAAwMA,MAAmKA,MAAgFA,MAA+GA,MAA+FA,MAAiGA,MAAoG0pB,GAAuIlY,EAAgKqZ,EAAwI3lB,KAAuDC,KAA6DnF,MAAmDA,MAAqEA,OAAmBoF,OAAA,8iCAAAC,gBAAA,IAOtriB,MAAMqnB,GAA2B,CAC7BrN,SAAU,eACVlT,SAAOzJ,KAAO,iBACdod,KAAM,QACN6I,UAAW,YACXrJ,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAW2rB,gBACvEpN,EAAgB9/B,SAASuhB,MAAWye,eACxCM,QAASA,EAAGC,WAAUjF,YAAWkF,gBAAeC,qBAC5C,MAAMtW,EAAeoW,EAAS74C,IAAIg5C,OAC5BplB,EAAcilB,EAAS74C,IAAI2mC,OAC3BjN,EAAsBmf,EAAS74C,IAAIi5C,OACzCxW,EACKkC,OAAO,CACRC,SAAOrJ,KAAO,wCACduJ,gBAAiB,CACbhuB,MAAO88B,EAAU5xC,QAErB+iC,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAU4mC,GAAYA,EAAW/R,EAAY/vB,QAAQ4hD,kBAAe7jB,KAAOgS,EAAU1e,IAAI4O,GAAKA,EAAExjC,MAAQkkC,MAC7GrJ,UAAUhD,IACX,IAAI2nB,EAAU,EACd,MAAM+B,EAAS,GACf,UAAWzhD,KAAQ+3B,EAAOstB,eAClBrlD,EAAK+3B,SAAWC,MAAeC,QAC/BynB,IAEK1/C,EAAKq4B,SACVopB,EAAO3qB,KAAK92B,EAAKq4B,SAGrB,EAAIqnB,GACJpmB,EAAoB4B,WAAQC,KAAO,+CAAgD,CAC/EzkB,MAAOgpC,IAGX,EAAI+B,EAAO7/C,QACX03B,EAAoB+B,MAAMomB,EAAOz9B,KAAK,OAE1C00B,EAAcvP,UACdwP,GAAe,EAClB,GAGH2M,GAAoC,CACtCxN,SAAU,eACVlT,SAAOzJ,KAAO,6BACdod,KAAM,SACNR,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAWE,eACxC0nB,UAAWA,EAAG5I,eAAS,EAAM8M,OAAe9M,EAAS74C,IAAI2mC,QACzDiS,QAASA,EAAGC,WAAUjF,YAAWmF,qBACRF,EAAS74C,IAAIg5C,OAE7B1U,cAAcgH,EAAwC,CACvDZ,KAAM,KACNnG,OAAQ,CACJuI,cAAYlL,KAAOgS,EAAU1e,IAAI4O,GAAKA,EAAExjC,KACxCgtC,kBAAmB,MAGtBnS,UAAUhD,IACPA,GACA4gB,GAAe,EAEtB,GAGH6M,MAAsCnM,OAAkC,CAC1EvB,SAAU,eACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAWE,eACxCwe,YAAan4C,GAAQA,EAAK+C,KAC1Bu2C,sBAAuBA,CAAC9lB,EAAakZ,EAAYH,IAAc/Y,EAAY/vB,QACtE0gD,0BAA0B,CAC3B5X,UAAWA,EACXG,eAEC3Y,QAAKe,KAAIiV,GAAOA,EAAIoa,8BAEvBsB,GAAwC,CAC1C3N,SAAU,eACVlT,SAAOzJ,KAAO,6BACdod,KAAM,MACNR,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAWE,eACxC6e,QAASA,EAAGC,WAAUjF,YAAWkF,gBAAeC,qBAC5C,MAAMtW,EAAeoW,EAAS74C,IAAIg5C,OAE5Btf,GADcmf,EAAS74C,IAAI2mC,OACLkS,EAAS74C,IAAIi5C,QACnCpL,EAAO,UACP1B,KAAMvK,KAAOgS,EAAU1e,IAAI4O,GAAKA,EAAExjC,KACxC,OAAOmiC,EACF6B,cAAcqJ,GAAmC,CAClDjD,KAAM,KACNnG,OAAQ,CACJsJ,OACA1B,SAGHhR,UAAUhD,IACPA,IACAuB,EAAoB4B,WAAQC,KAAO,qCAAsC,CACrEzkB,MAAO88B,EAAU5xC,OACjB6e,OAA6B,aAEjCk4B,IAAe,EAEtB,GAIT,MAAM+M,WAA6BjM,MAC/BlmB,YAAYC,EAAa6O,EAAc/I,EAAqBqsB,GACxDpsB,QACA9F,KAAKD,YAAcA,EACnBC,KAAK4O,aAAeA,EACpB5O,KAAK6F,oBAAsBA,EAC3B7F,KAAKkyB,gBAAkBA,EACvBlyB,KAAKmyB,0BAA4B,EACjCnyB,KAAKne,aAAeme,KAAKmG,qBAAqB,WAC9CnG,KAAK3jB,QAAU2jB,KAAKimB,yBACfC,cACAC,iBACA4J,WAAW,CACZ,CACIzgD,KAAM,UACNo6B,KAAM,CAAE0c,KAAM,WACdjV,SAAOzJ,KAAO,kBACd2e,YAAa,WAEjB,CACI/2C,KAAM,OACNo6B,KAAM,CAAE0c,KAAM,QACdjV,SAAOzJ,KAAO,eACd2e,YAAa,UAGhBzjC,UAAU,CACXtT,KAAM,cACNo6B,KAAM,CACF0c,KAAM,SACN/T,UAAW+f,MACXC,eAAgB7lD,GAASA,EAAM60B,IAAIK,GAAKA,EAAEj1B,IAAI8jB,KAAK,KACnD+hC,iBAAkB9lD,GAASA,EAAMwhC,MAAM,KAAK3M,IAAI50B,KAASA,QACzD8lD,SAAU/lD,GACe,IAAjBA,EAAM2B,OACC,GAEP3B,EAAM,GAAG8C,KACF9C,EAAM60B,IAAIK,GAAKA,EAAEpyB,MAAMihB,KAAK,OAAI,EAGhC6oB,MAAcpZ,KAAKD,YAAY4qB,MACjC6F,eAAe,CAAEzvB,OAAQ,CAAEt0B,GAAI,CAAE+sC,GAAIhtC,EAAM60B,IAAIK,GAAKA,EAAEj1B,QACtD0zB,UAAU,EAAG5mB,iBAAkBA,EAAYE,MAAM4nB,IAAImZ,GAAMA,EAAGlrC,MAAMihB,KAAK,SAI1F4gB,SAAOzJ,KAAO,wBACd4e,cAAgB95C,KACZ+tC,aAAc,CACVf,GAAIhtC,EAAM60B,IAAIK,GAAKA,EAAEj1B,SAI5B+5C,sBAAsBxmB,KAAKne,cAC3B4kC,eAAezmB,KAAKuF,OACzBvF,KAAK3X,MAAQ2X,KAAK0mB,uBACbC,YAAY,YAAa,QACzBsJ,SAAS,CACV,CAAE3gD,KAAM,MACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,QACR,CAAEA,KAAM,UAEPu3C,oBAAoB7mB,KAAKne,cACzB4kC,eAAezmB,KAAKuF,OACzBvF,KAAK8mB,UAAU,CACXC,SAAUyL,MACVvL,SAAU7mB,GAAQA,EAAKga,SACvB8M,aAAcA,CAACpS,EAAMhO,MACjBv3B,QAAS,CACLulC,OACAhO,OACA/F,OAAQ,CACJzxB,KAAM,CACF0lC,SAAUhV,KAAK5W,kBAAkB5c,UAElCwzB,KAAK3jB,QAAQ+qC,qBAEpBrrC,KAAMikB,KAAK3X,MAAMg/B,qBAGzBC,qBAAsB,CAACtnB,KAAK3X,MAAM0iB,aAAc/K,KAAK3jB,QAAQ0uB,eAErE,CACA0nB,qBACIzyB,KAAKD,YAAY/vB,QAAQ0iD,UAAUprB,UAAU,EAAGorB,cAC5C1yB,KAAK6F,oBAAoB8sB,QAAKjrB,KAAO,uBACrC1H,KAAKkyB,gBAAgBU,OAAOF,EAAQjmD,GAAIomD,IACpC,GAAIA,EAAI5Y,QAAU6Y,MAASC,UAAW,CAClC,MAAMC,GAAO,IAAIC,KAAKC,cAAeC,OAAON,EAAIO,UAAY,GAC5DpzB,KAAK6F,oBAAoB4B,WAAQC,KAAO,8BAA+B,CACnEzkB,MAAO4vC,EAAIvuB,OAAO+uB,iBAClBL,SAEJhzB,KAAK0V,SACT,MAEI1V,KAAK6F,oBAAoB+B,SAAMF,KAAO,yBAAwB,EAErE,EAET,CACA4rB,cAAc74C,GACVulB,KAAK4O,aACAkC,OAAO,CACRC,SAAOrJ,KAAO,kCACdwJ,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAU4mC,GAAaA,EAAW9R,KAAKD,YAAY/vB,QAAQsjD,cAAc74C,GAAak2B,MAAM,EAGtG4iB,MAAM,MACDjsB,UAAU,KACXtH,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,YAEZgT,KAAK0V,SAAQ,EACd/N,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,WACX,EAET,CAAC6X,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFktB,IAtrHV1mD,MAsrHgDy5B,OAtrHhDz5B,MAsrH2Ey5B,OAtrH3Ez5B,MAsrHuGy5B,OAtrHvGz5B,MAsrH0Iy5B,OAAkB,EAA4CH,SAC/R7E,KAAKyJ,UAvrHkFl+B,MAAE,CAAAm+B,KAurHJuoB,GAAoBtoB,UAAA,wBAAAC,SAAA,CAvrHlBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,mnCAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,mBAAFA,CAurHmH,mBAvrHnHA,CAurHmH,gBAvrHnHA,CAurHmH,6BAvrHnHA,MAAE,8BAAAoC,GAAA,OAurHqYtC,EAAA2lB,YAAArjB,EAAmB,GAvrH1ZpC,MAAE,WAAFA,MAAE,WAAFA,gBAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAAoqB,GAAA,WAAFpqB,MAAE,iBAAFA,CAurH+8B,eAvrH/8BA,MAAE,iBAAFA,cAAE,yBAAFA,CAurH8rC,eAvrH9rCA,MAAE,0BAurHswCF,EAAAonD,oBAAoB,GAvrH5xClnD,MAAE,iBAAFA,MAAE,IAAFA,MAAE,gBAAFA,wBAAE,yBAAFA,MAAE,sBAAAoC,GAAA,OAurH84DtC,EAAAod,cAAA9a,EAAqB,EAvrHr6DpC,CAurHu6D,8BAAAoC,GAAA,OAA+BtC,EAAAsd,gBAAAhb,EAAuB,GAvrH79DpC,MAAE,YAAFA,MAAE,YAAFA,MAAE,YAAFA,MAAE,YAAFA,MAAE,4BAAFA,CAurH+pE,wBAvrH/pEA,MAAE,gBAAFA,MAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAqqB,GAAA,mBAAFrqB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAuqB,GAAA,mBAAFvqB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAyqB,GAAA,mBAAFzqB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAA8qB,GAAA,mBAAF9qB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAgrB,GAAA,mBAAFhrB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAkrB,GAAA,mBAAFlrB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAsrB,GAAA,mBAAFtrB,cAAE,wBAAFA,MAAE,gBAAFA,MAAE,GAAAwrB,GAAA,mBAAFxrB,cAAE,GAAA2rB,GAAA,sCAAF3rB,SAurHi1Q,EAAAH,IAvrHj1QG,MAAE,GAAFA,MAAE,yBAAFA,MAAE,KAAAF,EAAA4lB,qBAAF1lB,CAurHsR,sBAvrHtRA,MAAE,KAAAF,EAAA6lB,mBAAF3lB,MAAE,GAAFA,MAAE,mBAAFA,MAAE,GAAA6rB,KAAF7rB,MAAE,GAAFA,MAAE,IAAFA,MAAE,2CAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,MAAAF,EAAAyd,QAAFvd,CAurHktD,eAvrHltDA,MAAE,MAAAF,EAAA2d,eAAFzd,CAurHktD,aAvrHltDA,MAAE,MAAAF,EAAA4d,aAAF1d,CAurHktD,cAvrHltDA,MAAE,MAAAF,EAAA6d,cAAF3d,CAurHktD,UAAAF,EAAAgR,SAvrHltD9Q,MAAE,GAAFA,MAAE,gBAAAF,EAAFE,CAurH4kE,mBAAAF,EAAA2P,kBAvrH5kEzP,MAAE,GAAFA,MAAE,oBAAAF,EAAA+d,kBAAF7d,CAurHmqK,wBAvrHnqKA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CAurHszK,qBAvrHtzKA,CAurHszK,OAAAF,EAAAgd,MAAAlc,IAAA,OAvrHtzKZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAurH8jL,qBAvrH9jLA,CAurH8jL,OAAAF,EAAAgd,MAAAlc,IAAA,cAvrH9jLZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CAurHy4L,qBAvrHz4LA,CAurHy4L,OAAAF,EAAAgd,MAAAlc,IAAA,cAvrHz4LZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,uBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,sBAAFA,CAurHo2N,cAvrHp2NA,CAurHo2N,OAAAF,EAAAgd,MAAAlc,IAAA,SAvrHp2NZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CAurHiwO,OAAAF,EAAAgd,MAAAlc,IAAA,SAvrHjwOZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,yBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,qCAAFA,MAAE,GAAFA,MAAE,UAAAF,EAAAwW,cAurHsuQ,EAAAmoB,aAAA,CAAggCC,MAAwEC,KAA+HA,KAAsGX,KAA2OvE,MAAgFA,MAAmGA,KAAqGA,MAAmJA,MAAsMA,MAAuGA,MAAgIA,MAA4FA,MAAsFA,MAA8IA,MAAmHA,MAAwJA,MAAqPA,MAAsMA,MAA+IA,MAAmKA,MAA2EkF,KAAuDC,KAA6DnF,MAAmEA,OAAiBoF,OAAA,CAAh5H,6sCAOv3Q,MAAMopB,GACF1zB,YAAYC,GACRC,KAAKD,YAAcA,EACnBC,KAAKyzB,aAAe,IAAIlf,IAAgB,GACxCvU,KAAK0zB,qBAAuB,IAAInf,IAAgB,GACpD,CACAnO,WACI,MAAMutB,EAAY3zB,KAAKD,YAAYG,SAC9B0zB,kBAAkB,IAAK,EAAG,eAC1B1hB,UAAU9R,GAAQA,EAAKyzB,SAASp6C,OAC/Bq6C,EAAiB9zB,KAAKD,YAAYG,SACnCuP,iBAAiB,eACjBoF,yBACA3C,UAAU9R,GAAQA,EAAKsP,eAC5B1P,KAAKxI,YAAWqP,KAAcitB,EAAgBH,EAAW3zB,KAAK0zB,sBAAsBpzB,QAAKe,KAAI,EAAE5pB,EAASo8C,EAAUE,MAC9G,MAAMC,EAAiBv8C,EAAQu8C,eAC/B,IAAKA,EACD,OAAO,EAEX,MAAMC,EAAiBJ,EAAShyB,KAAKqyB,GAAWA,EAAQC,KAAK1nD,KAAOunD,EAAevnD,IAAMynD,EAAQ5R,SAAS71C,KAAOsnD,GACjH,OAAKE,EAGEA,EAAeznD,MAFX,KAIfwzB,KAAKrI,eAAckP,KAAc7G,KAAKxI,SAAUwI,KAAKyzB,cAAcnzB,QAAKe,KAAI,EAAE6yB,EAASvgD,KAAWygD,KAAKC,MAAM1gD,IAAU,IAAMugD,GAAW,OAC5I,CACA3X,YAAYC,GACJ,UAAWA,GACXxc,KAAKyzB,aAAa7iB,KAAK4L,EAAQ7oC,MAAM+oC,cAErC,kBAAmBF,GACnBxc,KAAK0zB,qBAAqB9iB,KAAK4L,EAAQuX,cAAcrX,aAE7D,CAAC7X,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFyuB,IAjuHVjoD,MAiuHuDy5B,OAAc,EAA4CH,SACxM7E,KAAKyJ,UAluHkFl+B,MAAE,CAAAm+B,KAkuHJ8pB,GAA2B7pB,UAAA,+BAAA2E,OAAA,CAAAgmB,iBAAA,mBAAA3gD,MAAA,QAAAC,aAAA,eAAAmgD,cAAA,iBAAAnqB,SAAA,CAluHzBr+B,OAAEs+B,MAAA,EAAAC,KAAA,EAAAC,OAAA,iEAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,aAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,EAAAgsB,GAAA,aAAFhsB,MAAE,EAAAmsB,GAAA,eAkuHqsB,EAAAtsB,IAluHvsBG,MAAE,GAAFA,YAAE,sBAAFA,MAAE,GAAFA,MAAE,OAAAF,EAAAipD,kBAAF/oD,MAAE,GAAFA,MAAE,QAAAF,EAAAipD,kBAkuH8e,EAAAtqB,aAAA,CAAuVC,MAA8EC,KAAiGA,KAAuDC,KAA6DnF,OAAqBoF,OAAA,kGAAAC,gBAAA,IAe3rCkJ;;;;;;;;;;;EAYxC,MAAMghB,GACFz0B,YAAYC,EAAayF,GACrBxF,KAAKD,YAAcA,EACnBC,KAAKwF,OAASA,EACdxF,KAAK9H,SAAW,CAAC6X,EAAMxjC,IAASA,EAAK+C,KAAK0gC,cAAcvrB,SAASsrB,EAAKC,gBAClEzjC,EAAKqD,IAAIogC,cAAcvrB,SAASsrB,EAAKC,cAC7C,CACA5J,WACIpG,KAAK/H,UAAY+H,KAAKD,YACjBoa,MAAMqa,MAAqC,CAC5C/nD,GAAIuzB,KAAKvlB,YAER0lB,UAAUC,GAAQA,EAAKpwB,SAAS2gB,UAAY,GACrD,CACAqH,SAASzrB,GACDA,GACAyzB,KAAKwF,OACAuX,SAAS,CAAC,UAAW,YAAa/c,KAAKvlB,UAAW,WAAYlO,EAAKE,KACnE2hD,KAAK,IAAOpuB,KAAKjI,uBAAoBsC,EAElD,CAACwK,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFwvB,IAlxHVhpD,MAkxH4Dy5B,OAlxH5Dz5B,MAkxHuFg+B,MAAW,EAA4C1E,SACrO7E,KAAKyJ,UAnxHkFl+B,MAAE,CAAAm+B,KAmxHJ6qB,GAAgC5qB,UAAA,qCAAA2E,OAAA,CAAA7zB,UAAA,aAAAovB,MAAA,EAAAC,KAAA,EAAAC,OAAA,8QAAA9sB,SAAA,SAAA7R,EAAAC,GAnxH5B,GAmxH4B,EAAAD,IAnxH9BG,MAAE,EAAAusB,GAAA,mBAAFvsB,MAAE,cAAAH,EAAA,KAAAqpD,EAAFlpD,MAAE,eAAAkpD,EAAFlpD,MAAE,IAAAF,EAAA4sB,YAAA,KAAAw8B,EAAAtmD,QAAA,EAmxHgM,GAAA67B,aAAA,CAAiiBE,KAAsGV,KAAwGA,KAAwNgC,MAAq2BA,MAAqFtB,KAAuDC,MAAgBE,gBAAA,IAS9uE,MAAMqqB,WAAsC/gB,MACxC7T,YAAY4F,EAAsBC,EAAaiJ,EAAc/I,EAAqB9F,EAAa6F,GAC3FE,QACA9F,KAAK0F,qBAAuBA,EAC5B1F,KAAK2F,YAAcA,EACnB3F,KAAK4O,aAAeA,EACpB5O,KAAK6F,oBAAsBA,EAC3B7F,KAAKD,YAAcA,EACnBC,KAAK4F,eAAiBA,EACtB5F,KAAKvqB,kBAAoB,CAACuwB,MAAWC,cAAeD,MAAWE,eAC/DlG,KAAKne,aAAeme,KAAKmG,qBAAqB,kBAC9CnG,KAAK20B,mBAAqB30B,KAAKmG,qBAAqB,iBACpDnG,KAAKr0B,WAAaq0B,KAAK2F,YAAYa,MAAM,CACrC/5B,GAAI,GACJikB,SAAS,EACT9gB,IAAK,GACLN,KAAM,GACNykD,cAAe,GACfjhC,YAAa,EACb8hC,8BAA8B,EAC9BC,oBAAqB,EACrBC,eAAgBz4B,MAAWC,KAC3Bse,cAAe,GACf/4B,aAAcme,KAAK2F,YAAYa,SAAMsN,OAAwB9T,KAAKne,iBAEtEme,KAAKtH,gBAAkBsH,KAAK2F,YAAYgD,MAAM,IAC9C3I,KAAKrH,WAAaqH,KAAK2F,YAAYgD,MAAM,IACzC3I,KAAKjE,aAAe,CAAC,EACrBiE,KAAK3D,WAAaA,KACtB,CACA+J,WACIpG,KAAK2G,OACL3G,KAAKD,YAAYG,SAAS60B,kBAAkB,eAAerwB,QAAQ4C,UAAU,EAAG0tB,qBAC5Eh1B,KAAKi1B,qBAAuBD,EAAeF,eAC3C90B,KAAKtD,0BAA4Bs4B,EAAeH,oBAChD70B,KAAK4F,eAAe4B,cAAa,GAErCxH,KAAK7D,eAAiB6D,KAAKk1B,QAAQ50B,QAAKe,KAAIjB,GAAQA,EAAKC,cAAc5mB,QACvE,MAAM07C,EAA0Bn1B,KAAKk1B,QAAQ50B,QAAKiG,KAAInG,GAASJ,KAAK7F,2BAA6BiG,EAAKsP,cAAcz3B,sBAAoB,EAAGopB,KAAIjB,GAAQA,EAAKsP,cAAc0lB,yBAC1Kp1B,KAAK5D,wBAAuByK,KAAc7G,KAAKrH,WAAWoS,aAAcoqB,GAAyB70B,QAAKe,KAAI,EAAEg0B,EAAQC,KAAmBA,EAAcv0B,OAAOvyB,IAAS6mD,EAAOh0B,IAAI4O,GAAKA,EAAEr8B,cAAc6Q,SAASjW,MAC9M,MAAMogD,EAAkB5uB,KAAKk1B,QAAQ50B,QAAKe,KAAIjB,GAAQA,EAAK0uB,eAAer1C,QAC1EumB,KAAKrD,wBAAuBkK,KAAc7G,KAAK9D,QAAS0yB,GAAiBtuB,QAAKe,KAAI,EAAErU,EAAQ8hC,MACxF,MAAMyG,EAAUvoC,EAAOiG,YAAYoO,IAAIm0B,GAAKA,EAAE3iC,cAAcpmB,IAC5D,OAAOqiD,EAAe/tB,OAAOy0B,IAAMD,EAAQ9wC,SAAS+wC,EAAE/oD,IAAG,IAE7DuzB,KAAKzF,yBAA2ByF,KAAKD,YAAYG,SAC5CuP,iBAAiB,eACjBoF,yBACA3C,UAAU9R,GAAQA,EAAKsP,cAAc+lB,kBACrCn1B,QAAKC,MAAY,IACtBP,KAAK01B,aAAe11B,KAAK9D,QAAQoE,QAAKe,KAAIrU,GAAUA,GAAQiG,aAAe,KAC3E,MAAMgJ,EAAe+D,KAAK9D,QAAQoE,QAAKe,KAAIoC,GAAWA,EAAQlqB,aAAe,KAEvEg3C,EAA2BvwB,KAAKr0B,WAAWQ,IAAI,iBAAiB4+B,aAAazK,QAAKwU,MAAK,IAAC,EAAG0G,QAAqB,EAAGtwC,KAAUotC,GAAOtY,KAAKD,YAAY4qB,MACtJ6F,eAAe,CAAEzvB,OAAQ,CAAEt0B,GAAI,CAAE+sC,GAAIlB,MACrCnY,UAAU,EAAG5mB,iBAAkBA,EAAYE,SAAM,EAAG8mB,MAAY,IACrEP,KAAK/D,gBAAe6a,MAAO7a,EAAaqE,QAAKwG,KAAK,IAAK7K,EAAaqE,KAAKx1B,GAAYylD,IACzF,CACAxc,cACI/T,KAAKgU,SACT,CACAtZ,mBAAmB9mB,GACfosB,KAAKrH,WAAW0K,KAAKrD,KAAK2F,YAAYa,MAAM,CACxC5yB,eACAD,MAAO,EACP2X,QAAQ,IAEhB,CACA4O,kBAAkBy7B,GACdA,EAAkBrsB,UAAUqsB,EAAkBnpD,OAC9CmpD,EAAkBzhB,aACtB,CACA3Y,iBAAiB1I,GACbmN,KAAKtH,gBAAgB2K,KAAKrD,KAAK2F,YAAYa,MAAM,CAC7CpE,gBAAiBvP,EAAcpmB,GAC/BmpD,kBAAmB/iC,EAAcvjB,KACjCwjB,YAAa,EACbH,eAAgB,IAExB,CACAlnB,QACIo7B,OAAc7G,KAAK9D,QAAS8D,KAAK1H,eAC5BgI,QAAKwG,KAAK,IAAC,EAAG1F,KAAS,EAAEqC,EAAS/C,MACnC,MAAMD,KAAQo1B,MAAK71B,KAAK81B,kBAAkBryB,EAASzD,KAAKr0B,WAAY+0B,GAAe,CAC/E,KACA,UACA,eACA,MACA,gBACA,gBACA,kBACA,WACA,iBACA,sBACA,+BACA,iBAEJ,OAAIV,KAAKtH,gBAAgBsO,QACrBvG,EAAMxN,YAAc+M,KAAKtH,gBAAgB4B,SACpCyG,OAAOsI,GAAWA,EAAQrC,OAC1B3F,IAAIgI,KAELjH,gBAAiBiH,EAAQ78B,MAAM41B,gBAE/BtP,YAAauW,EAAQ78B,MAAMsmB,gBAG/BkN,KAAKrH,WAAWqO,QAChBvG,EAAM40B,OAASr1B,KAAKrH,WAAW2B,SAC1ByG,OAAOsI,GAAWA,EAAQrC,OAC1B3F,IAAIgI,KAEL11B,MAAO01B,EAAQ78B,MAAMmH,MAErBC,aAAcy1B,EAAQ78B,MAAMoH,aAC5B0X,QAAiC,IAAzB+d,EAAQ78B,MAAM8e,WAGvB0U,KAAKD,YAAY4a,OAAOob,MAAsC,CACjEt1B,MAAO,CAACA,IACX,IAEA6G,UAAUhD,IACXtE,KAAKr0B,WAAW47B,iBAChBvH,KAAKtH,gBAAgB6O,iBACrBvH,KAAKrH,WAAW4O,iBAChBvH,KAAKjE,aAAe,CAAC,EACrBiE,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,mBAEZgT,KAAK4F,eAAe4B,cAAa,EAClCG,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,kBACX,EAET,CACAvM,gBACI,QAASuqB,OAAOl5B,OAAOkuB,KAAKjE,cAAc5tB,MAC9C,CACAsuB,sBAAsBsM,GAClB,MAAM+rB,EAAiB/rB,EAAU58B,IAAI,mBAAmBK,MACxD,OAAQsoD,IAAmBz4B,MAAWE,OACjCu4B,IAAmBz4B,MAAWG,UAAyC,IAA9BwD,KAAKi1B,oBACvD,CACAl8B,gBAAgByI,GAEZ,OADcxB,KAAKhT,QAAQhd,QAAQC,aAAa4xB,KAAKb,GAAKA,EAAEv0B,KAAO+0B,IACrDhzB,IAClB,CACAyqB,WAAW2I,GAEP,OADoBA,EAAOW,aAAaV,KAAKkD,GAAKA,EAAErE,eAAiBV,KAAKU,eAAiBkB,EAAOW,aAAa,IAC5FjzB,IACvB,CACA+J,iBAAiBkhC,GACb,MAAMwW,EAAe/wB,KAAKr0B,WACpBqlD,EAAuBD,EAAavkD,MAAMouC,eAAiB,GACjEmW,EAAanO,WAAW,CACpBhI,cAAeoW,EAAqBjwB,OAAOt0B,GAAMA,IAAO8tC,KAE5DwW,EAAa7c,aACjB,CACAza,mBACIuG,KAAK8wB,yBAAyBxpB,UAAUsT,IACpC,GAAIA,EAAe,CACf,MAAMoW,EAAuBhxB,KAAKr0B,WAAWa,MAAMouC,eAAiB,GACpE5a,KAAKr0B,WAAWi3C,WAAW,CACvBhI,iBAAe7M,KAAO,IAAIijB,KAAyBpW,MAEvD5a,KAAKr0B,WAAWuoC,aACpB,GAER,CACA4c,yBACI,OAAO9wB,KAAK4O,aACP6B,cAAcyC,EAA2B,CAC1C2D,KAAM,KACNK,UAAU,IAET5W,QAAKe,KAAI9nB,GAAeA,GAAeA,EAAY8nB,IAAIK,GAAKA,EAAEj1B,KACvE,CACA27B,cAAc3E,EAAS/C,GACnB,MAAMmD,KAAqBN,OAAgBE,EAAS/C,GAC9Cka,EAAgBnX,EAAQlqB,YAAY8nB,IAAImZ,GAAMA,EAAG/tC,IACvDuzB,KAAKr0B,WAAWi3C,WAAW,CACvBn2C,GAAIg3B,EAAQh3B,GACZikB,QAAS+S,EAAQ/S,QACjB9gB,IAAK6zB,EAAQ7zB,IACbN,KAAMu0B,EAAqBA,EAAmBv0B,KAAO,GACrDykD,cAAetwB,EAAQuyB,YAAYvpD,GACnCqmB,YAAa2Q,EAAQxQ,YAAY,IAAIH,aAAe,EACpD8hC,6BAA8BnxB,EAAQmxB,6BACtCC,oBAAqBpxB,EAAQoxB,oBAC7BC,eAAgBrxB,EAAQqxB,eACxBla,kBAEJ5a,KAAKtH,gBAAgBoqB,QACrB,UAAWmT,KAAcxyB,EAAQxQ,YAC7B+M,KAAKtH,gBAAgB2K,KAAKrD,KAAK2F,YAAYa,MAAM,CAC7CpE,gBAAiB6zB,EAAWpjC,cAAcpmB,GAC1CmpD,kBAAmBK,EAAWpjC,cAAcvjB,KAC5CwjB,YAAamjC,EAAWnjC,YACxBH,eAAgBsjC,EAAWtjC,kBAGnCqN,KAAKrH,WAAWmqB,QAChB,UAAWnvC,KAAS8vB,EAAQ4xB,OACxBr1B,KAAKrH,WAAW0K,KAAKrD,KAAK2F,YAAYa,MAAM,CACxC7yB,MAAOA,EAAMA,MACbC,aAAcD,EAAMC,aACpB0X,QAAQ,KAGZ0U,KAAKne,aAAa1T,QAClB6xB,KAAKoJ,yBAAyBpJ,KAAKne,aAAcme,KAAKr0B,WAAWQ,IAAI,gBAAiBs3B,EAASI,EAEvG,CAKAiyB,kBAAkBryB,EAASyyB,EAAkBx1B,GAWzC,MAAO,KACH,EAXmBoH,OAA0B,CAC7CC,aAActE,EACduE,cAAekuB,EAAiB1pD,MAChCy7B,kBAAmBjI,KAAKne,aACxB6e,eACAwH,mBAAoB,CAChBxH,eACApxB,KAAMm0B,EAAQn0B,MAAQ,MAK1B+mC,SAAUrW,KAAKjE,aAAa7kB,QAAQmqB,IAAI6N,GAAKA,EAAEziC,IAC/Cs2C,gBAAiB/iB,KAAKjE,aAAa9mB,eAAexI,GAClDmuC,cAAesb,EAAiB1pD,MAAMouC,cACtCmZ,cAAemC,EAAiB1pD,MAAMunD,cAE9C,CAAClvB,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF2vB,IA3gIVnpD,MA2gIyDs0B,GA3gIzDt0B,MA2gI0Fi+B,MA3gI1Fj+B,MA2gIqHy5B,OA3gIrHz5B,MA2gIiJy5B,OA3gIjJz5B,MA2gIoLy5B,OA3gIpLz5B,MA2gI+MA,OAAoB,EAA4Cs5B,SACtW7E,KAAKyJ,UA5gIkFl+B,MAAE,CAAAm+B,KA4gIJgrB,GAA6B/qB,UAAA,iCAAAC,SAAA,CA5gI3Br+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,qyFAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,mBAAFA,CA4gIqI,mBA5gIrIA,CA4gIqI,kBA5gIrIA,CA4gIqI,WA5gIrIA,MAAE,EAAAgtB,GAAA,sBAAFhtB,MAAE,WAAFA,MAAE,sCAAFA,gBAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAAitB,GAAA,gBAAFjtB,kBAAE,GAAAqwB,GAAA,gBAAFrwB,MAAE,eAAAH,IAAFG,MAAE,GAAFA,MAAE,WAAFA,MAAE,GAAFA,MAAE,OAAFA,MAAE,IAAAF,EAAA4lB,sBAAF1lB,MAAE,GAAFA,MAAE,kBAAAF,EAAA2hB,OAAA,KAAA3hB,EAAA2hB,OAAAhd,QAAAvD,IAAFlB,MAAE,GAAFA,MAAE,mBAAFA,MAAE,EAAAowB,KAAFpwB,MAAE,GAAFA,MAAE,OAAFA,MAAE,KAAAF,EAAA6wB,UA4gIm2D,EAAA8N,aAAA,CAA4yfC,MAAwEA,MAA8EA,MAAoFA,MAAyGC,KAA+HA,KAAsGV,KAAyGA,KAAkGA,KAA2GA,KAAgRA,KAAkKA,KAAiLA,KAA8MA,KAAwGA,KAA4JA,KAAmLA,KAAiJA,IAAgKD,KAA2OvE,MAAgFA,MAAmGA,KAAqGA,MAAmJA,MAA6KA,MAAyKA,MAAiJA,MAAgGA,MAA4GA,MAAsMA,MAAuGA,MAAgIA,MAA4FA,MAAsFA,MAA8IA,MAAmHA,MAAuGA,MAAwMA,MAAmKA,MAAgFA,MAA+GA,MAA+FA,MAAiGA,MAAoGwR,EAAgKgd,GAAwKe,GAA6HrqB,KAAuDC,KAA6DnF,MAA+EA,MAAmDA,OAAoBoF,OAAA,iuBAAAC,gBAAA,IAOz6vB,MAAM8rB,GAA2C,CAC7C9R,SAAU,uBACVlT,SAAOzJ,KAAO,6BACdod,KAAM,SACNR,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAWE,eACxC0nB,UAAWA,EAAG5I,eAAS,EAAM8M,OAAe9M,EAAS74C,IAAI2mC,QACzDiS,QAASA,EAAGC,WAAUjF,YAAWmF,qBACRF,EAAS74C,IAAIg5C,OAE7B1U,cAAcgH,EAAwC,CACvDZ,KAAM,KACNnG,OAAQ,CACJgH,qBAAmB3J,KAAOgS,EAAU1e,IAAI4O,GAAKA,EAAExjC,KAC/CgtC,kBAAmB,MAGtBnS,UAAUhD,IACPA,GACA4gB,GAAe,EAEtB,GAGHkR,MAA6CxQ,OAAkC,CACjFvB,SAAU,uBACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAWE,eACxCwe,YAAan4C,GAAQA,EAAK+C,KAC1Bu2C,sBAAuBA,CAAC9lB,EAAauY,EAAKQ,IAAc/Y,EAAY/vB,QAC/D6gD,0BAA0B,CAC3B/X,UAAWA,EACXpB,kBAAmBY,IAElBhY,QAAKe,KAAIiV,GAAOA,EAAI+f,qCAEvBC,GAAkC,CACpCjS,SAAU,uBACVlT,SAAOzJ,KAAO,iBACdod,KAAM,QACN6I,UAAW,YACXrJ,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAW2rB,gBACvEpN,EAAgB9/B,SAASuhB,MAAWye,eACxCM,QAASA,EAAGC,WAAUjF,YAAWkF,gBAAeC,qBAC5C,MAAMtW,EAAeoW,EAAS74C,IAAIg5C,OAC5BplB,EAAcilB,EAAS74C,IAAI2mC,OAC3BjN,EAAsBmf,EAAS74C,IAAIi5C,OACzCxW,EACKkC,OAAO,CACRC,SAAOrJ,KAAO,8BACduJ,gBAAiB,CACbhuB,MAAO88B,EAAU5xC,QAErB+iC,QAAS,CACL,CAAExH,KAAM,YAAayH,SAAOzJ,KAAO,kBACnC,CAAEgC,KAAM,SAAUyH,SAAOzJ,KAAO,iBAAkB0J,aAAa,MAGlE9Q,QAAKp1B,KAAU4mC,GAAYA,EAC1B/R,EAAY/vB,QAAQumD,yBAAsBxoB,KAAOgS,EAAU1e,IAAI4O,GAAKA,EAAExjC,MACtEkkC,MACDrJ,UAAUhD,IACX,IAAI2nB,EAAU,EACd,MAAM+B,EAAS,GACf,UAAWzhD,KAAQ+3B,EAAOiyB,sBAClBhqD,EAAK+3B,SAAWC,MAAeC,QAC/BynB,IAEK1/C,EAAKq4B,SACVopB,EAAO3qB,KAAK92B,EAAKq4B,SAGrB,EAAIqnB,GACJpmB,EAAoB4B,WAAQC,KAAO,+CAAgD,CAC/EzkB,MAAOgpC,IAGX,EAAI+B,EAAO7/C,QACX03B,EAAoB+B,MAAMomB,EAAOz9B,KAAK,OAE1C00B,EAAcvP,UACdwP,GAAe,EAClB,GAIT,MAAMsR,GACF12B,YAAY8F,GACR5F,KAAK4F,eAAiBA,EACtB5F,KAAKrC,aAAe,IAAIssB,IACxBjqB,KAAK5zB,iBAAmB,CAAC45B,MAAWC,cAAeD,MAAWE,cAClE,CACAE,WACIpG,KAAKqa,aAAera,KAAK6iB,UAAU9X,aAC9BzK,QAAKe,KAAI70B,GAASA,EAAM2B,SAAM,EAAGonC,KAAa,IAAC,EAAGiG,QAClDlU,UAAU,KACXtH,KAAKy2B,mBAAkB,GAE3Bz2B,KAAKy2B,mBACT,CACA1iB,cACQ/T,KAAKqa,cACLra,KAAKqa,aAAaC,aAE1B,CACAzpB,UAAUviB,EAAO/B,GACb,OAAe,MAAXA,EAAKE,GACEF,EAAKE,GAGL6B,CAEf,CACAkvB,iBAAiBiG,GACb,OAAOzD,KAAK02B,oBAAoBjzB,EAAQh3B,KAAKwI,eAAiBwuB,EAAQxuB,aAC1E,CACAmoB,gBAAgBoE,GACZ,MAAMgF,EAAQxG,KAAK/vB,aAAa4xB,KAAKb,GAAKA,EAAEv0B,KAAO+0B,GACnD,OAAOgF,GAASA,EAAMl3B,IAC1B,CACAmnD,oBACIz2B,KAAKrC,aAAamlB,QAClB,UAAW6T,KAAgB32B,KAAK6iB,UAAUvoB,SACtC0F,KAAKrC,aAAa8kB,IAAIkU,EAAanqD,MAAMC,GAAIkqD,GAEjD32B,KAAK4F,eAAe4B,cACxB,CAAC3C,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFyxB,IAlpIVjrD,MAkpIyDA,OAAoB,EAA4Cs5B,SAChN7E,KAAKyJ,UAnpIkFl+B,MAAE,CAAAm+B,KAmpIJ8sB,GAA6B7sB,UAAA,iCAAA2E,OAAA,CAAAuU,UAAA,yCAAAlyB,SAAA,WAAAimC,iBAAA,mBAAAn5B,wBAAA,0BAAAxtB,aAAA,eAAAymD,oBAAA,uBAAA7sB,MAAA,GAAAC,KAAA,GAAAC,OAAA,4/BAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAnpI3BG,MAAE,YAAFA,CAmpIiX,UAnpIjXA,CAmpIiX,QAnpIjXA,MAAE,QAAFA,MAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,QAAFA,MAAE,GAAFA,MAAE,eAAFA,cAAE,GAAAqxB,GAAA,sBAAFrxB,MAAE,WAAFA,MAAE,SAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,SAAFA,MAAE,IAAFA,MAAE,gBAAFA,cAAE,SAAFA,MAAE,IAAFA,MAAE,gBAAFA,kBAAE,YAAFA,MAAE,GAAAmyB,GAAA,YAAFnyB,MAAE,eAAFA,WAmpI80L,EAAAH,IAnpI90LG,MAAE,GAAFA,YAAE,oBAAFA,MAAE,GAAFA,YAAE,qBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAF,EAAA4E,aAAA,OAAF1E,MAAE,GAAFA,YAAE,wBAAFA,MAAE,GAAFA,YAAE,gCAAFA,MAAE,GAAFA,YAAE,yBAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,MAAAF,EAAAslB,SAAAtlB,EAAAurD,kBAAFrrD,CAmpIu/B,eAAAF,EAAAwlB,WAAA,EAAAmZ,aAAA,CAAolKC,MAA+GA,MAAwEA,MAAoFA,MAAyGA,MAAkEA,MAAoFC,KAA+HA,KAAsGV,KAAgRA,KAAkKA,KAAiLA,KAAwGA,KAA4JA,KAA2LA,KAAiJA,IAAgKxE,MAA6KA,MAAgGA,MAAkGuR,MAA6DpM,KAA6DnF,MAAmDA,MAAqEA,MAAqEA,OAAmBoF,OAAA,+TAAAC,gBAAA,IAoB16R,MAAMwsB,GAAiCtjB;;;;;;;;EASjCujB,GAA4BvjB;;;;;;MAM5BsjB;EAEAE,GAAwBxjB;;;;;;MAMxBsjB;EAEAG,GAAwBzjB;;;;;;MAMxBsjB;EAEN,MAAMI,WAAqCtjB,MACvC7T,YAAY8F,EAAgB7F,EAAa4F,EAAaE,GAClDC,QACA9F,KAAK4F,eAAiBA,EACtB5F,KAAKD,YAAcA,EACnBC,KAAK2F,YAAcA,EACnB3F,KAAK6F,oBAAsBA,EAC3B7F,KAAKne,aAAeme,KAAKmG,qBAAqB,iBAC9CnG,KAAKr0B,WAAaq0B,KAAK2F,YAAYa,MAAM,CACrCl3B,KAAM,CAAC,GAAIi7B,KAAWC,UACtB3nB,YAAa,CAAC,IACdhB,aAAcme,KAAK2F,YAAYa,SAAMsN,OAAwB9T,KAAKne,gBAE1E,CACAukB,WACIpG,KAAK2G,MACT,CACAoN,cACI/T,KAAKgU,SACT,CACA1zB,SACI,IAAK0f,KAAKr0B,WAAWq7B,MACjB,OAEJ,MAAQ13B,OAAMuT,cAAahB,gBAAiBme,KAAKr0B,WAAWa,MAC5D,IAAK8C,EACD,OAEJ,MAAMmxB,EAAQ,CACVnxB,OACAuT,cACAhB,gBAEJme,KAAKD,YAAY4a,OAAOuc,MAA6B,CAAEz2B,UAAS6G,UAAUlH,IACtEJ,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,kBAEZgT,KAAKr0B,WAAW47B,iBAChBvH,KAAK4F,eAAe4B,eACpBxH,KAAKwF,OAAOuX,SAAS,CAAC,MAAO3c,EAAK+2B,oBAAoB1qD,IAAK,CAAEuwC,WAAYhd,KAAKuF,OAAO,EACtFoC,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,iBACX,EAET,CACAvhB,OACI,IAAKu0B,KAAKr0B,WAAWq7B,MACjB,OAEJ,MAAMgF,EAAYhM,KAAKr0B,WAAWa,MAClCwzB,KAAK9D,QACAoE,QAAKwG,KAAK,IAAC,EAAG1F,KAAS8yB,IACxB,MAAMzzB,EAAQ,CACVh0B,GAAIynD,EAAQznD,GACZ6C,KAAM08B,EAAU18B,KAChBuT,YAAampB,EAAUnpB,YACvBhB,aAAcmqB,EAAUnqB,cAE5B,OAAOme,KAAKD,YAAY4a,OAAOyc,MAA6B,CAAE32B,SAAO,IAEpE6G,UAAUlH,IACXJ,KAAK6F,oBAAoB4B,WAAQC,KAAO,gCAAiC,CACrE1a,OAAQ,kBAEZgT,KAAKr0B,WAAW47B,iBAChBvH,KAAK4F,eAAe4B,cAAa,EAClCG,IACC3H,KAAK6F,oBAAoB+B,SAAMF,KAAO,8BAA+B,CACjE1a,OAAQ,iBACX,EAET,CAIAob,cAAcpb,GACVgT,KAAKr0B,WAAWi3C,WAAW,CACvBtzC,KAAM0d,EAAO1d,KACbuT,YAAamK,EAAOnK,cAEpBmd,KAAKne,aAAa1T,QAClB6xB,KAAKoJ,yBAAyBpJ,KAAKne,aAAcme,KAAKr0B,WAAWQ,IAAI,gBAAiB6gB,EAE9F,CAAC6X,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFkyB,IA7xIV1rD,MA6xIwDA,OA7xIxDA,MA6xIyFy5B,OA7xIzFz5B,MA6xIoHi+B,MA7xIpHj+B,MA6xI+Iy5B,OAAsB,EAA4CH,SACxS7E,KAAKyJ,UA9xIkFl+B,MAAE,CAAAm+B,KA8xIJutB,GAA4BttB,UAAA,gCAAAC,SAAA,CA9xI1Br+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,4tBAAA9sB,SAAA,SAAA7R,EAAAC,GA8xIu5G,GA9xIv5G,EAAAD,IAAFG,MAAE,mBAAFA,CA8xImI,oBA9xInIA,MAAE,iBAAFA,MAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAAqyB,GAAA,gBAAFryB,MAAE,WAAFA,MAAE,EAAAuyB,GAAA,yBAAFvyB,yBAAE,WAAFA,CA8xIstC,4BA9xIttCA,CA8xIstC,8BA9xIttCA,MAAE,GAAAwyB,GAAA,kBAAFxyB,MAAE,YAAFA,cAAE,oBAAFA,CA8xIs/C,cA9xIt/CA,CA8xIs/C,WA9xIt/CA,CA8xIs/C,uBA9xIt/CA,MAAE,gBAAFA,MAAE,cAAFA,MAAE,oBAAFA,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,gBAAFA,MAAE,6BAAFA,MAAE,oBAAFA,kBAAE,GAAA0yB,GAAA,mBAAF1yB,MAAE,0CAAFA,aA8xIy5G,EAAAH,EAAA,OAAAk0B,EA9xIz5G/zB,MAAE,GAAFA,MAAE,GAAFA,MAAE,OAAFA,MAAE,KAAAF,EAAAgtB,QAAF9sB,CA8xIkb,WAAA+zB,GA9xIlb/zB,MAAE,GAAFA,MAAE,YAAAF,EAAAM,YAAFJ,MAAE,GAAFA,MAAE,OAAFA,MAAE,MAAAF,EAAA6wB,UAAF3wB,MAAE,GAAFA,MAAE,QAAFA,MAAE,sBAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,8BAAFA,MAAE,GAAFA,MAAE,QAAFA,MAAE,4BAAFA,CA8xI2oE,SA9xI3oEA,MAAE,GAAAoY,GAAFpY,MAAE,sCAAFA,MAAE,GAAFA,MAAE,YAAFA,MAAE,8BAAFA,MAAE,GAAFA,MAAE,OAAAF,EAAAwW,aAAA1T,QAAF5C,MAAE,GAAFA,MAAE,UAAAF,EAAA6wB,QAAF3wB,CA8xIyxG,aAAAF,EAAAM,WAAA,GAAAq+B,aAAA,CAA2OE,KAAsGV,KAAyGA,KAAgRA,KAAwGA,KAA4JA,KAAiJA,IAAgKA,KAAuGxE,MAAgFA,MAAmGA,KAAqGA,MAAiJA,MAAgGA,KAA0HA,MAA8IA,MAAmHA,MAAwMA,MAAmKA,MAAgFA,MAA+GA,MAA+FA,MAAiGA,MAA+FkF,KAAuDC,KAA6DnF,OAAoBqF,gBAAA,IAOzhNkJ;;;;;;;EAQWA;;;;;;;EAQEA;;;;;;;EAhB5C,MAwBM8jB,MAAiCjT,OAAuB,CAC1DC,SAAU,sBACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWsxB,sBACvE/S,EAAgB9/B,SAASuhB,MAAWye,eACxCC,YAAan4C,GAAQA,EAAK+C,KAC1Bq1C,WAAYA,CAAC5kB,EAAauY,IAAQvY,EAC7B4a,OAAO4c,MAA8B,CACtC92B,MAAO6X,EAAIjX,IAAI50B,KAASA,UAEvB6zB,QAAKe,KAAIiV,GAAOA,EAAIkhB,uBACzBzK,gBAAiBjb,GAAYA,EAASxN,SAAWC,MAAekzB,cAE9DC,MAA0CnS,OAAgC,CAC5ElB,SAAU,sBACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWC,gBACvEse,EAAgB9/B,SAASuhB,MAAW2xB,qBACxCjT,YAAan4C,GAAQA,EAAK+C,KAC1Bk2C,oBAAqBA,CAACzlB,EAAa63B,EAAkB9e,IAAc/Y,EAC9D4a,OAAOkd,MAAuC,CAC/Cp3B,MAAO,CACHqY,YACA8e,sBAGHt3B,QAAKe,KAAIiV,GAAOA,EAAIwhB,kCAEvBC,MAA4CnS,OAAkC,CAChFvB,SAAU,sBACVC,mBAAoBC,GAAmBA,EAAgB9/B,SAASuhB,MAAWye,gBACvEF,EAAgB9/B,SAASuhB,MAAWsxB,qBACxC5S,YAAan4C,GAAQA,EAAK+C,KAC1Bu2C,sBAAuBA,CAAC9lB,EAAa63B,EAAkB9e,IAAc/Y,EAChE4a,OAAOqd,MAAyC,CACjDv3B,MAAO,CACHqY,YACA8e,sBAGHt3B,QAAKe,KAAIiV,GAAOA,EAAI2hB,oCAGvBC,GAA0B3kB;;;;;;;;;;;;;;;;EAiBhC,MAAM4kB,WAAmCnS,MACrClmB,cACIgG,QACA9F,KAAKne,aAAeme,KAAKmG,qBAAqB,iBAC9CnG,KAAK3jB,QAAU2jB,KAAKimB,yBACfC,cACAC,iBACA4J,WAAW,CACZ,CACIzgD,KAAM,UACNo6B,KAAM,CAAE0c,KAAM,QACdjV,SAAOzJ,KAAO,kBACd2e,YAAa,QAEjB,CACI/2C,KAAM,MACNo6B,KAAM,CAAE0c,KAAM,QACdjV,SAAOzJ,KAAO,eACd2e,YAAa,iBAGhBG,sBAAsBxmB,KAAKne,cAC3B4kC,eAAezmB,KAAKuF,OACzBvF,KAAK3X,MAAQ2X,KAAK0mB,uBACbuJ,SAAS,CACV,CAAE3gD,KAAM,MACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,QACR,CAAEA,KAAM,iBAEPu3C,oBAAoB7mB,KAAKne,cACzB4kC,eAAezmB,KAAKuF,OACzBvF,KAAK8mB,UAAU,CACXC,SAAU8H,MACV5H,SAAU7mB,GAAQA,EAAK0uB,eACvB5H,aAAcA,CAACpS,EAAMhO,MACjBv3B,QAAS,CACLulC,OACAhO,OACA/F,OAAQ,CACJzxB,KAAM,CACF0lC,SAAUhV,KAAK5W,kBAAkB5c,UAElCwzB,KAAK3jB,QAAQ+qC,qBAEpBrrC,KAAMikB,KAAK3X,MAAMg/B,qBAGzBC,qBAAsB,CAACtnB,KAAK3X,MAAM0iB,aAAc/K,KAAK3jB,QAAQ0uB,eAErE,CAAClG,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFozB,GAA0B,EAAmDtzB,SAC9K7E,KAAKyJ,UA56IkFl+B,MAAE,CAAAm+B,KA46IJyuB,GAA0BxuB,UAAA,8BAAAC,SAAA,CA56IxBr+B,OAAEs+B,MAAA,GAAAC,KAAA,GAAAC,OAAA,2pBAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAAFG,MAAE,mBAAFA,CA46I+H,oBA56I/HA,MAAE,iBAAFA,MAAE,kBAAFA,MAAE,4BAAFA,MAAE,EAAA4yB,GAAA,WAAF5yB,kBAAE,wBAAFA,MAAE,sBAAAoC,GAAA,OA46IugCtC,EAAAod,cAAA9a,EAAqB,EA56I9hCpC,CA46IgiC,8BAAAoC,GAAA,OAA+BtC,EAAAsd,gBAAAhb,EAAuB,GA56ItlCpC,MAAE,WAAFA,MAAE,WAAFA,MAAE,WAAFA,MAAE,YAAFA,MAAE,4BAAFA,CA46IywC,uBA56IzwCA,MAAE,gBAAFA,MAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA6yB,GAAA,mBAAF7yB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAA+yB,GAAA,mBAAF/yB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAizB,GAAA,mBAAFjzB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAmzB,GAAA,mBAAFnzB,cAAE,uBAAFA,MAAE,gBAAFA,MAAE,GAAAqzB,GAAA,mBAAFrzB,cAAE,GAAAuzB,GAAA,qCAAFvzB,SA46IouG,EAAAH,IA56IpuGG,MAAE,GAAFA,MAAE,mBAAFA,MAAE,GAAAyzB,KAAFzzB,MAAE,GAAFA,MAAE,QAAFA,MAAE,KAAAF,EAAAyd,QAAFvd,CA46I20B,eA56I30BA,MAAE,KAAAF,EAAA2d,eAAFzd,CA46I20B,aA56I30BA,MAAE,KAAAF,EAAA4d,aAAF1d,CA46I20B,cA56I30BA,MAAE,MAAAF,EAAA6d,cAAF3d,CA46I20B,UAAAF,EAAAgR,SA56I30B9Q,MAAE,GAAFA,MAAE,gBAAAF,EAAFE,CA46I4sC,mBAAAF,EAAA2P,kBA56I5sCzP,MAAE,GAAFA,MAAE,oBAAAF,EAAA+d,kBAAF7d,CA46Iq1C,wBA56Ir1CA,MAAE,iCAAFA,MAAE,GAAFA,MAAE,UAAFA,MAAE,mBAAFA,CA46Iw+C,qBA56Ix+CA,CA46Iw+C,OAAAF,EAAAgd,MAAAlc,IAAA,OA56Ix+CZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CA46I4vD,qBA56I5vDA,CA46I4vD,OAAAF,EAAAgd,MAAAlc,IAAA,cA56I5vDZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,2BAAFA,CA46ImlE,qBA56InlEA,CA46ImlE,OAAAF,EAAAgd,MAAAlc,IAAA,cA56InlEZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,qBAAFA,CA46Iy5E,cA56Iz5EA,CA46Iy5E,OAAAF,EAAAgd,MAAAlc,IAAA,SA56Iz5EZ,MAAE,GAAFA,MAAE,UAAFA,MAAE,4BAAFA,CA46I+0F,OAAAF,EAAAgd,MAAAlc,IAAA,gBA56I/0FZ,MAAE,GAAFA,MAAE,UAAAF,EAAAwW,cA46IsoG,EAAAmoB,aAAA,CAA6MC,MAAwEC,KAA+HX,KAA2OvE,MAAgFA,MAAmGA,KAAqGA,MAA8IA,MAAmHA,MAAwJA,MAAqPA,MAAsMA,MAA+IA,MAAmKA,MAA2EkF,KAAuDC,KAA6DnF,OAAiBoF,OAAA,2CAAAC,gBAAA,IAOz9K,MAAM+tB,GACFt4B,cACIE,KAAKq4B,mBAAoB,EACzBr4B,KAAKs4B,kBAAmB,CAC5B,CACAlyB,WACI,MAAM4C,EAAqBhJ,KAAKu4B,cAAch2B,aAAaV,KAAKkD,GAAKA,EAAErE,eAAiBV,KAAKw4B,gBAI7F,GAHAx4B,KAAK1wB,KAAO05B,GAAoB15B,MAAQ,GACxC0wB,KAAKxxB,KAAOwxB,KAAKu4B,cAAc/pD,KAC/BwxB,KAAKb,iBAAmB,IAAIsH,KAAiB,CAAC,GAC1CzG,KAAKne,aAAc,CACnB,MAAM42C,EAAwBzvB,GAAsBA,EAAmBnnB,cAAiB,CAAC,EACzF,UAAWqpC,KAAYlrB,KAAKne,aAAc,CACtC,MAAM4rB,EAAMyd,EAAS57C,KACf9C,EAA0B,iBAAlB0+C,EAASxhB,KACjB+uB,EAAqBhrB,GACrBzN,KAAKu4B,cAAc12C,aAAa4rB,GACtCzN,KAAKb,iBAAiByJ,WAAWsiB,EAAS57C,KAAM,IAAIsoC,KAAmBprC,GAC3E,CACJ,CACJ,CACA6yB,SACI,MAAMiF,KAASwD,OAA0B,CACrCC,aAAc/H,KAAKu4B,cACnB73B,aAAcV,KAAKw4B,eACnBxwB,cAAe,CACXx5B,KAAMwxB,KAAKxxB,KACXc,KAAM0wB,KAAK1wB,KACXuS,aAAcme,KAAKb,iBAAiB3yB,OAExCy7B,kBAAmBjI,KAAKne,aACxBqmB,mBAAoB,CAChBxH,aAAcV,KAAKw4B,eACnBlpD,KAAM,MAGd0wB,KAAKlb,YAAY,IAAKwf,EAAQxB,WAAY9C,KAAKq4B,mBACnD,CACAtpD,SACIixB,KAAKlb,aACT,CACA2lB,WAAWiX,IACF1hB,KAAKs4B,mBAAqBt4B,KAAKu4B,cAAc/pD,OAC9CwxB,KAAKxxB,QAAO8zB,KAAgBof,EAAW,KAE/C,CAAC7c,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwFqzB,GAAkC,EAAmDvzB,SACtL7E,KAAKyJ,UAl+IkFl+B,MAAE,CAAAm+B,KAk+IJ0uB,GAAkCzuB,UAAA,uCAAAE,MAAA,GAAAC,KAAA,GAAAC,OAAA,8jBAAA9sB,SAAA,SAAA7R,EAAAC,GAAA,EAAAD,IAl+IhCG,MAAE,EAAA0zB,GAAA,qBAAF1zB,MAAE,sBAAFA,MAAE,eAAFA,MAAE,eAAFA,MAAE,yBAAAoC,GAAA,OAAAtC,EAAAiE,KAAA3B,CAAA,EAAFpC,CAk+ImZ,iBAAAoC,GAAA,OAA0CtC,EAAAo/B,WAAA98B,EAAAsf,OAAAzgB,MAA+B,GAl+I5djB,gBAAE,sBAAFA,MAAE,eAAFA,MAAE,eAAFA,MAAE,yBAAAoC,GAAA,OAAAtC,EAAAmD,KAAAb,CAAA,GAAFpC,gBAAE,yBAAFA,CAk+I2uB,cAl+I3uBA,MAAE,yBAAAoC,GAAA,OAAAtC,EAAAgtD,kBAAA1qD,CAAA,GAAFpC,cAAE,YAAFA,MAAE,IAAFA,MAAE,gBAAFA,gBAAE,GAAA2zB,GAAA,iBAAF3zB,MAAE,GAAA6zB,GAAA,sBAk+Ig3D,EAAAh0B,IAl+Il3DG,MAAE,GAAFA,MAAE,QAAFA,MAAE,4BAAFA,MAAE,GAAFA,MAAE,UAAAF,EAAAiE,MAAF/D,MAAE,GAAFA,MAAE,QAAFA,MAAE,oBAAFA,MAAE,GAAFA,MAAE,UAAAF,EAAAmD,MAAFjD,MAAE,GAAFA,MAAE,UAAAF,EAAAgtD,mBAAF9sD,MAAE,GAAFA,YAAE,kDAAFA,MAAE,GAAFA,MAAE,OAAAF,EAAAwW,aAAA1T,QAk+I+8B,EAAA67B,aAAA,CAAg+BC,MAA8EA,MAAoFA,MAAyGC,KAAsGV,KAAgRA,KAAiLA,KAAwGA,KAA6NA,KAAyJA,KAAwNxE,MAAiJA,MAAgGA,MAAwFA,MAAoFA,MAAmMmF,KAA6DnF,OAAoBqF,gBAAA,IA0C9qI,MAAMquB,GACF54B,YAAY64B,EAA2BvmB,GACnCpS,KAAK24B,0BAA4BA,EACjC34B,KAAKoS,YAAcA,EACnBumB,EAA0BC,mBAAmB5G,IAC7C2G,EAA0BC,mBAAmB/G,IAC7C8G,EAA0BC,mBAAmBzC,IAC7CwC,EAA0BC,mBAAmB7G,IAC7C4G,EAA0BC,mBAAmBxC,IAC7CuC,EAA0BC,mBAAmBlH,IAC7CiH,EAA0BC,mBAAmBtC,IAC7CqC,EAA0BC,mBAAmB1L,IAC7CyL,EAA0BC,mBAAmBvL,IAC7CsL,EAA0BC,mBAAmB/L,IAC7C8L,EAA0BC,mBAAmB/T,IAC7C8T,EAA0BC,mBAAmBtT,IAC7CqT,EAA0BC,mBAAmBjT,IAC7CgT,EAA0BC,mBAAmBzU,IAC7CwU,EAA0BC,mBAAmBlB,IAC7CiB,EAA0BC,mBAAmBb,IAC7CY,EAA0BC,mBAAmBvB,IAC7CjlB,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,eACV0U,OAAKrxB,KAAO,oBACZnC,MAAO,GACP8M,UAAW4f,KAEf7f,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,iBACV0U,OAAKrxB,KAAO,mBACZnC,MAAO,GACP8M,aAAW2mB,OAA4B,CACnC3mB,UAAWge,EACXlW,MAAO8e,MACPC,UAAW,UACXC,eAAgBnsC,GAAU,CACtB,CACImkB,MAAOnkB,EAASA,EAAO1d,QAAOo4B,KAAO,8BACrCgL,KAAM,CAAC1lB,GAAQvgB,UAK/B2lC,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,eACV0U,OAAKrxB,KAAO,4BACZnC,MAAO,WACP8M,UAAWwd,IAEfzd,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,wBACV0U,OAAKrxB,KAAO,0BACZnC,MAAO,GACP8M,aAAW2mB,OAA4B,CACnC3mB,UAAW4kB,GACX9c,MAAOif,KACPF,UAAW,gBACXC,eAAgBnsC,GAAU,CACtB,CACImkB,MAAOnkB,EAASA,EAAO1d,QAAOo4B,KAAO,qCACrCgL,KAAM,CAAC1lB,GAAQvgB,UAK/B2lC,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,eACV0U,OAAKrxB,KAAO,2BACZnC,MAAO,kBACP8M,UAAW8lB,KAEf/lB,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,yBACV0U,OAAKrxB,KAAO,4BACZnC,MAAO,GACP8M,aAAW2mB,OAA4B,CACnC3mB,UAAWqiB,GACXva,MAAOkf,MACPH,UAAW,iBACXC,eAAgBnsC,GAAU,CACtB,CACImkB,MAAQ,GAAEnkB,GAAQhd,QAAQV,OAC1BojC,KAAM,CAAC,WAAY,YAAa1lB,GAAQhd,QAAQvD,KAEpD,CACI0kC,MAAQ,GAAEnkB,GAAQ1d,SAAS0d,GAAQpd,OACnC8iC,KAAM,CAAC,WAAY1lB,GAAQvgB,UAK3C2lC,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,aACV0U,OAAKrxB,KAAO,kBACZnC,MAAO,GACP8M,UAAWic,KAEflc,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,eACV0U,OAAKrxB,KAAO,iBACZnC,MAAO,GACP8M,aAAW2mB,OAA4B,CACnC3mB,UAAWqY,GACXvQ,MAAO0R,MACPqN,UAAW,QACXC,eAAgBnsC,GAAU,CACtB,CACImkB,MAAOnkB,EAASA,EAAO1d,QAAOo4B,KAAO,4BACrCgL,KAAM,CAAC1lB,GAAQvgB,UAK/B2lC,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,kBACV0U,OAAKrxB,KAAO,uBACZnC,MAAO,GACP8M,UAAW0T,KAEf3T,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,oBACV0U,OAAKrxB,KAAO,sBACZnC,MAAO,GACP8M,aAAW2mB,OAA4B,CACnC3mB,UAAW+N,GACXjG,MAAOmf,MACPJ,UAAW,aACXC,eAAgBnsC,GAAU,CACtB,CACImkB,MAAOnkB,EAASA,EAAO1d,QAAOo4B,KAAO,iCACrCgL,KAAM,CAAC1lB,GAAQvgB,UAK/B2lC,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,aACV0U,OAAKrxB,KAAO,kBACZnC,MAAO,GACP8M,UAAW+B,KAEfhC,EAAYymB,gBAAgB,CACxBC,SAAU,EACVzU,SAAU,eACV0U,OAAKrxB,KAAO,iBACZnC,MAAO,GACP8M,aAAW2mB,OAA4B,CACnC3mB,UAAWqB,GACXyG,MAAOof,MACPL,UAAW,QACXC,eAAgBnsC,GAAU,CACtB,CACImkB,MAAQ,GAAEnkB,GAAQ1d,OAClBojC,KAAM,CAAC1lB,GAAQvgB,SAKnC,CAACo4B,SACQ7E,KAAK8E,UAAI,SAAAC,GAAA,WAAAA,GAAwF2zB,IAtrJVntD,MAsrJyCy5B,OAtrJzCz5B,MAsrJkFy5B,OAAc,EAA2CH,SAClO7E,KAAKw5B,UAvrJkFjuD,MAAE,CAAAm+B,KAurJSgvB,KAgErE7zB,SAC7B7E,KAAKy5B,UAxvJkFluD,MAAE,CAAAmuD,UAwvJmC,CAC7H,CACIhuB,QAASiuB,KACTC,WAAaxnB,GAAgBD,GAAaC,GAC1CrG,OAAO,EACP8tB,KAAM,CAACC,SAEdC,QAAA,CAAYC,MAAcC,KAAaC,SAAS,OAmBzD,MAAMC,GAAsC5mB;;;;;;;;;;;;;;;;;;;;;;;EAwBtC6mB,GAAqB7mB;;;;;;;;;MASrB4mB;EAGAE,GAAwD9mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuFxD+mB,GAA+B/mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8B/B8mB;EAEAE,GAAkChnB;;;;;;MAMlC8mB;EAGAG,GAAsDjnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmCtDC;EAEAinB,GAA6BlnB;;;;;;;;;MAS7BinB","names":["switchMapTo","innerObservable","resultSelector","isFunction","switchMap","ProductOptionsEditorComponent_button_20_Template","rf","ctx","_r3","i0","ctx_r2","save","ctx_r0","detailForm","pristine","invalid","ProductOptionsEditorComponent_form_22_vdr_card_2_ng_container_11_Template","optionGroup_r6","$implicit","ctx_r8","optionGroupCustomFields","get","updatePermission","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_3_Template","optionControl_r18","item","value","id","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_6_Template","optionControl_r19","createdAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_9_Template","optionControl_r20","updatedAt","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_12_Template","optionControl_r21","ctx_r15","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_15_Template","optionControl_r22","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_ng_template_18_Template","optionControl_r23","ctx_r17","optionCustomFields","ProductOptionsEditorComponent_form_22_vdr_card_2_vdr_data_table_2_12_Template","_r25","$event","ctx_r24","paginationSettings","currentPage","options_r11","ngIf","ctx_r9","itemsPerPage","length","ProductOptionsEditorComponent_form_22_vdr_card_2_Template","i_r7","index","ctx_r5","code","getOptions","ProductOptionsEditorComponent_form_22_Template","ctx_r1","getOptionGroups","CreateProductOptionGroupDialogComponent_ng_template_0_Template","CreateProductOptionGroupDialogComponent_ng_template_8_Template","cancel","ctx_r4","confirm","form","CreateProductVariantDialogComponent_ng_template_0_Template","CreateProductVariantDialogComponent_vdr_form_field_3_Template","optionGroup_r5","name","options","CreateProductVariantDialogComponent_clr_alert_4_Template","CreateProductVariantDialogComponent_div_5_Template","ctx_r3","existingVariant","sku","CreateProductVariantDialogComponent_ng_template_16_Template","_r7","ctx_r6","product","optionGroups","_c0","_c1","OptionValueInputComponent_div_1_vdr_chip_1_Template","_r8","option_r3","ctx_r7","removeOption","i_r5","updateOption","cancelBubble","ctx_r11","editName","isLast_r4","last","lastSelected","locked","groupName","editingIndex","OptionValueInputComponent_div_1_Template","optionValues","ProductVariantsEditorComponent_div_2_Template","_r14","group_r10","i_r11","addOption","ctx_r16","removeOptionGroup","isNew","values","ProductVariantsEditorComponent_ng_template_20_Template","variant_r18","ProductVariantsEditorComponent_ng_template_23_Template","variant_r19","ProductVariantsEditorComponent_ng_template_26_Template","variant_r20","ProductVariantsEditorComponent_ng_template_29_Template","variant_r21","ProductVariantsEditorComponent_ng_template_32_Template","variant_r22","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_vdr_chip_0_Template","option_r29","optionGroup_r23","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_ng_template_1_Template","_r33","variant_r25","ctx_r31","setOptionToAddToVariant","ctx_r35","addOptionToVariant","ctx_r28","optionsToAddToVariant","ProductVariantsEditorComponent_vdr_dt2_column_33_ng_template_1_Template","_r27","getOption","ProductVariantsEditorComponent_vdr_dt2_column_33_Template","ProductVariantsEditorComponent_ng_template_37_Template","variant_r40","price","currencyCode","ProductVariantsEditorComponent_ng_template_40_Template","variant_r41","priceWithTax","ProductVariantsEditorComponent_ng_template_43_Template","_r44","variant_r42","ctx_r43","deleteVariant","ApplyFacetDialogComponent_ng_template_0_Template","ApplyFacetDialogComponent_ng_template_2_Template","selectValues","selectedValues","AssetDetailComponent_button_5_Template","_r2","_c2","_c3","_c4","AssetsComponent_div_0_img_2_Template","_r10","previewAsset","featuredAsset","AssetsComponent_div_0_div_3_Template","_r12","selectAssets","AssetsComponent_div_0_ng_container_5_Template","AssetsComponent_div_0_div_6_Template","ctx_r13","AssetsComponent_div_0_Template","updatePermissions","AssetsComponent_ng_template_1_img_1_Template","_r20","ctx_r19","AssetsComponent_ng_template_1_div_2_Template","_r22","ctx_r21","AssetsComponent_ng_template_1_ng_container_3_Template","AssetsComponent_ng_template_1_button_4_Template","_r24","ctx_r23","AssetsComponent_ng_template_1_Template","AssetsComponent_ng_template_3_div_1_Template","_r29","dropListDropped","asset_r26","ctx_r30","setAsFeatured","ctx_r32","removeAsset","index_r27","ctx_r25","isFeatured","AssetsComponent_ng_template_3_Template","compact","assets","AssignProductsToChannelDialogComponent_ng_template_0_ng_container_0_Template","AssignProductsToChannelDialogComponent_ng_template_0_ng_template_1_Template","AssignProductsToChannelDialogComponent_ng_template_0_Template","isProductVariantMode","_c5","a0","channel","AssignProductsToChannelDialogComponent_ng_template_29_Template","selectedChannel","AssignProductsToChannelDialogComponent_ng_template_30_Template","AssignProductsToChannelDialogComponent_tr_33_ng_template_7_Template","row_r9","ctx_r10","pricePreview","defaultCurrencyCode","AssignProductsToChannelDialogComponent_tr_33_ng_template_8_Template","AssignProductsToChannelDialogComponent_tr_33_Template","_r11","currentChannel","_c6","channelCode","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_4_Template","ctx_r14","AssignProductsToChannelDialogComponent_ng_template_35_ng_template_5_Template","AssignProductsToChannelDialogComponent_ng_template_35_Template","_r18","assign","_r15","BulkAddFacetValuesDialogComponent_ng_template_0_Template","BulkAddFacetValuesDialogComponent_table_7_tr_2_div_4_Template","item_r6","BulkAddFacetValuesDialogComponent_table_7_tr_2_vdr_facet_value_chip_6_Template","_r13","facetValue_r10","removeFacetValue","BulkAddFacetValuesDialogComponent_table_7_tr_2_Template","facetValues","BulkAddFacetValuesDialogComponent_table_7_Template","items","BulkAddFacetValuesDialogComponent_ng_template_8_Template","BulkAddFacetValuesDialogComponent_ng_template_10_Template","addFacetValues","facetValuesRemoved","CollectionContentsComponent_ng_container_3_Template","CollectionContentsComponent_ng_template_14_Template","variant_r6","CollectionContentsComponent_ng_template_17_Template","variant_r7","CollectionContentsComponent_ng_template_20_Template","variant_r8","_c7","a1","CollectionContentsComponent_ng_template_23_Template","variant_r9","productId","CollectionContentsComponent_ng_template_26_Template","variant_r10","_c8","_c9","CollectionDataTableComponent_th_6_Template","onToggleAllClick","selectionManager","areAllCurrentItemsSelected","CollectionDataTableComponent_th_7_div_4_clr_icon_2_Template","CollectionDataTableComponent_th_7_div_4_clr_icon_3_Template","CollectionDataTableComponent_th_7_div_4_clr_icon_4_Template","CollectionDataTableComponent_th_7_div_4_div_5_Template","sort_r15","sortOrder","CollectionDataTableComponent_th_7_div_4_Template","toggleSortOrder","CollectionDataTableComponent_th_7_Template","column_r12","expand","align","heading","sort","CollectionDataTableComponent_tr_12_ng_container_6_Template","CollectionDataTableComponent_tr_12_ng_container_7_Template","CollectionDataTableComponent_tr_12_ng_container_8_vdr_data_table_filters_2_Template","activeFilter_r28","ctx_r26","filters","CollectionDataTableComponent_tr_12_ng_container_8_vdr_data_table_filters_3_Template","ctx_r27","CollectionDataTableComponent_tr_12_ng_container_8_Template","activeFilters","CollectionDataTableComponent_tr_12_Template","_r30","ctx_r29","toggleSearchFilterRow","showSearchFilterRow","visibleSortedColumns","searchComponent","template","customSearchTemplate","_c10","i","depth","CollectionDataTableComponent_ng_container_14_Template","item_r31","i_r32","CollectionDataTableComponent_tr_17_Template","emptyStateLabel","CollectionDataTableComponent_vdr_items_per_page_controls_19_Template","_r34","ctx_r33","itemsPerPageChange","emit","_c11","a2","currentStart","currentEnd","totalItems","CollectionDataTableComponent_div_20_Template","CollectionDataTableComponent_vdr_pagination_controls_21_Template","_r36","pageChange","CollectionDataTableComponent_ng_template_22_td_2_Template","_r45","item_r37","onRowClick","ctx_r40","activeIndex","absoluteIndex","isSelected","CollectionDataTableComponent_ng_template_22_td_3_ng_container_2_Template","_c12","CollectionDataTableComponent_ng_template_22_td_3_Template","column_r47","ctx_r49","depth_r38","ctx_r41","CollectionDataTableComponent_ng_template_22_ng_container_5_ng_container_1_Template","CollectionDataTableComponent_ng_template_22_ng_container_5_Template","subCollection_r50","_c13","collection","CollectionDataTableComponent_ng_template_22_Template","getSubcollections","_c14","_c15","a3","_c16","_c17","CollectionDetailComponent_button_9_Template","_r17","create","CollectionDetailComponent_ng_template_11_button_0_Template","ctx_r18","assetsChanged","CollectionDetailComponent_ng_template_11_Template","CollectionDetailComponent_ng_container_23_Template","CollectionDetailComponent_ng_template_24_Template","CollectionDetailComponent_vdr_card_26_Template","entity_r21","_c18","CollectionDetailComponent_vdr_page_block_28_li_3_a_1_Template","_c19","CollectionDetailComponent_vdr_page_block_28_li_3_a_2_Template","breadcrumb_r24","CollectionDetailComponent_vdr_page_block_28_li_3_ng_container_3_Template","CollectionDetailComponent_vdr_page_block_28_li_3_Template","isFirst_r25","first","isLast_r26","CollectionDetailComponent_vdr_page_block_28_Template","entity_r22","breadcrumbs","CollectionDetailComponent_vdr_card_46_Template","customFields","CollectionDetailComponent_ng_container_59_Template","CollectionDetailComponent_ng_template_60_Template","CollectionDetailComponent_ng_container_63_Template","_r35","i_r33","ctx_r34","removeFilter","filter_r32","ctx_r12","getFilterDefinition","CollectionDetailComponent_div_64_button_9_Template","_r39","filter_r37","ctx_r38","addFilter","description","CollectionDetailComponent_div_64_Template","allFilters","_c20","count","_c21","standalone","CollectionDetailComponent_ng_template_72_Template","_r42","toggleLivePreview","count_r40","tmp_1_0","tmp_3_0","livePreview","_c22","pattern","MoveCollectionsDialogComponent_ng_template_0_Template","MoveCollectionsDialogComponent_ng_template_11_Template","collection_r5","MoveCollectionsDialogComponent_ng_template_14_clr_icon_1_Template","depth_r7","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_1_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_clr_icon_2_Template","MoveCollectionsDialogComponent_ng_template_14_button_2_Template","_r16","collection_r6","toggleExpanded","expandedIds","includes","MoveCollectionsDialogComponent_ng_template_14_button_3_Template","_c23","MoveCollectionsDialogComponent_ng_template_14_Template","_r19","resolveWith","children","parentId","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_div_1_Template","item_r26","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_ng_container_1_Template","breadcrumbs_r22","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_span_2_Template","MoveCollectionsDialogComponent_ng_template_17_ng_container_1_Template","MoveCollectionsDialogComponent_ng_template_17_Template","collection_r20","MoveCollectionsDialogComponent_ng_template_20_Template","collection_r28","slug","_c24","CollectionListComponent_a_8_Template","CollectionListComponent_ng_template_11_ng_template_12_Template","collection_r13","CollectionListComponent_ng_template_11_ng_template_15_Template","collection_r14","CollectionListComponent_ng_template_11_ng_template_18_Template","collection_r15","CollectionListComponent_ng_template_11_ng_template_21_Template","collection_r16","position","CollectionListComponent_ng_template_11_ng_template_24_clr_icon_1_Template","depth_r18","CollectionListComponent_ng_template_11_ng_template_24_button_2_clr_icon_1_Template","CollectionListComponent_ng_template_11_ng_template_24_button_2_clr_icon_2_Template","CollectionListComponent_ng_template_11_ng_template_24_button_2_Template","_r26","collection_r17","ctx_r20","_c25","CollectionListComponent_ng_template_11_ng_template_24_Template","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_ng_container_1_div_1_Template","item_r34","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_ng_container_1_Template","breadcrumbs_r30","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_span_2_Template","CollectionListComponent_ng_template_11_ng_template_27_ng_container_1_Template","CollectionListComponent_ng_template_11_ng_template_27_Template","CollectionListComponent_ng_template_11_ng_template_30_Template","collection_r36","CollectionListComponent_ng_template_11_ng_template_33_vdr_chip_0_Template","CollectionListComponent_ng_template_11_ng_template_33_vdr_chip_1_Template","CollectionListComponent_ng_template_11_ng_template_33_Template","collection_r37","isPrivate","_c26","contents","CollectionListComponent_ng_template_11_ng_template_36_Template","collection_r40","CollectionListComponent_ng_template_11_vdr_dt2_custom_field_column_37_Template","customField_r41","sorts","CollectionListComponent_ng_template_11_Template","_r43","ctx_r42","setPageNumber","ctx_r44","setItemsPerPage","ctx_r45","onRearrange","items$","subCollections$","itemsPerPage$","totalItems$","currentPage$","activeCollectionIndex$","searchTermControl","CollectionListComponent_ng_template_12_ng_container_0_Template","ctx_r46","activeCollectionId$","CollectionListComponent_ng_template_12_Template","_c27","CollectionTreeNodeComponent_div_3_button_5_clr_icon_1_Template","CollectionTreeNodeComponent_div_3_button_5_clr_icon_2_Template","CollectionTreeNodeComponent_div_3_button_5_Template","collection_r2","expandAll","expanded","CollectionTreeNodeComponent_div_3_ng_template_6_Template","CollectionTreeNodeComponent_div_3_vdr_chip_10_Template","CollectionTreeNodeComponent_div_3_div_19_Template","_c29","_c30","CollectionTreeNodeComponent_div_3_a_24_Template","CollectionTreeNodeComponent_div_3_button_39_Template","item_r19","move","hasUpdatePermission$","path","CollectionTreeNodeComponent_div_3_vdr_collection_tree_node_46_Template","activeCollectionId","_c31","_c32","CollectionTreeNodeComponent_div_3_Template","toggleSelection","getMoveListItems","restoredCtx","i_r3","moveUp","moveDown","delete","_r5","collectionTree","moveListItems","hasDeletePermission$","CollectionTreeComponent_vdr_collection_tree_node_0_Template","ConfirmVariantDeletionDialogComponent_ng_template_0_Template","ConfirmVariantDeletionDialogComponent_li_4_Template","variant_r3","ConfirmVariantDeletionDialogComponent_ng_template_5_Template","FacetDetailComponent_button_9_Template","FacetDetailComponent_ng_template_11_button_0_Template","FacetDetailComponent_ng_template_11_Template","FacetDetailComponent_ng_container_23_Template","FacetDetailComponent_ng_template_24_Template","FacetDetailComponent_vdr_page_entity_info_27_Template","entity_r14","FacetDetailComponent_vdr_card_40_Template","FacetDetailComponent_vdr_card_42_table_2_ng_container_10_Template","_c33","FacetDetailComponent_vdr_card_42_table_2_tr_13_td_8_Template","i_r20","customValueFields","_c34","FacetDetailComponent_vdr_card_42_table_2_tr_13_Template","updateValueCode","entity","target","deleteFacetValue","value_r19","FacetDetailComponent_vdr_card_42_table_2_Template","FacetDetailComponent_vdr_card_42_button_4_Template","addFacetValue","_c35","FacetDetailComponent_vdr_card_42_Template","getValuesFormArray","FacetListComponent_a_8_Template","FacetListComponent_ng_template_19_Template","facet_r9","FacetListComponent_ng_template_22_Template","facet_r10","FacetListComponent_ng_template_25_Template","facet_r11","FacetListComponent_ng_template_28_Template","facet_r12","FacetListComponent_ng_template_31_Template","facet_r13","FacetListComponent_ng_template_34_vdr_chip_0_Template","FacetListComponent_ng_template_34_vdr_chip_1_Template","FacetListComponent_ng_template_34_Template","facet_r14","FacetListComponent_ng_template_37_vdr_facet_value_chip_1_Template","value_r20","FacetListComponent_ng_template_37_button_3_ng_container_1_Template","facet_r17","initialLimit","FacetListComponent_ng_template_37_button_3_ng_template_2_Template","FacetListComponent_ng_template_37_button_3_Template","toggleDisplayLimit","displayLimit","FacetListComponent_ng_template_37_Template","FacetListComponent_vdr_dt2_custom_field_column_38_Template","customField_r29","_c36","GenerateProductVariantsComponent_div_0_Template","_r6","group_r2","_r4","handleEnter","generateVariants","GenerateProductVariantsComponent_ng_container_5_clr_alert_1_Template","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_option_3_Template","location_r17","GenerateProductVariantsComponent_ng_container_5_vdr_form_field_3_Template","selectedStockLocationId","stockLocations_r12","GenerateProductVariantsComponent_ng_container_5_div_4_th_4_Template","GenerateProductVariantsComponent_ng_container_5_div_4_th_5_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_1_Template","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_td_2_Template","variant_r24","join","GenerateProductVariantsComponent_ng_container_5_div_4_tr_15_Template","variantFormValues","enabled","variants","GenerateProductVariantsComponent_ng_container_5_div_4_Template","trackByFn","GenerateProductVariantsComponent_ng_container_5_Template","ProductVariantListComponent_vdr_page_block_0_Template","setLanguage","availableLanguages$","contentLanguage$","ProductVariantListComponent_ng_template_11_Template","variant_r14","ProductVariantListComponent_ng_template_14_Template","variant_r15","ProductVariantListComponent_ng_template_17_Template","variant_r16","ProductVariantListComponent_ng_template_20_img_1_Template","asset_r21","ProductVariantListComponent_ng_template_20_ng_template_2_Template","ProductVariantListComponent_ng_template_20_Template","variant_r17","_c37","ProductVariantListComponent_ng_template_23_Template","ProductVariantListComponent_ng_template_26_Template","variant_r23","ProductVariantListComponent_ng_template_29_vdr_chip_0_Template","ProductVariantListComponent_ng_template_29_vdr_chip_1_Template","ProductVariantListComponent_ng_template_29_Template","ProductVariantListComponent_ng_template_32_Template","variant_r27","ProductVariantListComponent_ng_template_35_Template","variant_r28","ProductVariantListComponent_ng_template_38_vdr_chip_0_span_4_Template","stockLevel_r31","stockAllocated","ProductVariantListComponent_ng_template_38_vdr_chip_0_Template","stockLocation","stockOnHand","ProductVariantListComponent_ng_template_38_Template","variant_r29","stockLevels","ProductVariantListComponent_vdr_dt2_custom_field_column_39_Template","field_r34","ProductDetailComponent_button_10_Template","createVariantsConfig","ProductDetailComponent_ng_template_12_button_0_Template","ProductDetailComponent_ng_template_12_Template","_c38","ProductDetailComponent_clr_toggle_wrapper_20_Template","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_ng_container_3_vdr_chip_1_Template","channel_r23","removeFromChannel","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_ng_container_3_Template","ctx_r22","isDefaultChannel","ProductDetailComponent_ng_container_21_vdr_card_1_vdr_form_item_2_Template","assignToChannel","productChannels$","ProductDetailComponent_ng_container_21_vdr_card_1_Template","ProductDetailComponent_ng_container_21_Template","ProductDetailComponent_vdr_card_23_vdr_chip_3_Template","optionGroup_r33","_c39","ProductDetailComponent_vdr_card_23_a_6_Template","ProductDetailComponent_vdr_card_23_Template","ProductDetailComponent_vdr_facet_value_chip_27_Template","facetValue_r34","removeProductFacetValue","ProductDetailComponent_button_30_Template","_r38","ctx_r37","selectProductFacetValue","ProductDetailComponent_vdr_card_31_Template","entity_r39","ProductDetailComponent_div_42_Template","ProductDetailComponent_vdr_card_54_Template","ProductDetailComponent_div_62_Template","_r41","ProductDetailComponent_ng_template_64_Template","_c40","ProductDetailComponent_div_66_Template","_c41","ProductListComponent_a_8_Template","ProductListComponent_ng_template_27_Template","product_r10","ProductListComponent_ng_template_30_Template","product_r11","ProductListComponent_ng_template_33_Template","product_r12","ProductListComponent_ng_template_36_img_1_Template","asset_r17","ProductListComponent_ng_template_36_ng_template_2_Template","ProductListComponent_ng_template_36_Template","product_r13","ProductListComponent_ng_template_39_Template","product_r18","ProductListComponent_ng_template_42_Template","product_r19","ProductListComponent_ng_template_45_vdr_chip_0_Template","ProductListComponent_ng_template_45_vdr_chip_1_Template","ProductListComponent_ng_template_45_Template","product_r20","ProductListComponent_ng_template_48_Template","product_r23","variantList","ProductListComponent_vdr_dt2_custom_field_column_49_Template","customField_r24","_c42","_c44","rate","VariantPriceDetailComponent_div_3_Template","taxRate$","_c45","VariantPriceDetailComponent_div_4_Template","grossPrice$","ProductVariantQuickJumpComponent_ng_select_0_ng_template_3_Template","item_r2","ProductVariantQuickJumpComponent_ng_select_0_Template","selectedVariantId","onSelect","variants$","searchFn","ProductVariantDetailComponent_ng_container_4_vdr_language_selector_1_Template","availableLanguages_r3","isNew$","languageCode$","ProductVariantDetailComponent_ng_container_4_Template","ProductVariantDetailComponent_button_9_Template","_r9","stockLevelsForm","pricesForm","ProductVariantDetailComponent_form_10_clr_toggle_wrapper_6_Template","ProductVariantDetailComponent_form_10_vdr_card_7_vdr_chip_3_Template","option_r24","optionGroupCode","groupId","optionName","_c46","ProductVariantDetailComponent_form_10_vdr_card_7_a_6_Template","ProductVariantDetailComponent_form_10_vdr_card_7_Template","ProductVariantDetailComponent_form_10_vdr_facet_value_chip_11_Template","_r28","facetValue_r26","ProductVariantDetailComponent_form_10_button_14_Template","selectFacetValue","ProductVariantDetailComponent_form_10_vdr_page_entity_info_16_Template","entity_r31","ProductVariantDetailComponent_form_10_vdr_card_30_Template","ProductVariantDetailComponent_form_10_option_41_Template","taxCategory_r32","ProductVariantDetailComponent_form_10_div_43_div_7_Template","_r37","price_r33","toggleDeletePrice","channelDefaultCurrencyCode","ProductVariantDetailComponent_form_10_div_43_Template","undefined","controls","channelPriceIncludesTax$","ProductVariantDetailComponent_form_10_ng_container_44_div_1_button_8_Template","currencyCode_r42","addPriceInCurrency","ProductVariantDetailComponent_form_10_ng_container_44_div_1_Template","unusedCurrencyCodes_r39","ProductVariantDetailComponent_form_10_ng_container_44_Template","ProductVariantDetailComponent_form_10_div_74_Template","stockLevel_r46","tmp_2_0","tmp_5_0","tmp_6_0","ProductVariantDetailComponent_form_10_ng_container_75_div_1_button_8_Template","_r52","stockLocation_r50","ctx_r51","addStockLocation","ProductVariantDetailComponent_form_10_ng_container_75_div_1_Template","unusedStockLocations_r47","ProductVariantDetailComponent_form_10_ng_container_75_Template","_c47","ProductVariantDetailComponent_form_10_Template","_r55","ctx_r54","assetChanges","tmp_37_0","facetValues$","entity$","taxCategories$","unusedCurrencyCodes$","GlobalFlag","TRUE","FALSE","INHERIT","inventoryIsNotTracked","globalOutOfStockThreshold","unusedStockLocation$","ProductVariantsTableComponent_ng_container_10_Template","optionGroup_r2","ProductVariantsTableComponent_tr_22_ng_container_1_img_4_Template","featuredAsset_r13","ProductVariantsTableComponent_tr_22_ng_container_1_ng_template_5_Template","ProductVariantsTableComponent_tr_22_ng_container_1_ng_container_17_Template","option_r14","formGroup_r6","optionGroupName","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_21_Template","ProductVariantsTableComponent_tr_22_ng_container_1_vdr_currency_input_22_Template","ProductVariantsTableComponent_tr_22_ng_container_1_Template","getFeaturedAsset","channelPriceIncludesTax","ProductVariantsTableComponent_tr_22_Template","formGroupMap","StockLocationDetailComponent_button_5_Template","StockLocationDetailComponent_ng_template_7_button_0_Template","StockLocationDetailComponent_ng_template_7_Template","StockLocationDetailComponent_vdr_card_12_Template","entity_r10","StockLocationDetailComponent_vdr_card_26_Template","_c48","StockLocationListComponent_a_5_Template","StockLocationListComponent_ng_template_16_Template","stockLocation_r7","StockLocationListComponent_ng_template_19_Template","stockLocation_r8","StockLocationListComponent_ng_template_22_Template","stockLocation_r9","StockLocationListComponent_ng_template_25_Template","stockLocation_r10","StockLocationListComponent_ng_template_28_Template","stockLocation_r11","StockLocationListComponent_vdr_dt2_custom_field_column_29_Template","field_r12","_c49","UpdateProductOptionDialogComponent_ng_template_0_Template","UpdateProductOptionDialogComponent_section_14_Template","customFieldsForm","UpdateProductOptionDialogComponent_ng_template_15_Template","update","_r1","replaceLast","search","replace","lastIndex","lastIndexOf","substr","ProductDetailService","constructor","dataService","this","getTaxCategories","settings","mapSingle","data","taxCategories","pipe","shareReplay","createProductWithVariants","input","languageCode","createProduct$","createProduct","nonEmptyOptionGroups","groups","filter","g","createOptionGroups$","createProductOptionGroups","forkJoin","mergeMap","map","optionGroup","addOptionGroupToProduct","optionGroupId","of","v","optionIds","option","find","o","Error","og","reduce","flat","createProductVariants","stockLocationId","c","normalizeString","translations","createProductOptionGroup","variantData","notNullOrUndefined","stock","updateProduct","updateOptions","autoUpdate","productInput","variantsInput","updateOperations","updateVariantsInput","getProductVariantsForProduct","productVariants","push","productOldName","findTranslation","productNewName","variant","currentVariantName","variantInput","existingVariantInput","variantTranslation","updateProductVariants","updateProductOption","updateProductVariantNames$","oldOptionName","newOptionName","variantsToUpdate","variantName","deleteProductVariant","result","DeletionResult","DELETED","getProduct","single$","throwError","message","static","ɵfac","t","i1","ɵprov","token","factory","providedIn","ProductOptionsEditorComponent","BaseDetailComponent","route","router","serverConfigService","productDetailService","formBuilder","changeDetector","notificationService","super","autoUpdateVariantNames","Permission","UpdateCatalog","UpdateProduct","getCustomFieldConfig","ngOnInit","optionGroups$","snapshot","tap","group","UntypedFormGroup","UntypedFormArray","init","$product","combineLatest","take","optionGroupForm","dirty","optionGroupEntity","getUpdatedOptionGroup","updateProductOptionGroup","optionForm","getUpdatedOption","subscribe","markAsPristine","markForCheck","success","marker","err","error","optionGroupFormGroup","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","optionFormGroup","setFormValues","groupsForm","groupTranslation","groupForm","setOptionGroupForm","setCustomFieldsForm","optionsForm","array","addControl","optionTranslation","setOptionForm","formGroup","currentTranslation","customValueFieldsGroup","hash","field","setCustomFieldFormValues","control","setValue","i1$1","i2","ɵcmp","type","selectors","features","decls","vars","consts","dependencies","i3","i3$1","i5","styles","changeDetection","CreateProductOptionGroupDialogComponent","Validators","required","updateCode","nameControl","codeControl","CreateProductVariantDialogComponent","record","FormControl","valueChanges","Object","every","entries","groupCode","optionId","getGroupIdFromCode","Number","getGroupCodeFromId","i5$1","OPTION_VALUE_INPUT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","OptionValueInputComponent","multi","formValue","add","EventEmitter","remove","edit","disabled","isFocussed","registerOnChange","fn","onChangeFn","registerOnTouched","onTouchFn","setDisabledState","isDisabled","writeValue","obj","focus","textArea","nativeElement","event","optionValue","nameInputs","setTimeout","newName","handleKey","key","addOptionValue","preventDefault","removeLastOption","handleBlur","parseInputIntoOptions","unique","split","s","trim","viewQuery","ElementRef","_t","inputs","outputs","GeneratedVariant","config","keys","ProductVariantsEditorComponent","modalService","formValueChanged","optionsChanged","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","refresh$","Subject","paramMap","getDefaultUiLanguage","getActiveChannel","activeChannel","product$","getProductVariantsOptions","parent","startWith","term","toLowerCase","p","allUsedOptionIds","allUsedOptionGroupIds","page","onFormChanged","variantInfo","canDeactivate","addOptionGroup","fromComponent","locals","EMPTY","next","usedByVariantsCount","dialog","title","body","translationVars","buttons","label","returnValue","val","removeOptionGroupFromProduct","force","__typename","addOptionToGroup","productOptionGroupId","createProductOption","deleteProductOption","variantId","response","createNewVariant","ProductVariantsResolver","BaseEntityResolver","mapStream","createRoutes","pageService","component","PageComponent","locationId","breadcrumb","getPageTabRoutes","link","CanDeactivateDetailGuard","resolve","inject","DataService","params","createResolveData","productOptionsEditorBreadcrumb","ApplyFacetDialogComponent","ngAfterViewInit","selector","FacetValueSelectorComponent","ASSET_DETAIL_QUERY","gql","ASSET_FRAGMENT","TAG_FRAGMENT","AssetDetailComponent","TypedBaseDetailComponent","FormGroup","tags","getCustomFieldsDefaults","ngOnDestroy","destroy","onAssetChange","markAsDirty","updateAsset","AssetListComponent","BaseListComponent","searchTerm$","BehaviorSubject","filterByTags$","uploading","setQueryFn","args","getAssetList","refetchOnChannelChange","skip","searchTerm","contains","SortOrder","DESC","tagsOperator","LogicalOperator","AND","paginationConfig$","debounceTime","takeUntil","destroy$","refresh","allTags$","getTagList","filesSelected","files","createAssets","finalize","successCount","deleteAssets","showModalAndDelete","r","assetIds","res","i5$2","AssetsComponent","assetsSetter","slice","change","AssetPickerDialogComponent","size","concat","emitChangeEvent","asset","AssetPreviewDialogComponent","closable","moveItemInArray","previousContainer","container","hostVars","hostBindings","i2$1","AssignProductsToChannelDialogComponent","productVariantIds","priceFactorControl","UntypedFormControl","selectedChannelIdControl","activeChannelId$","client","userStatus","activeChannelId","allChannels$","getChannels","channels","availableChannels","ids","selectChannel","variantsPreview$","from","getTopVariants","factor","channelIds","assignVariantsToChannel","channelId","priceFactor","assignProductsToChannel","productIds","_this","_asyncToGenerator","lastValueFrom","getProductVariants","filterOperator","OR","in","currentChannelIds","GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS","GET_VARIANTS_WITH_FACET_VALUES_BY_IDS","UPDATE_PRODUCTS_BULK","UPDATE_VARIANTS_BULK","BulkAddFacetValuesDialogComponent","changeDetectorRef","mode","state","fetchData$","query","products","subscription","unsubscribe","facetValueId","fv","selectedFacetValueIds","sv","mutate","facetValueIds","CollectionContentsComponent","previewUpdatedFilters","filterTermControl","isLoading","collectionIdChange$","parentIdChange$","filterChanges$","inheritFiltersChanges$","contentsCurrentPage$","queryParamMap","qpm","distinctUntilChanged","contentsItemsPerPage$","perPage","filterTerm$","setContentsPageNumber","asObservable","inheritFilters","collection$","filterTerm","filterClause","previewCollectionVariants","catchError","getCollectionContents","contents$","contentsTotalItems$","ngOnChanges","changes","collectionId","currentValue","updatedFilters","complete","setParam","setContentsItemsPerPage","navigate","relativeTo","queryParams","n","queryParamsHandling","replaceUrl","contentQueries","dirIndex","TemplateRef","headerTemplate","CollectionDataTableComponent","DataTable2Component","localStorageService","dragDrop","changeOrder","dragRefs","sortPredicate","dropList","getSortedItems","subCollections","allCollections","subCollectionMatches","forEach","collectionRowList","removeItem","ref","toArray","dropContainer","_dragRef","_withDropContainer","_dropListRef","addItem","onDrop","isTopLevel","pageIndexOffset","parentIndex","findIndex","adjustedIndex","currentIndex","splice","previousIndex","adjustedPreviousIndex","CdkDropList","CdkDrag","ngContentSelectors","onColumnReorder","onColumnsReset","disableSelect","selection","uiLanguage$","sortedColumns","COLLECTION_DETAIL_QUERY","COLLECTION_FRAGMENT","CollectionDetailComponent","unicodePatternValidator","visible","UpdateCollection","filterRemoved$","getCollectionFilters","collectionFilters","filtersFormArray","inheritFiltersControl","inheritFilters$","updatedFilters$","merge","statusChanges","touched","mapOperationsToInputs","_filter","arg","arguments","parentId$","pm","f","updateSlug","nameValue","slugControl","currentSlugIsEmpty","collectionFilter","filtersArray","argsHash","output","getConfigArgValue","removeAt","markAsTouched","getUpdatedCollection","createCollection","category","updateCollection","contentsComponent","set","JSON","stringify","patchValue","formArray","clear","featuredAssetId","operations","formValueOperations","j","encodeConfigArgValue","CollectionBreadcrumbPipe","transform","ɵpipe","pure","MoveCollectionsDialogComponent","i18nService","expandedIds$","getCollectionsResult","getCollections","topLevelOnly","refetch","rootCollectionId$","collections","rootCollectionId","translate","deleteCollectionsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","DeleteCollection","DeleteCatalog","getItemName","bulkDelete","deleteCollections","moveCollectionsBulkAction","icon","onClick","injector","hostComponent","clearSelection","ModalService","NotificationService","moveCollection","assignCollectionsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","collectionIds","assignCollectionsToChannel","removeCollectionsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","removeCollectionsFromChannel","CollectionListComponent","TypedBaseListComponent","createFilterCollection","addIdFilter","addDateFilters","kind","filterField","toFilterInput","eq","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetCollectionListDocument","getItems","setVariables","_take","createFilterInput","createSortInput","refreshListOnChanges","activeCollectionTitle$","match","closeContents","setContentLanguage","CollectionTreeService","allMoveListItems","_rearrange$","_delete$","rearrange$","delete$","setCollectionTree","tree","resetMoveList","calculateAllMoveListItems","ancestorIdPath","has","newParentId","onMove","onDelete","visit","node","parentPath","child","Set","CollectionTreeNodeComponent","collectionTreeService","parentName","permissions$","permissions","perms","selectionChanges$","expandAllChange","previousValue","drop","arrayToTree","nodes","currentState","topLevelNodes","mappedArr","currentStateMap","treeToMap","nodeMap","Map","hasOwnProperty","mappedElem","CollectionTreeComponent","rearrange","deleteCollection","ConfirmVariantDeletionDialogComponent","FACET_DETAIL_QUERY","FACET_WITH_VALUES_FRAGMENT","FacetDetailComponent","facet","UpdateFacet","currentCode","customValueFieldIsSet","valuesFormArray","valueGroup","newValue","fieldDef","insert","facetForm","newFacet","getUpdatedFacet","createFacet","valuesArray","updateFacet","createdValues","getCreatedFacetValues","createFacetValues","GetFacetDetailDocument","updatedValues","getUpdatedFacetValues","updateFacetValues","deleted","deleteFacetValues","currentValuesFormArray","valueTranslation","valueControl","fieldValue","facetFormGroup","facetId","dirtyValues","formRow","toString","dirtyValueValues","deleteFacetsBulkAction","DeleteFacet","shouldRetryItem","retrying","deleteFacets","assignFacetsToChannelBulkAction","facetIds","assignFacetsToChannel","removeFacetsFromChannelBulkAction","removeFacetsFromChannel","isErrorResult","removeFacetsFromChannelBulkAction2","getTranslationVars","getChannelCodeFromUserStatus","iconClass","isVisible","currentChannelIsNotDefault","res2","removedCount","errors","errorIds","result2","notRemovedCount","then","FACET_LIST_QUERY","FacetListComponent","GetFacetListDocument","facets","DEFAULT_VARIANT_CODE","GenerateProductVariantsComponent","variantsChange","stockLocations$","GetStockLocationListDocument","stockLocations","groupNameInputs","sum","generateAllCombinations","nonNullable","copyFromDefault","onFormChange","copyValuesToPristine","optionValueInputComponent","stopPropagation","formControl","correspondingFormControl","emitEvent","variantsToCreate","prop","ProductVariantListComponent","hideLanguageSelect","addFilters","inputType","addSorts","ProductVariantListQueryDocument","GET_PRODUCT_DETAIL","PRODUCT_DETAIL_FRAGMENT","ProductDetailComponent","productFacetValues$","formFacetValueIdChanges$","getFacetValues","DEFAULT_CHANNEL_CODE","removeProductsFromChannel","assignVariantToChannel","removeVariantFromChannel","removeVariantsFromChannel","displayFacetValueModal","productGroup","currentFacetValueIds","newProduct","getUpdatedProduct","console","updateSlugAfterSave","productFormGroup","results","firstResult","isUpdateMutation","tmp_16_0","deleteProductsBulkAction","DeleteProduct","deleteProducts","assignProductsToChannelBulkAction","isMultiChannel","removeProductsFromChannelBulkAction","assignFacetValuesToProductsBulkAction","ProductListComponent","jobQueueService","pendingSearchIndexUpdates","FacetValueFormInputComponent","serializeValue","deserializeValue","getLabel","ProductListQueryDocument","rebuildSearchIndex","reindex","info","addJob","job","JobState","COMPLETED","time","Intl","NumberFormat","format","duration","indexedItemCount","deleteProduct","delay","VariantPriceDetailComponent","priceChange$","taxCategoryIdChange$","taxRates$","getTaxRatesSimple","taxRates","activeChannel$","taxCategoryId","defaultTaxZone","applicableRate","taxRate","zone","Math","round","priceIncludesTax","ProductVariantQuickJumpComponent","GetProductVariantsQuickJumpDocument","tmp_0_0","ProductVariantDetailComponent","customOptionFields","useGlobalOutOfStockThreshold","outOfStockThreshold","trackInventory","getGlobalSettings","globalSettings","globalTrackInventory","result$","availableCurrencyCodes$","availableCurrencyCodes","prices","currencyCodes","usedIds","l","pricesIncludeTax","stockLevels$","deleteFormControl","stockLocationName","pick","getUpdatedVariant","ProductVariantUpdateMutationDocument","taxCategory","stockLevel","variantFormGroup","assignProductVariantsToChannelBulkAction","removeProductVariantsFromChannelBulkAction","removeProductVariantsFromChannel","deleteProductVariantsBulkAction","deleteProductVariants","ProductVariantsTableComponent","buildFormGroupMap","pendingAssetChanges","controlGroup","paginationConfig","STOCK_LOCATION_DETAIL_FRAGMENT","GET_STOCK_LOCATION_DETAIL","CREATE_STOCK_LOCATION","UPDATE_STOCK_LOCATION","StockLocationDetailComponent","CreateStockLocationDocument","createStockLocation","UpdateStockLocationDocument","deleteStockLocationsBulkAction","DeleteStockLocation","DeleteStockLocationsDocument","deleteStockLocations","NOT_DELETED","assignStockLocationsToChannelBulkAction","UpdateStockLocation","stockLocationIds","AssignStockLocationsToChannelDocument","assignStockLocationsToChannel","removeStockLocationsFromChannelBulkAction","RemoveStockLocationsFromChannelDocument","removeStockLocationsFromChannel","GET_STOCK_LOCATION_LIST","StockLocationListComponent","UpdateProductOptionDialogComponent","updateVariantName","codeInputTouched","productOption","activeLanguage","cfCurrentTranslation","CatalogModule","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetProductDetailDocument","entityKey","getBreadcrumbs","GetStockLocationDetailDocument","GetProductVariantDetailDocument","CollectionDetailQueryDocument","AssetDetailQueryDocument","ɵmod","ɵinj","providers","ROUTES","useFactory","deps","PageService","imports","SharedModule","RouterModule","forChild","PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT","PRODUCT_LIST_QUERY","PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_DETAIL_QUERY","PRODUCT_VARIANT_UPDATE_MUTATION","PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT","PRODUCT_VARIANT_LIST_QUERY"],"sourceRoot":"webpack:///","sources":["../node_modules/rxjs/dist/esm/internal/operators/switchMapTo.js","../node_modules/@vendure/admin-ui/fesm2022/vendure-admin-ui-catalog.mjs"],"sourcesContent":["import { switchMap } from './switchMap';\nimport { isFunction } from '../util/isFunction';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, forwardRef, EventEmitter, ElementRef, Input, ViewChild, ViewChildren, Output, inject, HostBinding, TemplateRef, ContentChild, Pipe, SkipSelf, Optional, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/router';\nimport { ROUTES, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport * as i1 from '@vendure/admin-ui/core';\nimport { findTranslation, DeletionResult, BaseDetailComponent, Permission, createUpdatedTranslatable, SelectionManager, getDefaultUiLanguage, BaseEntityResolver, PageComponent, CanDeactivateDetailGuard, DataService, createResolveData, FacetValueSelectorComponent, ASSET_FRAGMENT, TAG_FRAGMENT, TypedBaseDetailComponent, getCustomFieldsDefaults, BaseListComponent, SortOrder, LogicalOperator, AssetPickerDialogComponent, AssetPreviewDialogComponent, DataTable2Component, COLLECTION_FRAGMENT, unicodePatternValidator, getConfigArgValue, encodeConfigArgValue, createBulkDeleteAction, ModalService, NotificationService, createBulkAssignToChannelAction, createBulkRemoveFromChannelAction, TypedBaseListComponent, GetCollectionListDocument, FACET_WITH_VALUES_FRAGMENT, GetFacetDetailDocument, getChannelCodeFromUserStatus, currentChannelIsNotDefault, GetFacetListDocument, GetStockLocationListDocument, ProductVariantListQueryDocument, PRODUCT_DETAIL_FRAGMENT, isMultiChannel, FacetValueFormInputComponent, ProductListQueryDocument, JobState, GetProductVariantsQuickJumpDocument, GlobalFlag, ProductVariantUpdateMutationDocument, CreateStockLocationDocument, UpdateStockLocationDocument, DeleteStockLocationsDocument, AssignStockLocationsToChannelDocument, RemoveStockLocationsFromChannelDocument, detailComponentWithResolver, GetProductDetailDocument, GetStockLocationDetailDocument, GetProductVariantDetailDocument, CollectionDetailQueryDocument, AssetDetailQueryDocument, SharedModule, PageService } from '@vendure/admin-ui/core';\nimport { shareReplay, mergeMap, map, switchMap, tap, take, startWith, debounceTime, takeUntil, finalize, distinctUntilChanged, filter, catchError, skip, switchMapTo, delay } from 'rxjs/operators';\nimport * as i2 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormArray, Validators, FormControl, NG_VALUE_ACCESSOR, FormGroup, UntypedFormControl } from '@angular/forms';\nimport { forkJoin, of, throwError, combineLatest, Subject, EMPTY, BehaviorSubject, from, lastValueFrom, merge, concat } from 'rxjs';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined, generateAllCombinations } from '@vendure/common/lib/shared-utils';\nimport * as i3 from '@clr/angular';\nimport * as i3$1 from '@angular/common';\nimport * as i5 from '@ngx-translate/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport * as i5$1 from '@ng-select/ng-select';\nimport { gql } from 'apollo-angular';\nimport * as i5$2 from 'ngx-pagination';\nimport * as i2$1 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, CdkDropList, CdkDrag } from '@angular/cdk/drag-drop';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { pick } from '@vendure/common/lib/pick';\n\n/**\r\n * @description\r\n * Like String.prototype.replace(), but replaces the last instance\r\n * rather than the first.\r\n */\r\nfunction replaceLast(target, search, replace) {\r\n    if (!target) {\r\n        return '';\r\n    }\r\n    const lastIndex = target.lastIndexOf(search);\r\n    if (lastIndex === -1) {\r\n        return target;\r\n    }\r\n    const head = target.substr(0, lastIndex);\r\n    const tail = target.substr(lastIndex).replace(search, replace);\r\n    return head + tail;\r\n}\n\n/**\r\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\r\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\r\n */\r\nclass ProductDetailService {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n    }\r\n    getTaxCategories() {\r\n        return this.dataService.settings\r\n            .getTaxCategories()\r\n            .mapSingle(data => data.taxCategories.items)\r\n            .pipe(shareReplay(1));\r\n    }\r\n    createProductWithVariants(input, createVariantsConfig, languageCode) {\r\n        const createProduct$ = this.dataService.product.createProduct(input);\r\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\r\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\r\n        return forkJoin(createProduct$, createOptionGroups$).pipe(mergeMap(([{ createProduct }, optionGroups]) => {\r\n            const addOptionsToProduct$ = optionGroups.length\r\n                ? forkJoin(optionGroups.map(optionGroup => this.dataService.product.addOptionGroupToProduct({\r\n                    productId: createProduct.id,\r\n                    optionGroupId: optionGroup.id,\r\n                })))\r\n                : of([]);\r\n            return addOptionsToProduct$.pipe(map(() => ({ createProduct, optionGroups })));\r\n        }), mergeMap(({ createProduct, optionGroups }) => {\r\n            const variants = createVariantsConfig.variants.map(v => {\r\n                const optionIds = optionGroups.length\r\n                    ? v.optionValues.map((optionName, index) => {\r\n                        const option = optionGroups[index].options.find(o => o.name === optionName);\r\n                        if (!option) {\r\n                            throw new Error(`Could not find a matching ProductOption \"${optionName}\" when creating variant`);\r\n                        }\r\n                        return option.id;\r\n                    })\r\n                    : [];\r\n                return {\r\n                    ...v,\r\n                    optionIds,\r\n                };\r\n            });\r\n            const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\r\n            return this.createProductVariants(createProduct, variants, options, languageCode, createVariantsConfig.stockLocationId);\r\n        }));\r\n    }\r\n    createProductOptionGroups(groups, languageCode) {\r\n        return groups.length\r\n            ? forkJoin(groups.map(c => this.dataService.product\r\n                .createProductOptionGroups({\r\n                code: normalizeString(c.name, '-'),\r\n                translations: [{ languageCode, name: c.name }],\r\n                options: c.values.map(v => ({\r\n                    code: normalizeString(v, '-'),\r\n                    translations: [{ languageCode, name: v }],\r\n                })),\r\n            })\r\n                .pipe(map(data => data.createProductOptionGroup))))\r\n            : of([]);\r\n    }\r\n    createProductVariants(product, variantData, options, languageCode, stockLocationId) {\r\n        const variants = variantData.map(v => {\r\n            const name = options.length\r\n                ? `${product.name} ${v.optionIds\r\n                    .map(id => options.find(o => o.id === id))\r\n                    .filter(notNullOrUndefined)\r\n                    .map(o => o.name)\r\n                    .join(' ')}`\r\n                : product.name;\r\n            return {\r\n                productId: product.id,\r\n                price: v.price,\r\n                sku: v.sku,\r\n                translations: [\r\n                    {\r\n                        languageCode,\r\n                        name,\r\n                    },\r\n                ],\r\n                stockLevels: [\r\n                    {\r\n                        stockLocationId,\r\n                        stockOnHand: v.stock,\r\n                    },\r\n                ],\r\n                optionIds: v.optionIds,\r\n            };\r\n        });\r\n        return this.dataService.product.createProductVariants(variants).pipe(map(({ createProductVariants }) => ({\r\n            createProductVariants,\r\n            productId: product.id,\r\n        })));\r\n    }\r\n    updateProduct(updateOptions) {\r\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\r\n        const updateOperations = [];\r\n        const updateVariantsInput = variantsInput || [];\r\n        const variants$ = autoUpdate\r\n            ? this.dataService.product\r\n                .getProductVariantsForProduct({}, product.id)\r\n                .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n        return variants$.pipe(mergeMap(variants => {\r\n            if (productInput) {\r\n                updateOperations.push(this.dataService.product.updateProduct(productInput));\r\n                const productOldName = findTranslation(product, languageCode)?.name ?? '';\r\n                const productNewName = findTranslation(productInput, languageCode)?.name;\r\n                if (productNewName && productOldName !== productNewName && autoUpdate) {\r\n                    for (const variant of variants) {\r\n                        const currentVariantName = findTranslation(variant, languageCode)?.name || '';\r\n                        let variantInput;\r\n                        const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\r\n                        if (existingVariantInput) {\r\n                            variantInput = existingVariantInput;\r\n                        }\r\n                        else {\r\n                            variantInput = {\r\n                                id: variant.id,\r\n                                translations: [{ languageCode, name: currentVariantName }],\r\n                            };\r\n                            updateVariantsInput.push(variantInput);\r\n                        }\r\n                        const variantTranslation = findTranslation(variantInput, languageCode);\r\n                        if (variantTranslation) {\r\n                            if (variantTranslation.name) {\r\n                                variantTranslation.name = replaceLast(variantTranslation.name, productOldName, productNewName);\r\n                            }\r\n                            else {\r\n                                // The variant translation was falsy, which occurs\r\n                                // when defining the product name for a new translation\r\n                                // language that had not yet been defined.\r\n                                variantTranslation.name = [\r\n                                    productNewName,\r\n                                    ...variant.options.map(o => o.name),\r\n                                ].join(' ');\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (updateVariantsInput.length) {\r\n                updateOperations.push(this.dataService.product.updateProductVariants(updateVariantsInput));\r\n            }\r\n            return forkJoin(updateOperations);\r\n        }));\r\n    }\r\n    updateProductOption(input, product, languageCode) {\r\n        const variants$ = input.autoUpdate\r\n            ? this.dataService.product\r\n                .getProductVariantsForProduct({}, product.id)\r\n                .mapSingle(({ productVariants }) => productVariants.items)\r\n            : of([]);\r\n        return variants$.pipe(mergeMap(variants => {\r\n            let updateProductVariantNames$ = of([]);\r\n            if (input.autoUpdate) {\r\n                // Update any ProductVariants' names which include the option name\r\n                let oldOptionName;\r\n                const newOptionName = findTranslation(input, languageCode)?.name;\r\n                if (!newOptionName) {\r\n                    updateProductVariantNames$ = of([]);\r\n                }\r\n                const variantsToUpdate = [];\r\n                for (const variant of variants) {\r\n                    if (variant.options.map(o => o.id).includes(input.id)) {\r\n                        if (!oldOptionName) {\r\n                            oldOptionName = findTranslation(variant.options.find(o => o.id === input.id), languageCode)?.name;\r\n                        }\r\n                        const variantName = findTranslation(variant, languageCode)?.name || '';\r\n                        if (oldOptionName && newOptionName && variantName.includes(oldOptionName)) {\r\n                            variantsToUpdate.push({\r\n                                id: variant.id,\r\n                                translations: [\r\n                                    {\r\n                                        languageCode,\r\n                                        name: replaceLast(variantName, oldOptionName, newOptionName),\r\n                                    },\r\n                                ],\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                if (variantsToUpdate.length) {\r\n                    updateProductVariantNames$ =\r\n                        this.dataService.product.updateProductVariants(variantsToUpdate);\r\n                }\r\n            }\r\n            return this.dataService.product\r\n                .updateProductOption(input)\r\n                .pipe(mergeMap(() => updateProductVariantNames$));\r\n        }));\r\n    }\r\n    deleteProductVariant(id, productId) {\r\n        return this.dataService.product.deleteProductVariant(id).pipe(switchMap(result => {\r\n            if (result.deleteProductVariant.result === DeletionResult.DELETED) {\r\n                return this.dataService.product.getProduct(productId).single$;\r\n            }\r\n            else {\r\n                return throwError(result.deleteProductVariant.message);\r\n            }\r\n        }));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductDetailService, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\r\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductDetailService, providedIn: 'root' }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductDetailService, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\n\nclass ProductOptionsEditorComponent extends BaseDetailComponent {\r\n    constructor(route, router, serverConfigService, dataService, productDetailService, formBuilder, changeDetector, notificationService) {\r\n        super(route, router, serverConfigService, dataService);\r\n        this.route = route;\r\n        this.router = router;\r\n        this.serverConfigService = serverConfigService;\r\n        this.dataService = dataService;\r\n        this.productDetailService = productDetailService;\r\n        this.formBuilder = formBuilder;\r\n        this.changeDetector = changeDetector;\r\n        this.notificationService = notificationService;\r\n        this.autoUpdateVariantNames = true;\r\n        this.paginationSettings = {};\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n        this.optionGroupCustomFields = this.getCustomFieldConfig('ProductOptionGroup');\r\n        this.optionCustomFields = this.getCustomFieldConfig('ProductOption');\r\n    }\r\n    ngOnInit() {\r\n        this.optionGroups$ = this.route.snapshot.data.entity.pipe(map((product) => product.optionGroups), tap((optionGroups) => {\r\n            for (const group of optionGroups) {\r\n                this.paginationSettings[group.id] = {\r\n                    currentPage: 1,\r\n                    itemsPerPage: 10,\r\n                };\r\n            }\r\n        }));\r\n        this.detailForm = new UntypedFormGroup({\r\n            optionGroups: new UntypedFormArray([]),\r\n        });\r\n        super.init();\r\n    }\r\n    getOptionGroups() {\r\n        const optionGroups = this.detailForm.get('optionGroups');\r\n        return optionGroups.controls;\r\n    }\r\n    getOptions(optionGroup) {\r\n        const options = optionGroup.get('options');\r\n        return options.controls;\r\n    }\r\n    save() {\r\n        if (this.detailForm.invalid || this.detailForm.pristine) {\r\n            return;\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const $product = this.dataService.product.getProduct(this.id).mapSingle(data => data.product);\r\n        combineLatest(this.entity$, this.languageCode$, $product)\r\n            .pipe(take(1), mergeMap(([{ optionGroups }, languageCode, product]) => {\r\n            const updateOperations = [];\r\n            for (const optionGroupForm of this.getOptionGroups()) {\r\n                if (optionGroupForm.dirty) {\r\n                    const optionGroupEntity = optionGroups.find(og => og.id === optionGroupForm.value.id);\r\n                    if (optionGroupEntity) {\r\n                        const input = this.getUpdatedOptionGroup(optionGroupEntity, optionGroupForm, languageCode);\r\n                        updateOperations.push(this.dataService.product.updateProductOptionGroup(input));\r\n                    }\r\n                }\r\n                for (const optionForm of this.getOptions(optionGroupForm)) {\r\n                    if (optionForm.dirty) {\r\n                        const optionGroup = optionGroups\r\n                            .find(og => og.id === optionGroupForm.value.id)\r\n                            ?.options.find(o => o.id === optionForm.value.id);\r\n                        if (optionGroup) {\r\n                            const input = this.getUpdatedOption(optionGroup, optionForm, languageCode);\r\n                            updateOperations.push(this.productDetailService.updateProductOption({ ...input, autoUpdate: this.autoUpdateVariantNames }, product, languageCode));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return forkJoin(updateOperations);\r\n        }))\r\n            .subscribe(() => {\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'ProductOptionGroup',\r\n            });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'ProductOptionGroup',\r\n            });\r\n        });\r\n    }\r\n    getUpdatedOptionGroup(optionGroup, optionGroupFormGroup, languageCode) {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: optionGroup,\r\n            updatedFields: optionGroupFormGroup.value,\r\n            customFieldConfig: this.optionGroupCustomFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: optionGroup.name || '',\r\n            },\r\n        });\r\n        return input;\r\n    }\r\n    getUpdatedOption(option, optionFormGroup, languageCode) {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: option,\r\n            updatedFields: optionFormGroup.value,\r\n            customFieldConfig: this.optionCustomFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: option.name || '',\r\n            },\r\n        });\r\n        return input;\r\n    }\r\n    setFormValues(entity, languageCode) {\r\n        const groupsForm = this.detailForm.get('optionGroups');\r\n        for (const optionGroup of entity.optionGroups) {\r\n            const groupTranslation = findTranslation(optionGroup, languageCode);\r\n            const groupForm = this.setOptionGroupForm(optionGroup, groupsForm, groupTranslation);\r\n            this.setCustomFieldsForm(this.optionGroupCustomFields, groupForm, optionGroup, groupTranslation);\r\n            let optionsForm = groupForm.get('options');\r\n            if (!optionsForm) {\r\n                optionsForm = this.formBuilder.array([]);\r\n                groupForm.addControl('options', optionsForm);\r\n            }\r\n            for (const option of optionGroup.options) {\r\n                const optionTranslation = findTranslation(option, languageCode);\r\n                const optionForm = this.setOptionForm(option, optionsForm, optionTranslation);\r\n                this.setCustomFieldsForm(this.optionCustomFields, optionForm, option, optionTranslation);\r\n            }\r\n        }\r\n    }\r\n    setCustomFieldsForm(customFields, formGroup, entity, currentTranslation) {\r\n        if (customFields.length) {\r\n            let customValueFieldsGroup = formGroup.get(['customFields']);\r\n            if (!customValueFieldsGroup) {\r\n                customValueFieldsGroup = this.formBuilder.group(customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}));\r\n                formGroup.addControl('customFields', customValueFieldsGroup);\r\n            }\r\n            this.setCustomFieldFormValues(customFields, customValueFieldsGroup, entity, currentTranslation);\r\n        }\r\n    }\r\n    setOptionGroupForm(entity, groupsForm, currentTranslation) {\r\n        const group = {\r\n            id: entity.id,\r\n            createdAt: entity.createdAt,\r\n            updatedAt: entity.updatedAt,\r\n            code: entity.code,\r\n            name: currentTranslation?.name ?? '',\r\n        };\r\n        let groupForm = groupsForm.controls.find(control => control.value.id === entity.id);\r\n        if (groupForm) {\r\n            groupForm.get('id')?.setValue(group.id);\r\n            groupForm.get('code')?.setValue(group.code);\r\n            groupForm.get('name')?.setValue(group.name);\r\n            groupForm.get('createdAt')?.setValue(group.createdAt);\r\n            groupForm.get('updatedAt')?.setValue(group.updatedAt);\r\n        }\r\n        else {\r\n            groupForm = this.formBuilder.group(group);\r\n            groupsForm.push(groupForm);\r\n        }\r\n        return groupForm;\r\n    }\r\n    setOptionForm(entity, optionsForm, currentTranslation) {\r\n        const group = {\r\n            id: entity.id,\r\n            createdAt: entity.createdAt,\r\n            updatedAt: entity.updatedAt,\r\n            code: entity.code,\r\n            name: currentTranslation?.name ?? '',\r\n        };\r\n        let optionForm = optionsForm.controls.find(control => control.value.id === entity.id);\r\n        if (optionForm) {\r\n            optionForm.get('id')?.setValue(group.id);\r\n            optionForm.get('code')?.setValue(group.code);\r\n            optionForm.get('name')?.setValue(group.name);\r\n            optionForm.get('createdAt')?.setValue(group.createdAt);\r\n            optionForm.get('updatedAt')?.setValue(group.updatedAt);\r\n        }\r\n        else {\r\n            optionForm = this.formBuilder.group(group);\r\n            optionsForm.push(optionForm);\r\n        }\r\n        return optionForm;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductOptionsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.ServerConfigService }, { token: i1.DataService }, { token: ProductDetailService }, { token: i2.UntypedFormBuilder }, { token: i0.ChangeDetectorRef }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductOptionsEditorComponent, selector: \"vdr-product-options-editor\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageHeaderComponent, selector: \"vdr-page-header\" }, { kind: \"component\", type: i1.PageTitleComponent, selector: \"vdr-page-title\", inputs: [\"title\"] }, { kind: \"component\", type: i1.PageHeaderDescriptionComponent, selector: \"vdr-page-header-description\" }, { kind: \"component\", type: i1.PageBodyComponent, selector: \"vdr-page-body\" }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductOptionsEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-options-editor', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-header>\\r\\n    <vdr-page-title></vdr-page-title>\\r\\n    <vdr-page-header-description>{{ 'catalog.page-description-options-editor' | translate }}</vdr-page-header-description>\\r\\n</vdr-page-header>\\r\\n<vdr-page-body>\\r\\n    <vdr-page-block>\\r\\n        <vdr-action-bar>\\r\\n            <vdr-ab-left>\\r\\n                <vdr-language-selector\\r\\n                    [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                    [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                    (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                ></vdr-language-selector>\\r\\n            </vdr-ab-left>\\r\\n\\r\\n            <vdr-ab-right>\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div class=\\\"mr-2\\\">\\r\\n                        <clr-checkbox-wrapper>\\r\\n                            <input\\r\\n                                clrCheckbox\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                id=\\\"auto-update\\\"\\r\\n                                [(ngModel)]=\\\"autoUpdateVariantNames\\\"\\r\\n                            />\\r\\n                            <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                        </clr-checkbox-wrapper>\\r\\n                    </div>\\r\\n                    <button\\r\\n                        *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                        class=\\\"btn btn-primary\\\"\\r\\n                        (click)=\\\"save()\\\"\\r\\n                        [disabled]=\\\"detailForm.pristine || detailForm.invalid\\\"\\r\\n                    >\\r\\n                        {{ 'common.update' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-ab-right>\\r\\n        </vdr-action-bar>\\r\\n    </vdr-page-block>\\r\\n    <vdr-page-block>\\r\\n        <form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"optionGroups$ | async as optionGroups\\\">\\r\\n            <div formGroupName=\\\"optionGroups\\\">\\r\\n                <vdr-card\\r\\n                    *ngFor=\\\"let optionGroup of getOptionGroups(); index as i\\\"\\r\\n                    [formArrayName]=\\\"i\\\"\\r\\n                    [title]=\\\"optionGroup.value.code\\\"\\r\\n                >\\r\\n                    <vdr-page-entity-info [entity]=\\\"optionGroup.value\\\"></vdr-page-entity-info>\\r\\n                    <div class=\\\"form-grid\\\">\\r\\n                        <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'name-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                            <input\\r\\n                                [id]=\\\"'code-' + i\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                formControlName=\\\"code\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                    </div>\\r\\n                    <ng-container formGroupName=\\\"customFields\\\" *ngIf=\\\"optionGroupCustomFields.length\\\">\\r\\n                        <vdr-tabbed-custom-fields\\r\\n                            entityName=\\\"ProductOptionGroup\\\"\\r\\n                            [customFields]=\\\"optionGroupCustomFields\\\"\\r\\n                            [customFieldsFormGroup]=\\\"optionGroup.get('customFields')\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-tabbed-custom-fields>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <vdr-data-table-2\\r\\n                        id=\\\"edit-options-list\\\"\\r\\n                        *ngIf=\\\"getOptions(optionGroup) as options\\\"\\r\\n                        [items]=\\\"options\\\"\\r\\n                        [itemsPerPage]=\\\"paginationSettings[optionGroup.value.id]?.itemsPerPage\\\"\\r\\n                        [currentPage]=\\\"paginationSettings[optionGroup.value.id]?.currentPage\\\"\\r\\n                        (pageChange)=\\\"paginationSettings[optionGroup.value.id].currentPage = $event\\\"\\r\\n                        [totalItems]=\\\"options.length\\\"\\r\\n                    >\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.id }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.createdAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                {{ optionControl.value.updatedAt | localeDate : 'short' }}\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    [formControl]=\\\"optionControl.get('name')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\" [optional]=\\\"false\\\">\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <input type=\\\"text\\\" [formControl]=\\\"optionControl.get('code')\\\" />\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                        <vdr-dt2-column\\r\\n                            [heading]=\\\"'common.custom-fields' | translate\\\"\\r\\n                            [hiddenByDefault]=\\\"optionCustomFields.length === 0\\\"\\r\\n                        >\\r\\n                            <ng-template let-optionControl=\\\"item\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"ProductOption\\\"\\r\\n                                    [customFields]=\\\"optionCustomFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"optionControl.get('customFields')\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </ng-template>\\r\\n                        </vdr-dt2-column>\\r\\n                    </vdr-data-table-2>\\r\\n                </vdr-card>\\r\\n            </div>\\r\\n        </form>\\r\\n    </vdr-page-block>\\r\\n</vdr-page-body>\\r\\n\", styles: [\".option-group-header{display:flex;align-items:baseline}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.ServerConfigService }, { type: i1.DataService }, { type: ProductDetailService }, { type: i2.UntypedFormBuilder }, { type: i0.ChangeDetectorRef }, { type: i1.NotificationService }]; } });\n\nclass CreateProductOptionGroupDialogComponent {\r\n    constructor(formBuilder) {\r\n        this.formBuilder = formBuilder;\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            code: ['', Validators.required],\r\n        });\r\n    }\r\n    updateCode() {\r\n        const nameControl = this.form.get('name');\r\n        const codeControl = this.form.get('code');\r\n        if (nameControl && codeControl && codeControl.pristine) {\r\n            codeControl.setValue(normalizeString(`${nameControl.value}`, '-'));\r\n        }\r\n    }\r\n    confirm() {\r\n        const { name, code } = this.form.value;\r\n        if (!name || !code) {\r\n            return;\r\n        }\r\n        this.resolveWith({\r\n            code,\r\n            options: [],\r\n            translations: [{ languageCode: this.languageCode, name }],\r\n        });\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CreateProductOptionGroupDialogComponent, selector: \"vdr-create-product-option-group-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CreateProductOptionGroupDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-create-product-option-group-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-option-group' | translate }}\\r\\n</ng-template>\\r\\n<div class=\\\"form-grid\\\" [formGroup]=\\\"form\\\">\\r\\n    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n        <input id=\\\"name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" (input)=\\\"updateCode()\\\" />\\r\\n    </vdr-form-field>\\r\\n    <vdr-form-field\\r\\n        [label]=\\\"'common.code' | translate\\\"\\r\\n        for=\\\"code\\\"\\r\\n    >\\r\\n        <input\\r\\n            id=\\\"code\\\"\\r\\n            type=\\\"text\\\"\\r\\n            formControlName=\\\"code\\\"\\r\\n        />\\r\\n    </vdr-form-field>\\r\\n</div>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"form.invalid\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i2.FormBuilder }]; } });\n\nclass CreateProductVariantDialogComponent {\r\n    constructor(formBuilder) {\r\n        this.formBuilder = formBuilder;\r\n        this.form = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            sku: ['', Validators.required],\r\n            price: ['', Validators.required],\r\n            options: this.formBuilder.record({}),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.currencyCode = this.product.variants[0].currencyCode;\r\n        for (const optionGroup of this.product.optionGroups) {\r\n            this.form.get('options').addControl(optionGroup.code, new FormControl('', Validators.required));\r\n        }\r\n        const optionsRecord = this.form.get('options');\r\n        optionsRecord.valueChanges.subscribe(value => {\r\n            const nameControl = this.form.get('name');\r\n            const allNull = Object.values(value).every(v => v == null);\r\n            if (!allNull && value && nameControl && !nameControl.dirty) {\r\n                const name = Object.entries(value)\r\n                    .map(([groupCode, optionId]) => this.product.optionGroups\r\n                    .find(og => og.code === groupCode)\r\n                    ?.options.find(o => o.id === optionId)?.name)\r\n                    .join(' ');\r\n                nameControl.setValue(`${this.product.name} ${name}`);\r\n            }\r\n            const allSelected = Object.values(value).every(v => v != null);\r\n            if (allSelected) {\r\n                this.existingVariant = this.product.variants.find(v => Object.entries(value).every(([groupCode, optionId]) => v.options.find(o => o.groupId === this.getGroupIdFromCode(groupCode))?.id ===\r\n                    optionId));\r\n            }\r\n        });\r\n    }\r\n    confirm() {\r\n        const { name, sku, options, price } = this.form.value;\r\n        if (!name || !sku || !options || !price) {\r\n            return;\r\n        }\r\n        const optionIds = Object.values(options).filter(notNullOrUndefined);\r\n        this.resolveWith({\r\n            productId: this.product.id,\r\n            sku,\r\n            price: Number(price),\r\n            optionIds,\r\n            translations: [\r\n                {\r\n                    languageCode: this.product.languageCode,\r\n                    name,\r\n                },\r\n            ],\r\n        });\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    getGroupCodeFromId(id) {\r\n        return this.product.optionGroups.find(og => og.id === id)?.code ?? '';\r\n    }\r\n    getGroupIdFromCode(code) {\r\n        return this.product.optionGroups.find(og => og.code === code)?.id ?? '';\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CreateProductVariantDialogComponent, deps: [{ token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CreateProductVariantDialogComponent, selector: \"vdr-create-product-variant-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertClosed\", \"clrAlertType\", \"clrAlertIcon\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CreateProductVariantDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-create-product-variant-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.create-product-variant' | translate }}\\r\\n</ng-template>\\r\\n<form [formGroup]=\\\"form\\\">\\r\\n    <div formGroupName=\\\"options\\\" class=\\\"form-grid\\\">\\r\\n        <vdr-form-field [label]=\\\"optionGroup.name\\\" *ngFor=\\\"let optionGroup of product.optionGroups\\\">\\r\\n            <ng-select [items]=\\\"optionGroup.options\\\" [formControlName]=\\\"optionGroup.code\\\" bindLabel=\\\"name\\\"\\r\\n                bindValue=\\\"id\\\" appendTo=\\\"body\\\">\\r\\n            </ng-select>\\r\\n        </vdr-form-field>\\r\\n        <clr-alert *ngIf=\\\"product.optionGroups.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\"\\r\\n            class=\\\"form-grid-span\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.cannot-create-variants-without-options' | translate }}\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"existingVariant\\\" class=\\\"mt-2\\\">\\r\\n        <clr-alert clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n            <clr-alert-item>\\r\\n                <span class=\\\"alert-text\\\">\\r\\n                    {{ 'catalog.product-variant-exists' | translate }}: {{ existingVariant.name }} ({{\\r\\n                    existingVariant.sku\\r\\n                    }})\\r\\n                </span>\\r\\n            </clr-alert-item>\\r\\n        </clr-alert>\\r\\n    </div>\\r\\n    <div class=\\\"form-grid mt-2\\\">\\r\\n        <vdr-form-field [label]=\\\"'common.name' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\">\\r\\n            <input type=\\\"text\\\" formControlName=\\\"sku\\\" />\\r\\n        </vdr-form-field>\\r\\n        <vdr-form-field [label]=\\\"'catalog.price' | translate\\\">\\r\\n            <vdr-currency-input name=\\\"price\\\" [currencyCode]=\\\"currencyCode\\\" formControlName=\\\"price\\\" />\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n</form>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\"\\r\\n        [disabled]=\\\"form.invalid || existingVariant || product.optionGroups.length === 0\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\" }]\r\n        }], ctorParameters: function () { return [{ type: i2.FormBuilder }]; } });\n\nconst OPTION_VALUE_INPUT_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OptionValueInputComponent),\r\n    multi: true,\r\n};\r\nclass OptionValueInputComponent {\r\n    get optionValues() {\r\n        return this.formValue ?? this.options ?? [];\r\n    }\r\n    constructor(changeDetector) {\r\n        this.changeDetector = changeDetector;\r\n        this.groupName = '';\r\n        this.add = new EventEmitter();\r\n        this.remove = new EventEmitter();\r\n        this.edit = new EventEmitter();\r\n        this.disabled = false;\r\n        this.input = '';\r\n        this.isFocussed = false;\r\n        this.lastSelected = false;\r\n        this.editingIndex = -1;\r\n    }\r\n    registerOnChange(fn) {\r\n        this.onChangeFn = fn;\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouchFn = fn;\r\n    }\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n    writeValue(obj) {\r\n        this.formValue = obj || [];\r\n    }\r\n    focus() {\r\n        this.textArea.nativeElement.focus();\r\n    }\r\n    editName(index, event) {\r\n        const optionValue = this.optionValues[index];\r\n        if (!optionValue.locked && !optionValue.id) {\r\n            event.cancelBubble = true;\r\n            this.editingIndex = index;\r\n            const input = this.nameInputs.get(index)?.nativeElement;\r\n            setTimeout(() => input?.focus());\r\n        }\r\n    }\r\n    updateOption(index, event) {\r\n        const optionValue = this.optionValues[index];\r\n        const newName = event.target.value;\r\n        if (optionValue) {\r\n            if (newName) {\r\n                optionValue.name = newName;\r\n                this.edit.emit({ index, option: optionValue });\r\n            }\r\n            this.editingIndex = -1;\r\n        }\r\n    }\r\n    removeOption(option) {\r\n        if (!option.locked) {\r\n            if (this.formValue) {\r\n                this.formValue = this.formValue?.filter(o => o.name !== option.name);\r\n                this.onChangeFn(this.formValue);\r\n            }\r\n            else {\r\n                this.remove.emit(option);\r\n            }\r\n        }\r\n    }\r\n    handleKey(event) {\r\n        switch (event.key) {\r\n            case ',':\r\n            case 'Enter':\r\n                this.addOptionValue();\r\n                event.preventDefault();\r\n                break;\r\n            case 'Backspace':\r\n                if (this.lastSelected) {\r\n                    this.removeLastOption();\r\n                    this.lastSelected = false;\r\n                }\r\n                else if (this.input === '') {\r\n                    this.lastSelected = true;\r\n                }\r\n                break;\r\n            default:\r\n                this.lastSelected = false;\r\n        }\r\n    }\r\n    handleBlur() {\r\n        this.isFocussed = false;\r\n        this.addOptionValue();\r\n    }\r\n    addOptionValue() {\r\n        const options = this.parseInputIntoOptions(this.input).filter(option => {\r\n            // do not add an option with the same name\r\n            // as an existing option\r\n            const existing = this.options ?? this.formValue;\r\n            return !existing?.find(o => o?.name === option.name);\r\n        });\r\n        if (!this.formValue && this.options) {\r\n            for (const option of options) {\r\n                this.add.emit(option);\r\n            }\r\n        }\r\n        else {\r\n            this.formValue = unique([...this.formValue, ...options]);\r\n            this.onChangeFn(this.formValue);\r\n        }\r\n        this.input = '';\r\n    }\r\n    parseInputIntoOptions(input) {\r\n        return input\r\n            .split(/[,\\n]/)\r\n            .map(s => s.trim())\r\n            .filter(s => s !== '')\r\n            .map(s => ({ name: s, locked: false }));\r\n    }\r\n    removeLastOption() {\r\n        if (this.optionValues.length) {\r\n            const option = this.optionValues[this.optionValues.length - 1];\r\n            this.removeOption(option);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: OptionValueInputComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: { groupName: \"groupName\", options: \"options\", disabled: \"disabled\" }, outputs: { add: \"add\", remove: \"remove\", edit: \"edit\" }, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"textArea\", first: true, predicate: [\"textArea\"], descendants: true, static: true }, { propertyName: \"nameInputs\", predicate: [\"editNameInput\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: OptionValueInputComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-option-value-input', changeDetection: ChangeDetectionStrategy.Default, providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR], template: \"<div class=\\\"input-wrapper\\\" [class.focus]=\\\"isFocussed\\\" (click)=\\\"textArea.focus()\\\">\\r\\n    <div class=\\\"chips\\\" *ngIf=\\\"0 < optionValues.length\\\">\\r\\n        <vdr-chip\\r\\n            *ngFor=\\\"let option of optionValues; last as isLast; index as i\\\"\\r\\n            [icon]=\\\"option.locked ? 'lock' : 'times'\\\"\\r\\n            [class.selected]=\\\"isLast && lastSelected\\\"\\r\\n            [class.locked]=\\\"option.locked\\\"\\r\\n            [colorFrom]=\\\"groupName\\\"\\r\\n            (iconClick)=\\\"removeOption(option)\\\"\\r\\n        >\\r\\n            <span [hidden]=\\\"editingIndex !== i\\\">\\r\\n                <input\\r\\n                    #editNameInput\\r\\n                    type=\\\"text\\\"\\r\\n                    [ngModel]=\\\"option.name\\\"\\r\\n                    (blur)=\\\"updateOption(i, $event)\\\"\\r\\n                    (click)=\\\"$event.cancelBubble = true\\\"\\r\\n                />\\r\\n            </span>\\r\\n            <span\\r\\n                class=\\\"option-name\\\"\\r\\n                [class.editable]=\\\"!option.locked && !option.id\\\"\\r\\n                (click)=\\\"editName(i, $event)\\\" [hidden]=\\\"editingIndex === i\\\">{{ option.name }}</span>\\r\\n        </vdr-chip>\\r\\n    </div>\\r\\n    <textarea\\r\\n        #textArea\\r\\n        (keyup)=\\\"handleKey($event)\\\"\\r\\n        (focus)=\\\"isFocussed = true\\\"\\r\\n        (blur)=\\\"handleBlur()\\\"\\r\\n        [(ngModel)]=\\\"input\\\"\\r\\n        [disabled]=\\\"disabled\\\"\\r\\n    ></textarea>\\r\\n</div>\\r\\n\", styles: [\".input-wrapper{background-color:var(--color-form-input-bg);border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none;box-shadow:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { groupName: [{\r\n                type: Input\r\n            }], textArea: [{\r\n                type: ViewChild,\r\n                args: ['textArea', { static: true }]\r\n            }], nameInputs: [{\r\n                type: ViewChildren,\r\n                args: ['editNameInput', { read: ElementRef }]\r\n            }], options: [{\r\n                type: Input\r\n            }], add: [{\r\n                type: Output\r\n            }], remove: [{\r\n                type: Output\r\n            }], edit: [{\r\n                type: Output\r\n            }], disabled: [{\r\n                type: Input\r\n            }] } });\n\nclass GeneratedVariant {\r\n    constructor(config) {\r\n        for (const key of Object.keys(config)) {\r\n            this[key] = config[key];\r\n        }\r\n    }\r\n}\r\nclass ProductVariantsEditorComponent {\r\n    constructor(route, dataService, productDetailService, notificationService, modalService, changeDetector) {\r\n        this.route = route;\r\n        this.dataService = dataService;\r\n        this.productDetailService = productDetailService;\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.changeDetector = changeDetector;\r\n        this.formValueChanged = false;\r\n        this.optionsChanged = false;\r\n        this.itemsPerPage = 100;\r\n        this.currentPage = 1;\r\n        this.searchTermControl = new FormControl('');\r\n        this.selectionManager = new SelectionManager({\r\n            multiSelect: true,\r\n            itemsAreEqual: (a, b) => a.id === b.id,\r\n            additiveMode: true,\r\n        });\r\n        this.optionsToAddToVariant = {};\r\n        this.refresh$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.languageCode =\r\n            this.route.snapshot.paramMap.get('lang') || getDefaultUiLanguage();\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\r\n        });\r\n        const product$ = this.refresh$.pipe(switchMap(() => this.dataService.product\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            .getProductVariantsOptions(this.route.parent?.snapshot.paramMap.get('id'))\r\n            .mapSingle(data => data.product)), startWith(this.route.snapshot.data.product));\r\n        this.variants$ = product$.pipe(switchMap(product => this.searchTermControl.valueChanges.pipe(startWith(''), map(term => term\r\n            ? product.variants.filter(v => v.name.toLowerCase().includes(term.toLowerCase()))\r\n            : product.variants))));\r\n        this.optionGroups$ = product$.pipe(map(product => product.optionGroups));\r\n        this.totalItems$ = this.variants$.pipe(map(variants => variants.length));\r\n        product$.subscribe(p => {\r\n            this.product = p;\r\n            const allUsedOptionIds = p.variants.map(v => v.options.map(option => option.id)).flat();\r\n            const allUsedOptionGroupIds = p.variants.map(v => v.options.map(option => option.groupId)).flat();\r\n            this.optionGroups = p.optionGroups.map(og => ({\r\n                id: og.id,\r\n                isNew: false,\r\n                name: og.name,\r\n                locked: allUsedOptionGroupIds.includes(og.id),\r\n                values: og.options.map(o => ({\r\n                    id: o.id,\r\n                    name: o.name,\r\n                    locked: allUsedOptionIds.includes(o.id),\r\n                })),\r\n            }));\r\n        });\r\n    }\r\n    setItemsPerPage(itemsPerPage) {\r\n        this.itemsPerPage = itemsPerPage;\r\n        this.currentPage = 1;\r\n    }\r\n    setPageNumber(page) {\r\n        this.currentPage = page;\r\n    }\r\n    onFormChanged(variantInfo) {\r\n        this.formValueChanged = true;\r\n        variantInfo.enabled = true;\r\n    }\r\n    canDeactivate() {\r\n        return !this.formValueChanged;\r\n    }\r\n    addOptionGroup() {\r\n        this.modalService\r\n            .fromComponent(CreateProductOptionGroupDialogComponent, {\r\n            locals: {\r\n                languageCode: this.languageCode,\r\n            },\r\n        })\r\n            .pipe(switchMap(result => {\r\n            if (result) {\r\n                return this.dataService.product.createProductOptionGroups(result).pipe(switchMap(({ createProductOptionGroup }) => this.dataService.product.addOptionGroupToProduct({\r\n                    optionGroupId: createProductOptionGroup.id,\r\n                    productId: this.product.id,\r\n                })));\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(result => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'ProductOptionGroup',\r\n            });\r\n            this.refresh$.next();\r\n            this.changeDetector.markForCheck();\r\n        });\r\n    }\r\n    removeOptionGroup(optionGroup) {\r\n        const id = optionGroup.id;\r\n        const usedByVariantsCount = this.product.variants.filter(v => v.options.map(o => o.groupId).includes(id)).length;\r\n        this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-product-option-group'),\r\n            body: usedByVariantsCount ? marker('catalog.confirm-delete-product-option-group-body') : '',\r\n            translationVars: { name: optionGroup.name, count: usedByVariantsCount },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(val => {\r\n            if (val) {\r\n                return this.dataService.product.removeOptionGroupFromProduct({\r\n                    optionGroupId: id,\r\n                    productId: this.product.id,\r\n                    force: true,\r\n                });\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(({ removeOptionGroupFromProduct }) => {\r\n            if (removeOptionGroupFromProduct.__typename === 'Product') {\r\n                this.notificationService.success(marker('common.notify-delete-success'), {\r\n                    entity: 'ProductOptionGroup',\r\n                });\r\n                this.refresh$.next();\r\n            }\r\n            else if (removeOptionGroupFromProduct.__typename === 'ProductOptionInUseError') {\r\n                this.notificationService.error(removeOptionGroupFromProduct.message ?? '');\r\n            }\r\n        });\r\n    }\r\n    addOption(index, optionName) {\r\n        const group = this.optionGroups[index];\r\n        if (group && group.id) {\r\n            this.dataService.product\r\n                .addOptionToGroup({\r\n                productOptionGroupId: group.id,\r\n                code: normalizeString(optionName, '-'),\r\n                translations: [{ name: optionName, languageCode: this.languageCode }],\r\n            })\r\n                .subscribe(({ createProductOption }) => {\r\n                this.notificationService.success(marker('common.notify-create-success'), {\r\n                    entity: 'ProductOption',\r\n                });\r\n                this.refresh$.next();\r\n            });\r\n        }\r\n    }\r\n    removeOption(index, { id, name }) {\r\n        const optionGroup = this.optionGroups[index];\r\n        if (optionGroup) {\r\n            this.modalService\r\n                .dialog({\r\n                title: marker('catalog.confirm-delete-product-option'),\r\n                translationVars: { name },\r\n                buttons: [\r\n                    { type: 'secondary', label: marker('common.cancel') },\r\n                    { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n                ],\r\n            })\r\n                .pipe(switchMap(val => {\r\n                if (val) {\r\n                    return this.dataService.product.deleteProductOption(id);\r\n                }\r\n                else {\r\n                    return EMPTY;\r\n                }\r\n            }))\r\n                .subscribe(({ deleteProductOption }) => {\r\n                if (deleteProductOption.result === DeletionResult.DELETED) {\r\n                    this.notificationService.success(marker('common.notify-delete-success'), {\r\n                        entity: 'ProductOption',\r\n                    });\r\n                    optionGroup.values = optionGroup.values.filter(v => v.id !== id);\r\n                    this.refresh$.next();\r\n                }\r\n                else {\r\n                    this.notificationService.error(deleteProductOption.message ?? '');\r\n                }\r\n            });\r\n        }\r\n    }\r\n    setOptionToAddToVariant(variantId, optionGroupId, optionId) {\r\n        if (!this.optionsToAddToVariant[variantId]) {\r\n            this.optionsToAddToVariant[variantId] = {};\r\n        }\r\n        if (optionId) {\r\n            this.optionsToAddToVariant[variantId][optionGroupId] = optionId;\r\n        }\r\n        else {\r\n            delete this.optionsToAddToVariant[variantId][optionGroupId];\r\n        }\r\n    }\r\n    addOptionToVariant(variant) {\r\n        const optionIds = [\r\n            ...variant.options.map(o => o.id),\r\n            ...Object.values(this.optionsToAddToVariant[variant.id]),\r\n        ];\r\n        this.dataService.product\r\n            .updateProductVariants([\r\n            {\r\n                id: variant.id,\r\n                optionIds: unique(optionIds),\r\n            },\r\n        ])\r\n            .subscribe(({ updateProductVariants }) => {\r\n            this.refresh$.next();\r\n        });\r\n    }\r\n    deleteVariant(variant) {\r\n        this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-product-variant'),\r\n            translationVars: { name: variant.name },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => response\r\n            ? this.productDetailService.deleteProductVariant(variant.id, this.product.id)\r\n            : EMPTY))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n            this.refresh$.next();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n        });\r\n    }\r\n    createNewVariant() {\r\n        this.modalService\r\n            .fromComponent(CreateProductVariantDialogComponent, {\r\n            locals: {\r\n                product: this.product,\r\n            },\r\n        })\r\n            .pipe(switchMap(result => {\r\n            if (result) {\r\n                return this.dataService.product.createProductVariants([result]);\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(result => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n            this.refresh$.next();\r\n        });\r\n    }\r\n    getOption(variant, groupId) {\r\n        return variant.options.find(o => o.groupId === groupId);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantsEditorComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1.DataService }, { token: ProductDetailService }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductVariantsEditorComponent, selector: \"vdr-product-variants-editor\", ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantsEditorComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variants-editor', changeDetection: ChangeDetectionStrategy.Default, template: \"<vdr-page-block>\\r\\n    <vdr-card>\\r\\n        <div *ngFor=\\\"let group of optionGroups; index as i\\\" class=\\\"option-groups\\\">\\r\\n            <vdr-form-field [label]=\\\"'catalog.option' | translate\\\">\\r\\n                <input clrInput [(ngModel)]=\\\"group.name\\\" name=\\\"name\\\" [readonly]=\\\"!group.isNew\\\" />\\r\\n            </vdr-form-field>\\r\\n            <vdr-form-field [label]=\\\"'catalog.option-values' | translate\\\" class=\\\"flex-spacer\\\">\\r\\n                <vdr-option-value-input\\r\\n                    #optionValueInputComponent\\r\\n                    [options]=\\\"group.values\\\"\\r\\n                    [groupName]=\\\"group.name\\\"\\r\\n                    [disabled]=\\\"group.name === ''\\\"\\r\\n                    (add)=\\\"addOption(i, $event.name)\\\"\\r\\n                    (remove)=\\\"removeOption(i, $event)\\\"\\r\\n                ></vdr-option-value-input>\\r\\n            </vdr-form-field>\\r\\n            <div>\\r\\n                <button class=\\\"button-small mt-4\\\" (click)=\\\"removeOptionGroup(group)\\\">\\r\\n                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <button class=\\\"button mt-1\\\" (click)=\\\"addOptionGroup()\\\">\\r\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n            {{ 'catalog.create-product-option-group' | translate }}\\r\\n        </button>\\r\\n    </vdr-card>\\r\\n    <vdr-card [paddingX]=\\\"false\\\">\\r\\n        <div class=\\\"mx-3\\\">\\r\\n            <button class=\\\"button\\\" (click)=\\\"createNewVariant()\\\">\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-product-variant' | translate }}\\r\\n            </button>\\r\\n        </div>\\r\\n        <vdr-data-table-2\\r\\n            id=\\\"manage-product-variant-list\\\"\\r\\n            [items]=\\\"variants$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        >\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n            />\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.name }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.sku }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column *ngFor=\\\"let optionGroup of optionGroups$ | async\\\" [heading]=\\\"optionGroup.name\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngIf=\\\"getOption(variant, optionGroup.id) as option; else selectOption\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        >{{ option.name }}</vdr-chip\\r\\n                    >\\r\\n                    <ng-template #selectOption>\\r\\n                        <div class=\\\"flex center\\\">\\r\\n                            <ng-select\\r\\n                                [items]=\\\"optionGroup.options\\\"\\r\\n                                bindLabel=\\\"name\\\"\\r\\n                                bindValue=\\\"id\\\"\\r\\n                                appendTo=\\\"body\\\"\\r\\n                                (change)=\\\"setOptionToAddToVariant(variant.id, optionGroup.id, $event?.id)\\\"\\r\\n                            ></ng-select>\\r\\n                            <button\\r\\n                                class=\\\"button-small ml-1\\\"\\r\\n                                [class.primary]=\\\"!!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                                (click)=\\\"addOptionToVariant(variant)\\\"\\r\\n                                [disabled]=\\\"!optionsToAddToVariant[variant.id]?.[optionGroup.id]\\\"\\r\\n                            >\\r\\n                                <clr-icon shape=\\\"floppy\\\"></clr-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.delete' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-variant=\\\"item\\\">\\r\\n                    <button class=\\\"button-small\\\" (click)=\\\"deleteVariant(variant)\\\">\\r\\n                        <clr-icon shape=\\\"trash is-danger\\\"></clr-icon>\\r\\n                    </button>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n        </vdr-data-table-2>\\r\\n    </vdr-card>\\r\\n</vdr-page-block>\\r\\n\", styles: [\".option-groups{display:flex;width:100%;gap:var(--space-unit)}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }, { type: i1.DataService }, { type: ProductDetailService }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i0.ChangeDetectorRef }]; } });\n\nclass ProductVariantsResolver extends BaseEntityResolver {\r\n    constructor(router, dataService) {\r\n        super(router, {\r\n            __typename: 'Product',\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            name: '',\r\n            languageCode: '',\r\n            optionGroups: [],\r\n            variants: [],\r\n        }, id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantsResolver, deps: [{ token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Injectable }); }\r\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantsResolver, providedIn: 'root' }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantsResolver, decorators: [{\r\n            type: Injectable,\r\n            args: [{\r\n                    providedIn: 'root',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.Router }, { type: i1.DataService }]; } });\n\nconst createRoutes = (pageService) => [\r\n    {\r\n        path: 'inventory',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-list',\r\n            breadcrumb: marker('breadcrumb.inventory'),\r\n        },\r\n        children: pageService.getPageTabRoutes('product-list'),\r\n    },\r\n    {\r\n        path: 'inventory/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-detail',\r\n            breadcrumb: { label: marker('breadcrumb.inventory'), link: ['../', 'inventory'] },\r\n        },\r\n        children: [\r\n            {\r\n                path: 'manage-variants',\r\n                component: ProductVariantsEditorComponent,\r\n                canDeactivate: [CanDeactivateDetailGuard],\r\n                data: {\r\n                    breadcrumb: ({ product }) => [\r\n                        {\r\n                            label: `${product.name}`,\r\n                            link: ['../'],\r\n                        },\r\n                        {\r\n                            label: marker('breadcrumb.manage-variants'),\r\n                            link: ['manage-variants'],\r\n                        },\r\n                    ],\r\n                },\r\n                resolve: {\r\n                    product: (route) => inject(DataService)\r\n                        .product.getProductVariantsOptions(route.parent?.params.id)\r\n                        .mapSingle(data => data.product),\r\n                },\r\n            },\r\n            ...pageService.getPageTabRoutes('product-detail'),\r\n        ],\r\n    },\r\n    {\r\n        path: 'inventory/:productId/variants/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'product-variant-detail',\r\n            breadcrumb: { label: marker('breadcrumb.inventory'), link: ['../', 'inventory'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('product-variant-detail'),\r\n    },\r\n    {\r\n        path: 'inventory/:id/options',\r\n        component: ProductOptionsEditorComponent,\r\n        resolve: createResolveData(ProductVariantsResolver),\r\n        canDeactivate: [CanDeactivateDetailGuard],\r\n        data: {\r\n            breadcrumb: productOptionsEditorBreadcrumb,\r\n        },\r\n    },\r\n    {\r\n        path: 'inventory/stock-locations/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'stock-location-detail',\r\n            breadcrumb: [\r\n                { label: marker('breadcrumb.inventory'), link: ['../', 'inventory'] },\r\n                {\r\n                    label: marker('breadcrumb.stock-locations'),\r\n                    link: ['../', 'inventory', 'stock-locations'],\r\n                },\r\n            ],\r\n        },\r\n        children: pageService.getPageTabRoutes('stock-location-detail'),\r\n    },\r\n    {\r\n        path: 'facets',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'facet-list',\r\n            breadcrumb: marker('breadcrumb.facets'),\r\n        },\r\n        children: pageService.getPageTabRoutes('facet-list'),\r\n    },\r\n    {\r\n        path: 'facets/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'facet-detail',\r\n            breadcrumb: { label: marker('breadcrumb.facets'), link: ['../', 'facets'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('facet-detail'),\r\n    },\r\n    {\r\n        path: 'collections',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'collection-list',\r\n            breadcrumb: marker('breadcrumb.collections'),\r\n        },\r\n        children: pageService.getPageTabRoutes('collection-list'),\r\n    },\r\n    {\r\n        path: 'collections/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'collection-detail',\r\n            breadcrumb: { label: marker('breadcrumb.collections'), link: ['../', 'collections'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('collection-detail'),\r\n    },\r\n    {\r\n        path: 'assets',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'asset-list',\r\n            breadcrumb: marker('breadcrumb.assets'),\r\n        },\r\n        children: pageService.getPageTabRoutes('asset-list'),\r\n    },\r\n    {\r\n        path: 'assets/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'asset-detail',\r\n            breadcrumb: { label: marker('breadcrumb.assets'), link: ['../', 'assets'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('asset-detail'),\r\n    },\r\n];\r\nfunction productOptionsEditorBreadcrumb(data, params) {\r\n    return data.entity.pipe(map((entity) => [\r\n        {\r\n            label: marker('breadcrumb.inventory'),\r\n            link: ['../', 'inventory'],\r\n        },\r\n        {\r\n            label: `${entity.name}`,\r\n            link: ['../', 'inventory', params.id],\r\n        },\r\n        {\r\n            label: marker('breadcrumb.product-options'),\r\n            link: ['options'],\r\n        },\r\n    ]));\r\n}\n\nclass ApplyFacetDialogComponent {\r\n    constructor(changeDetector) {\r\n        this.changeDetector = changeDetector;\r\n        this.selectedValues = [];\r\n    }\r\n    ngAfterViewInit() {\r\n        setTimeout(() => this.selector.focus(), 0);\r\n    }\r\n    selectValues() {\r\n        this.resolveWith(this.selectedValues);\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ApplyFacetDialogComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ApplyFacetDialogComponent, selector: \"vdr-apply-facet-dialog\", viewQueries: [{ propertyName: \"selector\", first: true, predicate: FacetValueSelectorComponent, descendants: true }], ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ApplyFacetDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-apply-facet-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\\r\\n\\r\\n<vdr-facet-value-selector\\r\\n    (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n></vdr-facet-value-selector>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"selectValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.add-facets' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { selector: [{\r\n                type: ViewChild,\r\n                args: [FacetValueSelectorComponent]\r\n            }] } });\n\nconst ASSET_DETAIL_QUERY = gql `\r\n    query AssetDetailQuery($id: ID!) {\r\n        asset(id: $id) {\r\n            ...Asset\r\n            tags {\r\n                ...Tag\r\n            }\r\n        }\r\n    }\r\n    ${ASSET_FRAGMENT}\r\n    ${TAG_FRAGMENT}\r\n`;\r\nclass AssetDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(notificationService, dataService, formBuilder) {\r\n        super();\r\n        this.notificationService = notificationService;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.customFields = this.getCustomFieldConfig('Asset');\r\n        this.detailForm = new FormGroup({\r\n            name: new FormControl(''),\r\n            tags: new FormControl([]),\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    onAssetChange(event) {\r\n        this.detailForm.get('name')?.setValue(event.name);\r\n        this.detailForm.get('tags')?.setValue(event.tags);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n    save() {\r\n        this.dataService.product\r\n            .updateAsset({\r\n            id: this.id,\r\n            name: this.detailForm.value.name,\r\n            tags: this.detailForm.value.tags,\r\n            customFields: this.detailForm.value.customFields,\r\n        })\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Asset' });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Asset',\r\n            });\r\n        });\r\n    }\r\n    setFormValues(entity, languageCode) {\r\n        this.detailForm.get('name')?.setValue(entity.name);\r\n        this.detailForm.get('tags')?.setValue(entity.tags.map(t => t.id));\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssetDetailComponent, deps: [{ token: i1.NotificationService }, { token: i1.DataService }, { token: i2.UntypedFormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: AssetDetailComponent, selector: \"vdr-asset-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"], dependencies: [{ kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.AssetPreviewComponent, selector: \"vdr-asset-preview\", inputs: [\"asset\", \"assets\", \"editable\", \"customFields\", \"customFieldsForm\"], outputs: [\"assetChange\", \"editClick\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssetDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-asset-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"asset-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateAsset']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-page-block>\\r\\n    <vdr-asset-preview\\r\\n        [asset]=\\\"entity$ | async\\\"\\r\\n        [editable]=\\\"true\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsForm]=\\\"detailForm.get('customFields')\\\"\\r\\n        (assetChange)=\\\"onAssetChange($event)\\\"\\r\\n    />\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.NotificationService }, { type: i1.DataService }, { type: i2.UntypedFormBuilder }]; } });\n\nclass AssetListComponent extends BaseListComponent {\r\n    constructor(notificationService, modalService, dataService, router, route) {\r\n        super(router, route);\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.dataService = dataService;\r\n        this.searchTerm$ = new BehaviorSubject(undefined);\r\n        this.filterByTags$ = new BehaviorSubject(undefined);\r\n        this.uploading = false;\r\n        super.setQueryFn((...args) => this.dataService.product.getAssetList(...args).refetchOnChannelChange(), data => data.assets, (skip, take) => {\r\n            const searchTerm = this.searchTerm$.value;\r\n            const tags = this.filterByTags$.value?.map(t => t.value);\r\n            return {\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    ...(searchTerm\r\n                        ? {\r\n                            filter: {\r\n                                name: { contains: searchTerm },\r\n                            },\r\n                        }\r\n                        : {}),\r\n                    sort: {\r\n                        createdAt: SortOrder.DESC,\r\n                    },\r\n                    tags,\r\n                    tagsOperator: LogicalOperator.AND,\r\n                },\r\n            };\r\n        }, { take: 25, skip: 0 });\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })));\r\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\r\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\r\n    }\r\n    filesSelected(files) {\r\n        if (files.length) {\r\n            this.uploading = true;\r\n            this.dataService.product\r\n                .createAssets(files)\r\n                .pipe(finalize(() => (this.uploading = false)))\r\n                .subscribe(({ createAssets }) => {\r\n                let successCount = 0;\r\n                for (const result of createAssets) {\r\n                    switch (result.__typename) {\r\n                        case 'Asset':\r\n                            successCount++;\r\n                            break;\r\n                        case 'MimeTypeError':\r\n                            this.notificationService.error(result.message);\r\n                            break;\r\n                    }\r\n                }\r\n                if (0 < successCount) {\r\n                    super.refresh();\r\n                    this.notificationService.success(marker('asset.notify-create-assets-success'), {\r\n                        count: successCount,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    deleteAssets(assets) {\r\n        this.showModalAndDelete(assets.map(a => a.id))\r\n            .pipe(switchMap(response => {\r\n            if (response.result === DeletionResult.DELETED) {\r\n                return [true];\r\n            }\r\n            else {\r\n                return this.showModalAndDelete(assets.map(a => a.id), response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\r\n            }\r\n        }))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'Assets',\r\n            });\r\n            this.refresh();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'Assets',\r\n            });\r\n        });\r\n    }\r\n    showModalAndDelete(assetIds, message) {\r\n        return this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-assets'),\r\n            translationVars: {\r\n                count: assetIds.length,\r\n            },\r\n            body: message,\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)), map(res => res.deleteAssets));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssetListComponent, deps: [{ token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.DataService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: AssetListComponent, selector: \"vdr-asset-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"], dependencies: [{ kind: \"component\", type: i1.AssetSearchInputComponent, selector: \"vdr-asset-search-input\", inputs: [\"tags\"], outputs: [\"searchTermChange\", \"tagsChange\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"component\", type: i1.AssetFileInputComponent, selector: \"vdr-asset-file-input\", inputs: [\"dropZoneTarget\", \"uploading\"], outputs: [\"selectFiles\"] }, { kind: \"component\", type: i1.AssetGalleryComponent, selector: \"vdr-asset-gallery\", inputs: [\"assets\", \"multiSelect\", \"canDelete\"], outputs: [\"selectionChange\", \"deleteAssets\", \"editAssetClick\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssetListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-asset-list', template: \"<vdr-page-block>\\r\\n    <div class=\\\"my-2\\\">\\r\\n        <vdr-asset-search-input\\r\\n            [tags]=\\\"allTags$ | async\\\"\\r\\n            (searchTermChange)=\\\"searchTerm$.next($event)\\\"\\r\\n            (tagsChange)=\\\"filterByTags$.next($event)\\\"\\r\\n        >\\r\\n            <vdr-asset-file-input\\r\\n                (selectFiles)=\\\"filesSelected($event)\\\"\\r\\n                [uploading]=\\\"uploading\\\"\\r\\n                dropZoneTarget=\\\".content-area\\\"\\r\\n            ></vdr-asset-file-input>\\r\\n        </vdr-asset-search-input>\\r\\n    </div>\\r\\n    <vdr-asset-gallery\\r\\n        [assets]=\\\"(items$ | async)! | paginate : (paginationConfig$ | async) || {}\\\"\\r\\n        [multiSelect]=\\\"true\\\"\\r\\n        [canDelete]=\\\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\\\"\\r\\n        (deleteAssets)=\\\"deleteAssets($event)\\\"\\r\\n    ></vdr-asset-gallery>\\r\\n\\r\\n    <div class=\\\"paging-controls\\\">\\r\\n        <vdr-items-per-page-controls\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n        ></vdr-items-per-page-controls>\\r\\n\\r\\n        <vdr-pagination-controls\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n        ></vdr-pagination-controls>\\r\\n    </div>\\r\\n</vdr-page-block>\\r\\n\", styles: [\":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.DataService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }]; } });\n\n/**\r\n * A component which displays the Assets, and allows assets to be removed and\r\n * added, and for the featured asset to be set.\r\n *\r\n * Note: rather complex code for drag drop is due to a limitation of the default CDK implementation\r\n * which is addressed by a work-around from here: https://github.com/angular/components/issues/13372#issuecomment-483998378\r\n */\r\nclass AssetsComponent {\r\n    set assetsSetter(val) {\r\n        // create a new non-readonly array of assets\r\n        this.assets = (val || []).slice();\r\n    }\r\n    constructor(modalService, changeDetector) {\r\n        this.modalService = modalService;\r\n        this.changeDetector = changeDetector;\r\n        this.compact = false;\r\n        // eslint-disable-next-line @angular-eslint/no-output-native\r\n        this.change = new EventEmitter();\r\n        this.assets = [];\r\n    }\r\n    selectAssets() {\r\n        this.modalService\r\n            .fromComponent(AssetPickerDialogComponent, {\r\n            size: 'xl',\r\n        })\r\n            .subscribe(result => {\r\n            if (result && result.length) {\r\n                this.assets = unique(this.assets.concat(result), 'id');\r\n                if (!this.featuredAsset) {\r\n                    this.featuredAsset = result[0];\r\n                }\r\n                this.emitChangeEvent(this.assets, this.featuredAsset);\r\n                this.changeDetector.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    setAsFeatured(asset) {\r\n        this.featuredAsset = asset;\r\n        this.emitChangeEvent(this.assets, asset);\r\n    }\r\n    isFeatured(asset) {\r\n        return !!this.featuredAsset && this.featuredAsset.id === asset.id;\r\n    }\r\n    previewAsset(asset) {\r\n        this.modalService\r\n            .fromComponent(AssetPreviewDialogComponent, {\r\n            size: 'xl',\r\n            closable: true,\r\n            locals: { asset, assets: this.assets },\r\n        })\r\n            .subscribe();\r\n    }\r\n    removeAsset(asset) {\r\n        this.assets = this.assets.filter(a => a.id !== asset.id);\r\n        if (this.featuredAsset && this.featuredAsset.id === asset.id) {\r\n            this.featuredAsset = this.assets.length > 0 ? this.assets[0] : undefined;\r\n        }\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n    emitChangeEvent(assets, featuredAsset) {\r\n        this.change.emit({\r\n            assets,\r\n            featuredAsset,\r\n        });\r\n    }\r\n    dropListDropped(event) {\r\n        moveItemInArray(this.assets, event.previousContainer.data, event.container.data);\r\n        this.emitChangeEvent(this.assets, this.featuredAsset);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssetsComponent, deps: [{ token: i1.ModalService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: AssetsComponent, selector: \"vdr-assets\", inputs: { assetsSetter: [\"assets\", \"assetsSetter\"], featuredAsset: \"featuredAsset\", compact: \"compact\", updatePermissions: \"updatePermissions\" }, outputs: { change: \"change\" }, host: { properties: { \"class.compact\": \"this.compact\" } }, ngImport: i0, template: \"<div *ngIf=\\\"!compact; else compactView\\\" class=\\\"standard-view-container\\\">\\r\\n    <div class=\\\"featured-asset\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'small'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"128\\\"></clr-icon>\\r\\n            <div>{{ 'catalog.no-featured-asset' | translate }}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"all-assets-container\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <div *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n        <button class=\\\"btn\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n            {{ 'asset.add-asset' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #compactView>\\r\\n    <div class=\\\"featured-asset compact\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'thumb'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"150\\\"></clr-icon>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <button\\r\\n        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n        class=\\\"compact-select btn btn-icon btn-sm btn-block\\\"\\r\\n        [title]=\\\"'asset.add-asset' | translate\\\"\\r\\n        (click)=\\\"selectAssets()\\\"\\r\\n    >\\r\\n        <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n        {{ 'asset.add-asset' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #assetList>\\r\\n    <div class=\\\"all-assets\\\" [class.compact]=\\\"compact\\\" cdkDropListGroup>\\r\\n        <div\\r\\n            *ngFor=\\\"let asset of assets; let index = index\\\"\\r\\n            class=\\\"drop-list\\\"\\r\\n            cdkDropList\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"index\\\"\\r\\n            [cdkDropListDisabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n            (cdkDropListDropped)=\\\"dropListDropped($event)\\\"\\r\\n        >\\r\\n            <vdr-dropdown cdkDrag>\\r\\n                <div\\r\\n                    class=\\\"asset-thumb\\\"\\r\\n                    vdrDropdownTrigger\\r\\n                    [class.featured]=\\\"isFeatured(asset)\\\"\\r\\n                    [title]=\\\"\\\"\\r\\n                    tabindex=\\\"0\\\"\\r\\n                >\\r\\n                    <img [src]=\\\"asset | assetPreview : 'tiny'\\\" />\\r\\n                </div>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"previewAsset(asset)\\\">\\r\\n                        {{ 'asset.preview' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        [disabled]=\\\"isFeatured(asset) || !(updatePermissions | hasPermission)\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"setAsFeatured(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.set-as-featured-asset' | translate }}\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"remove-asset\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        (click)=\\\"removeAsset(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.remove-asset' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;container-type:inline-size}:host.compact{width:162px}.standard-view-container{display:flex;gap:calc(var(--space-unit) * 2)}.all-assets-container{display:flex;max-width:50%;flex-direction:column;justify-content:space-between}@container (max-width: 500px){.standard-view-container{flex-direction:column}.all-assets-container{max-width:100%}}.placeholder{text-align:center;color:var(--color-grey-300)}.featured-asset{text-align:center;background:var(--color-component-bg-200);padding:6px;cursor:pointer;border-radius:var(--border-radius-img)}.featured-asset img{border-radius:var(--border-radius-img);max-height:400px;max-width:100%;object-fit:contain}.featured-asset.compact{width:100%;min-height:40px;position:relative;padding:6px}.featured-asset .compact-select{position:absolute;bottom:6px;right:6px;margin:0}.all-assets{display:flex;flex-wrap:wrap}.all-assets .drop-list{min-width:60px}.all-assets .asset-thumb{margin:3px;padding:0;border:2px solid var(--color-component-border-100);border-radius:var(--border-radius-img);cursor:pointer}.all-assets .asset-thumb img{width:50px;height:50px;border-radius:var(--border-radius-img)}.all-assets .asset-thumb.featured{border-color:var(--color-primary-500);border-radius:calc(var(--border-radius-img) + 2px)}.all-assets .remove-asset{color:var(--color-warning-500)}.all-assets.compact .drop-list{min-width:54px}.all-assets.compact .asset-thumb{margin:1px;border-width:1px}.all-assets.compact .cdk-drag-placeholder,.all-assets.compact .cdk-drag-placeholder .asset-thumb{width:50px}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.all-assets.cdk-drop-list-dragging vdr-dropdown:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drop-list-dragging>*:not(.cdk-drag-placeholder){display:none}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssetsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-assets', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"!compact; else compactView\\\" class=\\\"standard-view-container\\\">\\r\\n    <div class=\\\"featured-asset\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'small'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"128\\\"></clr-icon>\\r\\n            <div>{{ 'catalog.no-featured-asset' | translate }}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"all-assets-container\\\">\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <div *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n        <button class=\\\"btn\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n            {{ 'asset.add-asset' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #compactView>\\r\\n    <div class=\\\"featured-asset compact\\\">\\r\\n        <img\\r\\n            *ngIf=\\\"featuredAsset\\\"\\r\\n            [src]=\\\"featuredAsset | assetPreview : 'thumb'\\\"\\r\\n            (click)=\\\"previewAsset(featuredAsset)\\\"\\r\\n        />\\r\\n\\r\\n        <div class=\\\"placeholder\\\" *ngIf=\\\"!featuredAsset\\\" (click)=\\\"selectAssets()\\\">\\r\\n            <clr-icon shape=\\\"image\\\" size=\\\"150\\\"></clr-icon>\\r\\n        </div>\\r\\n    </div>\\r\\n    <ng-container *ngTemplateOutlet=\\\"assetList\\\"></ng-container>\\r\\n    <button\\r\\n        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n        class=\\\"compact-select btn btn-icon btn-sm btn-block\\\"\\r\\n        [title]=\\\"'asset.add-asset' | translate\\\"\\r\\n        (click)=\\\"selectAssets()\\\"\\r\\n    >\\r\\n        <clr-icon shape=\\\"attachment\\\"></clr-icon>\\r\\n        {{ 'asset.add-asset' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #assetList>\\r\\n    <div class=\\\"all-assets\\\" [class.compact]=\\\"compact\\\" cdkDropListGroup>\\r\\n        <div\\r\\n            *ngFor=\\\"let asset of assets; let index = index\\\"\\r\\n            class=\\\"drop-list\\\"\\r\\n            cdkDropList\\r\\n            cdkDropListOrientation=\\\"horizontal\\\"\\r\\n            [cdkDropListData]=\\\"index\\\"\\r\\n            [cdkDropListDisabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n            (cdkDropListDropped)=\\\"dropListDropped($event)\\\"\\r\\n        >\\r\\n            <vdr-dropdown cdkDrag>\\r\\n                <div\\r\\n                    class=\\\"asset-thumb\\\"\\r\\n                    vdrDropdownTrigger\\r\\n                    [class.featured]=\\\"isFeatured(asset)\\\"\\r\\n                    [title]=\\\"\\\"\\r\\n                    tabindex=\\\"0\\\"\\r\\n                >\\r\\n                    <img [src]=\\\"asset | assetPreview : 'tiny'\\\" />\\r\\n                </div>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"previewAsset(asset)\\\">\\r\\n                        {{ 'asset.preview' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        [disabled]=\\\"isFeatured(asset) || !(updatePermissions | hasPermission)\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"setAsFeatured(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.set-as-featured-asset' | translate }}\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"remove-asset\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        (click)=\\\"removeAsset(asset)\\\"\\r\\n                    >\\r\\n                        {{ 'asset.remove-asset' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;container-type:inline-size}:host.compact{width:162px}.standard-view-container{display:flex;gap:calc(var(--space-unit) * 2)}.all-assets-container{display:flex;max-width:50%;flex-direction:column;justify-content:space-between}@container (max-width: 500px){.standard-view-container{flex-direction:column}.all-assets-container{max-width:100%}}.placeholder{text-align:center;color:var(--color-grey-300)}.featured-asset{text-align:center;background:var(--color-component-bg-200);padding:6px;cursor:pointer;border-radius:var(--border-radius-img)}.featured-asset img{border-radius:var(--border-radius-img);max-height:400px;max-width:100%;object-fit:contain}.featured-asset.compact{width:100%;min-height:40px;position:relative;padding:6px}.featured-asset .compact-select{position:absolute;bottom:6px;right:6px;margin:0}.all-assets{display:flex;flex-wrap:wrap}.all-assets .drop-list{min-width:60px}.all-assets .asset-thumb{margin:3px;padding:0;border:2px solid var(--color-component-border-100);border-radius:var(--border-radius-img);cursor:pointer}.all-assets .asset-thumb img{width:50px;height:50px;border-radius:var(--border-radius-img)}.all-assets .asset-thumb.featured{border-color:var(--color-primary-500);border-radius:calc(var(--border-radius-img) + 2px)}.all-assets .remove-asset{color:var(--color-warning-500)}.all-assets.compact .drop-list{min-width:54px}.all-assets.compact .asset-thumb{margin:1px;border-width:1px}.all-assets.compact .cdk-drag-placeholder,.all-assets.compact .cdk-drag-placeholder .asset-thumb{width:50px}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.all-assets.cdk-drop-list-dragging vdr-dropdown:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drop-list-dragging>*:not(.cdk-drag-placeholder){display:none}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.ModalService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { assetsSetter: [{\r\n                type: Input,\r\n                args: ['assets']\r\n            }], featuredAsset: [{\r\n                type: Input\r\n            }], compact: [{\r\n                type: HostBinding,\r\n                args: ['class.compact']\r\n            }, {\r\n                type: Input\r\n            }], change: [{\r\n                type: Output\r\n            }], updatePermissions: [{\r\n                type: Input\r\n            }] } });\n\nclass AssignProductsToChannelDialogComponent {\r\n    get isProductVariantMode() {\r\n        return this.productVariantIds != null;\r\n    }\r\n    constructor(dataService, notificationService) {\r\n        this.dataService = dataService;\r\n        this.notificationService = notificationService;\r\n        this.priceFactorControl = new UntypedFormControl(1);\r\n        this.selectedChannelIdControl = new UntypedFormControl();\r\n    }\r\n    ngOnInit() {\r\n        const activeChannelId$ = this.dataService.client\r\n            .userStatus()\r\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\r\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\r\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            this.currentChannel = channels.items.find(c => c.id === activeChannelId);\r\n            this.availableChannels = channels.items;\r\n        });\r\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\r\n            this.selectChannel(ids);\r\n        });\r\n        this.variantsPreview$ = combineLatest(from(this.getTopVariants(10)), this.priceFactorControl.valueChanges.pipe(startWith(1))).pipe(map(([variants, factor]) => variants.map(v => ({\r\n            id: v.id,\r\n            name: v.name,\r\n            price: v.price,\r\n            pricePreview: v.price * +factor,\r\n        }))));\r\n    }\r\n    selectChannel(channelIds) {\r\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\r\n    }\r\n    assign() {\r\n        const selectedChannel = this.selectedChannel;\r\n        if (selectedChannel) {\r\n            if (!this.isProductVariantMode) {\r\n                this.dataService.product\r\n                    .assignProductsToChannel({\r\n                    channelId: selectedChannel.id,\r\n                    productIds: this.productIds,\r\n                    priceFactor: +this.priceFactorControl.value,\r\n                })\r\n                    .subscribe(() => {\r\n                    this.notificationService.success(marker('catalog.assign-product-to-channel-success'), {\r\n                        channel: selectedChannel.code,\r\n                        count: this.productIds.length,\r\n                    });\r\n                    this.resolveWith(true);\r\n                });\r\n            }\r\n            else if (this.productVariantIds) {\r\n                this.dataService.product\r\n                    .assignVariantsToChannel({\r\n                    channelId: selectedChannel.id,\r\n                    productVariantIds: this.productVariantIds,\r\n                    priceFactor: +this.priceFactorControl.value,\r\n                })\r\n                    .subscribe(() => {\r\n                    this.notificationService.success(marker('catalog.assign-variant-to-channel-success'), {\r\n                        channel: selectedChannel.code,\r\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                        count: this.productVariantIds.length,\r\n                    });\r\n                    this.resolveWith(true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    async getTopVariants(take) {\r\n        return (await lastValueFrom(this.dataService.product.getProductVariants({\r\n            filterOperator: LogicalOperator.OR,\r\n            filter: {\r\n                productId: { in: this.productIds },\r\n                id: { in: this.productVariantIds },\r\n            },\r\n            take,\r\n        }).single$)).productVariants.items;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssignProductsToChannelDialogComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: AssignProductsToChannelDialogComponent, selector: \"vdr-assign-products-to-channel-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: [\"max\"] }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.ChannelAssignmentControlComponent, selector: \"vdr-channel-assignment-control\", inputs: [\"multiple\", \"includeDefaultChannel\", \"disableChannelIds\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: AssignProductsToChannelDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-assign-products-to-channel-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    <ng-container *ngIf=\\\"isProductVariantMode; else productModeTitle\\\">{{\\r\\n        'catalog.assign-variants-to-channel' | translate\\r\\n    }}</ng-container>\\r\\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'common.channel' | translate }}</label>\\r\\n        <vdr-channel-assignment-control\\r\\n            clrInput\\r\\n            [multiple]=\\\"false\\\"\\r\\n            [includeDefaultChannel]=\\\"false\\\"\\r\\n            [disableChannelIds]=\\\"currentChannelIds\\\"\\r\\n            [formControl]=\\\"selectedChannelIdControl\\\"\\r\\n        ></vdr-channel-assignment-control>\\r\\n    </clr-input-container>\\r\\n    <div class=\\\"flex-spacer\\\"></div>\\r\\n    <clr-input-container>\\r\\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\\r\\n        <input clrInput type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" [formControl]=\\\"priceFactorControl\\\" />\\r\\n    </clr-input-container>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"channel-price-preview\\\">\\r\\n    <label class=\\\"clr-control-label\\\">{{ 'catalog.channel-price-preview' | translate }}</label>\\r\\n    <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <th>{{ 'common.name' | translate }}</th>\\r\\n                <th>\\r\\n                    {{\\r\\n                        'catalog.price-in-channel'\\r\\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\\r\\n                    }}\\r\\n                </th>\\r\\n                <th>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noSelection>\\r\\n                        {{ 'catalog.no-channel-selected' | translate }}\\r\\n                    </ng-template>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let row of variantsPreview$ | async\\\">\\r\\n                <td>{{ row.name }}</td>\\r\\n                <td>{{ row.price | localeCurrency: currentChannel?.defaultCurrencyCode }}</td>\\r\\n                <td>\\r\\n                    <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noChannelSelected\\\">\\r\\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.defaultCurrencyCode }}\\r\\n                    </ng-template>\\r\\n                    <ng-template #noChannelSelected> - </ng-template>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"assign()\\\" [disabled]=\\\"!selectedChannel\\\" class=\\\"btn btn-primary\\\">\\r\\n        <ng-template [ngIf]=\\\"selectedChannel\\\" [ngIfElse]=\\\"noSelection\\\">\\r\\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\\r\\n        </ng-template>\\r\\n        <ng-template #noSelection>\\r\\n            {{ 'catalog.no-channel-selected' | translate }}\\r\\n        </ng-template>\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.NotificationService }]; } });\n\nconst GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetProductsWithFacetValuesByIds($ids: [String!]!) {\r\n        products(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst GET_VARIANTS_WITH_FACET_VALUES_BY_IDS = gql `\r\n    query GetVariantsWithFacetValuesByIds($ids: [String!]!) {\r\n        productVariants(options: { filter: { id: { in: $ids } } }) {\r\n            items {\r\n                id\r\n                name\r\n                sku\r\n                facetValues {\r\n                    id\r\n                    name\r\n                    code\r\n                    facet {\r\n                        id\r\n                        name\r\n                        code\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst UPDATE_PRODUCTS_BULK = gql `\r\n    mutation UpdateProductsBulk($input: [UpdateProductInput!]!) {\r\n        updateProducts(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst UPDATE_VARIANTS_BULK = gql `\r\n    mutation UpdateVariantsBulk($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            id\r\n            name\r\n            facetValues {\r\n                id\r\n                name\r\n                code\r\n            }\r\n        }\r\n    }\r\n`;\n\nclass BulkAddFacetValuesDialogComponent {\r\n    constructor(dataService, changeDetectorRef) {\r\n        this.dataService = dataService;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        /* provided by call to ModalService */\r\n        this.mode = 'product';\r\n        this.state = 'loading';\r\n        this.selectedValues = [];\r\n        this.items = [];\r\n        this.facetValuesRemoved = false;\r\n    }\r\n    ngOnInit() {\r\n        const fetchData$ = this.mode === 'product'\r\n            ? this.dataService\r\n                .query(GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, {\r\n                ids: this.ids ?? [],\r\n            })\r\n                .mapSingle(({ products }) => products.items.map(p => ({ ...p, facetValues: [...p.facetValues] })))\r\n            : this.dataService\r\n                .query(GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, {\r\n                ids: this.ids ?? [],\r\n            })\r\n                .mapSingle(({ productVariants }) => productVariants.items.map(p => ({ ...p, facetValues: [...p.facetValues] })));\r\n        this.subscription = fetchData$.subscribe({\r\n            next: items => {\r\n                this.items = items;\r\n                this.state = 'ready';\r\n                this.changeDetectorRef.markForCheck();\r\n            },\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    removeFacetValue(item, facetValueId) {\r\n        item.facetValues = item.facetValues.filter(fv => fv.id !== facetValueId);\r\n        this.facetValuesRemoved = true;\r\n    }\r\n    addFacetValues() {\r\n        const selectedFacetValueIds = this.selectedValues.map(sv => sv.id);\r\n        this.state = 'saving';\r\n        const save$ = this.mode === 'product'\r\n            ? this.dataService.mutate(UPDATE_PRODUCTS_BULK, {\r\n                input: this.items?.map(product => ({\r\n                    id: product.id,\r\n                    facetValueIds: unique([\r\n                        ...product.facetValues.map(fv => fv.id),\r\n                        ...selectedFacetValueIds,\r\n                    ]),\r\n                })),\r\n            })\r\n            : this.dataService.mutate(UPDATE_VARIANTS_BULK, {\r\n                input: this.items?.map(product => ({\r\n                    id: product.id,\r\n                    facetValueIds: unique([\r\n                        ...product.facetValues.map(fv => fv.id),\r\n                        ...selectedFacetValueIds,\r\n                    ]),\r\n                })),\r\n            });\r\n        return save$.subscribe(result => {\r\n            this.resolveWith(this.selectedValues);\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, deps: [{ token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: BulkAddFacetValuesDialogComponent, selector: \"vdr-bulk-add-facet-values-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrSpinner, selector: \"clr-spinner\", inputs: [\"clrInline\", \"clrInverse\", \"clrSmall\", \"clrMedium\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.FacetValueSelectorComponent, selector: \"vdr-facet-value-selector\", inputs: [\"readonly\", \"transformControlValueAccessorValue\"], outputs: [\"selectedValuesChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: BulkAddFacetValuesDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-bulk-add-facet-values-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.edit-facet-values' | translate }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"flex\\\">\\r\\n    <div class=\\\"flex center\\\">\\r\\n        <div class=\\\"mr2\\\">\\r\\n            {{ 'catalog.add-facet-value' | translate }}\\r\\n        </div>\\r\\n        <vdr-facet-value-selector\\r\\n            (selectedValuesChange)=\\\"selectedValues = $event\\\"\\r\\n        ></vdr-facet-value-selector>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\" *ngIf=\\\"state !== 'loading'; else placeholder\\\">\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of items\\\">\\r\\n            <td class=\\\"left align-middle\\\">\\r\\n                <div>{{ item.name }}</div>\\r\\n                <div *ngIf=\\\"item.sku\\\" class=\\\"sku\\\">{{ item.sku }}</div>\\r\\n            </td>\\r\\n            <td class=\\\"left\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let facetValue of item.facetValues\\\"\\r\\n                    [facetValue]=\\\"facetValue\\\"\\r\\n                    (remove)=\\\"removeFacetValue(item, facetValue.id)\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n    <div class=\\\"loading\\\">\\r\\n    <clr-spinner></clr-spinner>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"addFacetValues()\\\"\\r\\n        [disabled]=\\\"selectedValues.length === 0 && facetValuesRemoved === false\\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'common.update' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i0.ChangeDetectorRef }]; } });\n\nclass CollectionContentsComponent {\r\n    constructor(route, router, dataService) {\r\n        this.route = route;\r\n        this.router = router;\r\n        this.dataService = dataService;\r\n        this.previewUpdatedFilters = false;\r\n        this.filterTermControl = new UntypedFormControl('');\r\n        this.isLoading = false;\r\n        this.collectionIdChange$ = new BehaviorSubject('');\r\n        this.parentIdChange$ = new BehaviorSubject('');\r\n        this.filterChanges$ = new BehaviorSubject([]);\r\n        this.inheritFiltersChanges$ = new BehaviorSubject(true);\r\n        this.refresh$ = new BehaviorSubject(true);\r\n        this.destroy$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        this.contentsCurrentPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPage')), map(page => (!page ? 1 : +page)), startWith(1), distinctUntilChanged());\r\n        this.contentsItemsPerPage$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('contentsPerPage')), map(perPage => (!perPage ? 10 : +perPage)), startWith(10), distinctUntilChanged());\r\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(debounceTime(250), tap(() => this.setContentsPageNumber(1)), startWith(''));\r\n        const filterChanges$ = this.filterChanges$.asObservable().pipe(filter(() => this.previewUpdatedFilters), tap(() => this.setContentsPageNumber(1)), startWith([]));\r\n        const inheritFiltersChanges$ = this.inheritFiltersChanges$.asObservable().pipe(filter(() => this.inheritFilters != null), distinctUntilChanged(), tap(() => this.setContentsPageNumber(1)), startWith(true));\r\n        const fetchUpdate$ = combineLatest(this.collectionIdChange$, this.parentIdChange$, this.contentsCurrentPage$, this.contentsItemsPerPage$, filterTerm$, filterChanges$, inheritFiltersChanges$, this.refresh$);\r\n        const collection$ = fetchUpdate$.pipe(takeUntil(this.destroy$), tap(() => (this.isLoading = true)), debounceTime(50), switchMap(([id, parentId, currentPage, itemsPerPage, filterTerm, filters, inheritFilters]) => {\r\n            const take = itemsPerPage;\r\n            const skip = (currentPage - 1) * itemsPerPage;\r\n            if (filters.length && this.previewUpdatedFilters) {\r\n                const filterClause = filterTerm\r\n                    ? { name: { contains: filterTerm } }\r\n                    : undefined;\r\n                return this.dataService.collection\r\n                    .previewCollectionVariants({\r\n                    parentId,\r\n                    filters,\r\n                    inheritFilters,\r\n                }, {\r\n                    take,\r\n                    skip,\r\n                    filter: filterClause,\r\n                })\r\n                    .mapSingle(data => data.previewCollectionVariants)\r\n                    .pipe(catchError(() => of({ items: [], totalItems: 0 })));\r\n            }\r\n            else if (id) {\r\n                return this.dataService.collection\r\n                    .getCollectionContents(id, take, skip, filterTerm)\r\n                    .mapSingle(data => data.collection?.productVariants);\r\n            }\r\n            else {\r\n                return of(null);\r\n            }\r\n        }), tap(() => (this.isLoading = false)), finalize(() => (this.isLoading = false)));\r\n        this.contents$ = collection$.pipe(map(result => (result ? result.items : [])));\r\n        this.contentsTotalItems$ = collection$.pipe(map(result => (result ? result.totalItems : 0)));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if ('collectionId' in changes) {\r\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\r\n        }\r\n        if ('parentId' in changes) {\r\n            this.parentIdChange$.next(changes.parentId.currentValue);\r\n        }\r\n        if ('inheritFilters' in changes) {\r\n            this.inheritFiltersChanges$.next(changes.inheritFilters.currentValue);\r\n        }\r\n        if ('updatedFilters' in changes) {\r\n            if (this.updatedFilters) {\r\n                this.filterChanges$.next(this.updatedFilters);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n    setContentsPageNumber(page) {\r\n        this.setParam('contentsPage', page);\r\n    }\r\n    setContentsItemsPerPage(perPage) {\r\n        this.setParam('contentsPerPage', perPage);\r\n    }\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n    setParam(key, value) {\r\n        this.router.navigate(['./'], {\r\n            relativeTo: this.route,\r\n            queryParams: {\r\n                [key]: value,\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            replaceUrl: true,\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionContentsComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: { collectionId: \"collectionId\", parentId: \"parentId\", inheritFilters: \"inheritFilters\", updatedFilters: \"updatedFilters\", previewUpdatedFilters: \"previewUpdatedFilters\" }, queries: [{ propertyName: \"headerTemplate\", first: true, predicate: TemplateRef, descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/inventory', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionContentsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-contents', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"table-wrapper\\\">\\r\\n    <div class=\\\"progress loop\\\" [class.visible]=\\\"isLoading\\\"></div>\\r\\n    <div class=\\\"header-title-row\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\\\"\\r\\n        ></ng-container>\\r\\n    </div>\\r\\n    <vdr-data-table-2\\r\\n        id=\\\"collection-contents\\\"\\r\\n        [class.loading]=\\\"isLoading\\\"\\r\\n        [items]=\\\"contents$ | async\\\"\\r\\n        [itemsPerPage]=\\\"contentsItemsPerPage$ | async\\\"\\r\\n        [totalItems]=\\\"contentsTotalItems$ | async\\\"\\r\\n        [currentPage]=\\\"contentsCurrentPage$ | async\\\"\\r\\n        (pageChange)=\\\"setContentsPageNumber($event)\\\"\\r\\n        (itemsPerPageChange)=\\\"setContentsItemsPerPage($event)\\\"\\r\\n    >\\r\\n        <vdr-dt2-search\\r\\n            [searchTermControl]=\\\"filterTermControl\\\"\\r\\n            [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n        />\\r\\n        <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.id }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.created-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.createdAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.updated-at' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.updatedAt | localeDate : 'short' }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                <a class=\\\"button-ghost\\\" [routerLink]=\\\"['/catalog/inventory', variant.productId]\\\"\\r\\n                    ><span>{{ variant.name }}</span\\r\\n                    ><clr-icon shape=\\\"arrow right\\\"\\r\\n                /></a>\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n        <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" [optional]=\\\"false\\\">\\r\\n            <ng-template let-variant=\\\"item\\\">\\r\\n                {{ variant.sku }}\\r\\n            </ng-template>\\r\\n        </vdr-dt2-column>\\r\\n    </vdr-data-table-2>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.DataService }]; }, propDecorators: { collectionId: [{\r\n                type: Input\r\n            }], parentId: [{\r\n                type: Input\r\n            }], inheritFilters: [{\r\n                type: Input\r\n            }], updatedFilters: [{\r\n                type: Input\r\n            }], previewUpdatedFilters: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: ContentChild,\r\n                args: [TemplateRef, { static: true }]\r\n            }] } });\n\nclass CollectionDataTableComponent extends DataTable2Component {\r\n    constructor(changeDetectorRef, localStorageService, dataService, dragDrop) {\r\n        super(changeDetectorRef, localStorageService, dataService);\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.localStorageService = localStorageService;\r\n        this.dataService = dataService;\r\n        this.dragDrop = dragDrop;\r\n        this.changeOrder = new EventEmitter();\r\n        this.dragRefs = [];\r\n        this.absoluteIndex = {};\r\n        this.sortPredicate = (index, item) => {\r\n            const itemAtIndex = this.dropList.getSortedItems()[index];\r\n            return itemAtIndex?.data.collection.parentId === item.data.collection.parentId;\r\n        };\r\n    }\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n        if (changes.subCollections || changes.items) {\r\n            const allCollections = [];\r\n            for (const collection of this.items ?? []) {\r\n                allCollections.push(collection);\r\n                const subCollectionMatches = this.getSubcollections(collection);\r\n                allCollections.push(...subCollectionMatches.flat());\r\n            }\r\n            allCollections.forEach((collection, index) => (this.absoluteIndex[collection.id] = index));\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        this.collectionRowList.changes.subscribe((val) => {\r\n            this.dropList.getSortedItems().forEach(item => this.dropList.removeItem(item));\r\n            for (const ref of val.toArray()) {\r\n                ref.dropContainer = this.dropList;\r\n                ref._dragRef._withDropContainer(this.dropList._dropListRef);\r\n                this.dropList.addItem(ref);\r\n            }\r\n        });\r\n    }\r\n    getSubcollections(item) {\r\n        return this.subCollections?.filter(c => c.parentId === item.id) ?? [];\r\n    }\r\n    onDrop(event) {\r\n        const isTopLevel = event.item.data.collection.breadcrumbs.length === 2;\r\n        const pageIndexOffset = isTopLevel ? (this.currentPage - 1) * this.itemsPerPage : 0;\r\n        const parentId = event.item.data.collection.parentId;\r\n        const parentIndex = this.items.findIndex(i => i.id === parentId);\r\n        const adjustedIndex = pageIndexOffset + event.currentIndex - parentIndex - 1;\r\n        this.changeOrder.emit({\r\n            collectionId: event.item.data.collection.id,\r\n            index: adjustedIndex,\r\n            parentId: event.item.data.collection.parentId,\r\n        });\r\n        if (isTopLevel) {\r\n            this.items = [...this.items];\r\n            this.items.splice(event.previousIndex, 1);\r\n            this.items.splice(event.currentIndex, 0, event.item.data.collection);\r\n        }\r\n        else {\r\n            const parent = this.items.find(i => i.id === parentId);\r\n            if (parent) {\r\n                const subCollections = this.getSubcollections(parent);\r\n                const adjustedPreviousIndex = pageIndexOffset + event.previousIndex - parentIndex - 1;\r\n                subCollections.splice(adjustedPreviousIndex, 1);\r\n                subCollections.splice(event.currentIndex, 0, event.item.data.collection);\r\n            }\r\n        }\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionDataTableComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.LocalStorageService }, { token: i1.DataService }, { token: i2$1.DragDrop }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: { subCollections: \"subCollections\" }, outputs: { changeOrder: \"changeOrder\" }, viewQueries: [{ propertyName: \"dropList\", first: true, predicate: CdkDropList, descendants: true, static: true }, { propertyName: \"collectionRowList\", predicate: [\"collectionRow\"], descendants: true, read: CdkDrag }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"bulk-actions\\\">\\r\\n    <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n</div>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <table\\r\\n        class=\\\"\\\"\\r\\n        [class.no-select]=\\\"disableSelect\\\"\\r\\n    >\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <span>{{ column.heading }}</span>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                ></ng-container>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-weight-200);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-left:var(--surface-margin-left);text-align:left}}th:last-of-type,td:last-of-type{border-right:1px solid var(--color-weight-200)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-weight-200),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-weight-200),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-left:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-left:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-left:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-left:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-left:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-weight-200)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-left:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-left:var(--surface-margin-left);margin-right:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-left:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-left:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-left:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i2$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ItemsPerPageControlsComponent, selector: \"vdr-items-per-page-controls\", inputs: [\"itemsPerPage\"], outputs: [\"itemsPerPageChange\"] }, { kind: \"component\", type: i1.PaginationControlsComponent, selector: \"vdr-pagination-controls\", inputs: [\"id\", \"currentPage\", \"itemsPerPage\", \"totalItems\"], outputs: [\"pageChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.EmptyPlaceholderComponent, selector: \"vdr-empty-placeholder\", inputs: [\"emptyStateLabel\"] }, { kind: \"component\", type: i1.DataTableFiltersComponent, selector: \"vdr-data-table-filters\", inputs: [\"filters\", \"filterWithValue\"] }, { kind: \"component\", type: i1.DataTableColumnPickerComponent, selector: \"vdr-data-table-colum-picker\", inputs: [\"columns\", \"uiLanguage\"], outputs: [\"reorder\", \"resetColumns\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionDataTableComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-data-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"bulk-actions\\\">\\r\\n    <ng-content select=\\\"vdr-bulk-action-menu\\\"></ng-content>\\r\\n</div>\\r\\n<div class=\\\"table-wrapper\\\">\\r\\n    <table\\r\\n        class=\\\"\\\"\\r\\n        [class.no-select]=\\\"disableSelect\\\"\\r\\n    >\\r\\n        <thead [class.items-selected]=\\\"selectionManager?.selection.length\\\">\\r\\n            <tr class=\\\"heading-row\\\">\\r\\n                <th *ngIf=\\\"selectionManager\\\" class=\\\"selection-col\\\">\\r\\n                    <div class=\\\"flex\\\">\\r\\n                        <div class=\\\"drag-handle-spacer\\\"></div>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrCheckbox\\r\\n                            [checked]=\\\"selectionManager?.areAllCurrentItemsSelected()\\\"\\r\\n                            (change)=\\\"onToggleAllClick()\\\"\\r\\n                        />\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th\\r\\n                    *ngFor=\\\"let column of visibleSortedColumns; last as isLast\\\"\\r\\n                    [class.expand]=\\\"column.expand\\\"\\r\\n                >\\r\\n                    <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                        <span>{{ column.heading }}</span>\\r\\n                        <div *ngIf=\\\"column.sort as sort\\\" class=\\\"sort-toggle\\\">\\r\\n                            <button (click)=\\\"sort.toggleSortOrder()\\\" [class.active]=\\\"sort.sortOrder\\\">\\r\\n                                <clr-icon *ngIf=\\\"!sort.sortOrder\\\" shape=\\\"two-way-arrows left\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'ASC'\\\" shape=\\\"arrow up\\\"></clr-icon>\\r\\n                                <clr-icon *ngIf=\\\"sort.sortOrder === 'DESC'\\\" shape=\\\"arrow down\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <div class=\\\"sort-label\\\" *ngIf=\\\"sort.sortOrder\\\">{{ sort.sortOrder }}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </th>\\r\\n                <th>\\r\\n                    <div class=\\\"column-picker\\\">\\r\\n                        <vdr-data-table-colum-picker\\r\\n                            [uiLanguage]=\\\"uiLanguage$ | async\\\"\\r\\n                            [columns]=\\\"sortedColumns\\\"\\r\\n                            (reorder)=\\\"onColumnReorder($event)\\\"\\r\\n                            (resetColumns)=\\\"onColumnsReset()\\\"\\r\\n                        ></vdr-data-table-colum-picker>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"searchComponent || customSearchTemplate || filters?.length\\\">\\r\\n                <th\\r\\n                    [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\"\\r\\n                    class=\\\"filter-row\\\"\\r\\n                    [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                >\\r\\n                    <button\\r\\n                        class=\\\"button-ghost toggle-search-filter-row\\\"\\r\\n                        [class.active]=\\\"showSearchFilterRow\\\"\\r\\n                        (click)=\\\"toggleSearchFilterRow()\\\"\\r\\n                        [title]=\\\"'common.search-and-filter-list' | translate\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"search\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <div class=\\\"filter-row-wrapper\\\" [class.hidden]=\\\"!showSearchFilterRow\\\">\\r\\n                        <ng-container *ngTemplateOutlet=\\\"searchComponent?.template\\\"></ng-container>\\r\\n                        <ng-container *ngTemplateOutlet=\\\"customSearchTemplate\\\"></ng-container>\\r\\n                        <ng-container *ngIf=\\\"filters\\\">\\r\\n                            <div class=\\\"filters\\\">\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngFor=\\\"let activeFilter of filters.activeFilters\\\"\\r\\n                                    [filterWithValue]=\\\"activeFilter\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                                <vdr-data-table-filters\\r\\n                                    *ngIf=\\\"filters.length\\\"\\r\\n                                    [filters]=\\\"filters\\\"\\r\\n                                    class=\\\"mt-1\\\"\\r\\n                                ></vdr-data-table-filters>\\r\\n                            </div>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody\\r\\n            cdkDropList\\r\\n            cdkDropListLockAxis=\\\"y\\\"\\r\\n            (cdkDropListDropped)=\\\"onDrop($event)\\\"\\r\\n            [cdkDropListSortPredicate]=\\\"sortPredicate\\\"\\r\\n        >\\r\\n            <ng-container\\r\\n                *ngFor=\\\"\\r\\n                let item of items\\r\\n                    | paginate\\r\\n                        : {\\r\\n                              itemsPerPage: itemsPerPage,\\r\\n                              currentPage: currentPage,\\r\\n                              totalItems: totalItems,\\r\\n                              id: id,\\r\\n                          };\\r\\n                index as i;\\r\\n                trackBy: trackByFn\\r\\n            \\\"\\r\\n            >\\r\\n                <ng-container\\r\\n                    [ngTemplateOutlet]=\\\"collectionRowTmp\\\"\\r\\n                    [ngTemplateOutletContext]=\\\"{ item: item, i: i, depth: 0 }\\\"\\r\\n                ></ng-container>\\r\\n            </ng-container>\\r\\n            <ng-container>\\r\\n                <tr *ngIf=\\\"!items?.length\\\">\\r\\n                    <td [attr.colspan]=\\\"visibleSortedColumns.length + (selectionManager ? 2 : 1)\\\">\\r\\n                        <vdr-empty-placeholder [emptyStateLabel]=\\\"emptyStateLabel\\\"></vdr-empty-placeholder>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </ng-container>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<div class=\\\"table-footer\\\">\\r\\n    <vdr-items-per-page-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        (itemsPerPageChange)=\\\"itemsPerPageChange.emit($event)\\\"\\r\\n    ></vdr-items-per-page-controls>\\r\\n    <div *ngIf=\\\"totalItems\\\" class=\\\"p5 total-items-count\\\">\\r\\n        {{ 'common.total-items' | translate : { currentStart, currentEnd, totalItems } }}\\r\\n    </div>\\r\\n\\r\\n    <vdr-pagination-controls\\r\\n        *ngIf=\\\"totalItems\\\"\\r\\n        [id]=\\\"id\\\"\\r\\n        [currentPage]=\\\"currentPage\\\"\\r\\n        [itemsPerPage]=\\\"itemsPerPage\\\"\\r\\n        [totalItems]=\\\"totalItems\\\"\\r\\n        (pageChange)=\\\"pageChange.emit($event)\\\"\\r\\n    ></vdr-pagination-controls>\\r\\n</div>\\r\\n\\r\\n<ng-template #collectionRowTmp let-item=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n    <tr #collectionRow cdkDrag [cdkDragData]=\\\"{ depth: depth, collection: item }\\\" cdkDragBoundary=\\\"tbody\\\">\\r\\n        <td\\r\\n            *ngIf=\\\"selectionManager\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n            class=\\\"selection-col\\\"\\r\\n        >\\r\\n            <div class=\\\"flex\\\">\\r\\n                <div class=\\\"drag-handle\\\" cdkDragHandle [title]=\\\"'catalog.reorder-collection' | translate\\\">\\r\\n                    <clr-icon shape=\\\"drag-handle\\\"></clr-icon>\\r\\n                </div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager?.isSelected(item)\\\"\\r\\n                    (click)=\\\"onRowClick(item, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n        </td>\\r\\n        <td\\r\\n            *ngFor=\\\"let column of visibleSortedColumns\\\"\\r\\n            [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"\\r\\n        >\\r\\n            <div class=\\\"cell-content\\\" [ngClass]=\\\"column.align\\\">\\r\\n                <ng-container\\r\\n                    *ngTemplateOutlet=\\\"column.template; context: { item: item, depth: depth }\\\"\\r\\n                ></ng-container>\\r\\n            </div>\\r\\n        </td>\\r\\n        <td [class.active]=\\\"activeIndex === absoluteIndex[item.id]\\\"><!-- column select --></td>\\r\\n    </tr>\\r\\n    <ng-container *ngFor=\\\"let subCollection of getSubcollections(item)\\\">\\r\\n        <ng-container\\r\\n            *ngTemplateOutlet=\\\"collectionRowTmp; context: { item: subCollection, depth: depth + 1 }\\\"\\r\\n        ></ng-container>\\r\\n    </ng-container>\\r\\n</ng-template>\\r\\n\", styles: [\":host{display:block;max-width:100%;position:relative;margin-bottom:calc(var(--space-unit) * 4);container-type:inline-size}th{border-bottom:1px solid var(--color-weight-200);font-size:var(--font-size-xs);font-weight:600;text-transform:uppercase;position:relative;white-space:nowrap}th,td{padding:calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 1)}tr td:first-of-type,tr th:first-of-type{text-align:center}@media screen and (min-width: 992px){tr td:first-of-type,tr th:first-of-type{padding-left:var(--surface-margin-left);text-align:left}}th:last-of-type,td:last-of-type{border-right:1px solid var(--color-weight-200)}tr:first-of-type th:last-of-type{border-image:linear-gradient(0deg,var(--color-weight-200),transparent) 1}tr:last-of-type td:last-of-type{border-image:linear-gradient(180deg,var(--color-weight-200),transparent) 1}tbody td{border-bottom:1px solid var(--color-table-row-separator)}tbody tr:hover{background-color:var(--color-table-row-hover-bg)}.bulk-actions{margin-left:calc(var(--space-unit) * 5);background-color:var(--color-surface-bg);z-index:10;display:flex;position:absolute;top:5px;height:40px}@media screen and (min-width: 992px){.bulk-actions{margin-left:calc(var(--space-unit) * 8.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-left:calc(var(--space-unit) * 10.5)}}.table-wrapper{display:block;overflow-y:hidden;overflow-x:auto;width:100%;max-width:var(--surface-width)}table{width:100%}table.no-select{-webkit-user-select:none;user-select:none}.column-picker{width:24px}.sort-toggle{display:flex;align-items:center;margin-left:calc(var(--space-unit) * .5)}.sort-toggle button{border:0;border-radius:var(--border-radius-lg);color:var(--color-weight-500);padding:0 2px;cursor:pointer;background-color:transparent}.sort-toggle button.active{color:var(--color-primary-700)}.sort-toggle .sort-label{margin-left:calc(var(--space-unit) * .5);font-size:10px;color:var(--color-primary-600);font-weight:400}.toggle-search-filter-row{position:absolute;top:-12px;left:4px}@media screen and (min-width: 1280px){.toggle-search-filter-row{left:8px}}.toggle-search-filter-row.active{background-color:var(--color-primary-700);color:var(--color-primary-100);border-color:var(--color-primary-700)}th.filter-row{position:relative;font-size:var(--font-size-base);font-weight:400;background-color:var(--color-weight-100);box-shadow:var(--data-table-filter-box-shadow);border-left-width:0;border-right-width:0;text-align:initial;padding:0}th.filter-row input{width:100%}th.filter-row.active{border-bottom:1px solid var(--color-weight-200)}th.filter-row .filters{margin-top:calc(var(--space-unit) * 1);display:flex;flex-wrap:wrap;gap:calc(var(--space-unit) * .5)}.filter-row-wrapper{padding:calc(var(--space-unit) * 4);padding-left:0;max-height:150px;transition:max-height .2s,padding .2s,opacity .2s}.filter-row-wrapper.hidden{max-height:0px;padding-top:0;padding-bottom:0;overflow:hidden;opacity:0}.cell-link{display:block;width:100%;height:100%}td.active{background-color:var(--color-table-row-active-bg)}.cell-content{display:flex;align-items:center;line-height:var(--font-size-sm);color:var(--color-weight-700)}.cell-content.left{justify-content:flex-start}.cell-content.center{justify-content:center}.cell-content.right{justify-content:flex-end}.selection-col{width:calc(var(--space-unit) * 8)}vdr-empty-placeholder{width:100%}.table-footer{display:flex;align-items:baseline;justify-content:space-between;margin-top:var(--space-unit);margin-left:var(--surface-margin-left);margin-right:var(--space-unit)}.total-items-count{font-size:var(--font-size-xs)}@container (max-width: 500px){.total-items-count{display:none}}\\n\", \".bulk-actions{margin-left:calc(var(--space-unit) * 6);background-color:var(--color-surface-bg)}@media screen and (min-width: 992px){.bulk-actions{margin-left:calc(var(--space-unit) * 9.5)}}@media screen and (min-width: 1280px){.bulk-actions{margin-left:calc(var(--space-unit) * 11.5)}}.drag-handle{cursor:grab}.drag-handle-spacer{width:16px}.cdk-drop-list-dragging .cdk-drag{transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-animating{transition:transform .3s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{opacity:0}.cdk-drag-placeholder{background-color:var(--color-primary-100)!important}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.LocalStorageService }, { type: i1.DataService }, { type: i2$1.DragDrop }]; }, propDecorators: { subCollections: [{\r\n                type: Input\r\n            }], changeOrder: [{\r\n                type: Output\r\n            }], dropList: [{\r\n                type: ViewChild,\r\n                args: [CdkDropList, { static: true }]\r\n            }], collectionRowList: [{\r\n                type: ViewChildren,\r\n                args: ['collectionRow', { read: CdkDrag }]\r\n            }] } });\n\nconst COLLECTION_DETAIL_QUERY = gql `\r\n    query CollectionDetailQuery($id: ID!) {\r\n        collection(id: $id) {\r\n            ...Collection\r\n        }\r\n    }\r\n    ${COLLECTION_FRAGMENT}\r\n`;\r\nclass CollectionDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService, localStorageService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.localStorageService = localStorageService;\r\n        this.customFields = this.getCustomFieldConfig('Collection');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\r\n            description: '',\r\n            visible: false,\r\n            inheritFilters: true,\r\n            filters: this.formBuilder.array([]),\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.assetChanges = {};\r\n        this.filters = [];\r\n        this.allFilters = [];\r\n        this.livePreview = false;\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\r\n        this.filterRemoved$ = new Subject();\r\n        this.livePreview = this.localStorageService.get('livePreviewCollectionContents') ?? false;\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\r\n            this.allFilters = res.collectionFilters;\r\n        });\r\n        const filtersFormArray = this.detailForm.get('filters');\r\n        const inheritFiltersControl = this.detailForm.get('inheritFilters');\r\n        this.inheritFilters$ = inheritFiltersControl.valueChanges.pipe(distinctUntilChanged());\r\n        this.updatedFilters$ = merge(filtersFormArray.statusChanges, this.filterRemoved$).pipe(debounceTime(200), filter(() => filtersFormArray.touched), map(() => this.mapOperationsToInputs(this.filters, filtersFormArray.value).filter(_filter => {\r\n            // ensure all the arguments have valid values. E.g. a newly-added\r\n            // filter will not yet have valid values\r\n            for (const arg of _filter.arguments) {\r\n                if (arg.value === '') {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        })));\r\n        this.parentId$ = this.route.paramMap.pipe(map(pm => pm.get('parentId') || undefined), switchMap(parentId => {\r\n            if (parentId) {\r\n                return of(parentId);\r\n            }\r\n            else {\r\n                return this.entity$.pipe(map(collection => collection.parent?.id));\r\n            }\r\n        }));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    getFilterDefinition(_filter) {\r\n        return this.allFilters.find(f => f.code === _filter.code);\r\n    }\r\n    assetsChanged() {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n    /**\r\n     * If creating a new Collection, automatically generate the slug based on the collection name.\r\n     */\r\n    updateSlug(nameValue) {\r\n        const slugControl = this.detailForm.get(['slug']);\r\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\r\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n        }\r\n    }\r\n    addFilter(collectionFilter) {\r\n        const filtersArray = this.detailForm.get('filters');\r\n        const argsHash = collectionFilter.args.reduce((output, arg) => ({\r\n            ...output,\r\n            [arg.name]: getConfigArgValue(arg.value),\r\n        }), {});\r\n        filtersArray.push(this.formBuilder.control({\r\n            code: collectionFilter.code,\r\n            args: argsHash,\r\n        }));\r\n        this.filters.push({\r\n            code: collectionFilter.code,\r\n            args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\r\n        });\r\n    }\r\n    removeFilter(index) {\r\n        const filtersArray = this.detailForm.get('filters');\r\n        if (index !== -1) {\r\n            filtersArray.removeAt(index);\r\n            filtersArray.markAsDirty();\r\n            filtersArray.markAsTouched();\r\n            this.filters.splice(index, 1);\r\n            this.filterRemoved$.next();\r\n        }\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const input = this.getUpdatedCollection({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            languageCode: this.languageCode,\r\n            name: '',\r\n            slug: '',\r\n            isPrivate: false,\r\n            breadcrumbs: [],\r\n            description: '',\r\n            featuredAsset: null,\r\n            assets: [],\r\n            translations: [],\r\n            inheritFilters: true,\r\n            filters: [],\r\n            parent: {},\r\n            children: null,\r\n        }, this.detailForm, this.languageCode);\r\n        const parentId = this.route.snapshot.paramMap.get('parentId');\r\n        if (parentId) {\r\n            input.parentId = parentId;\r\n        }\r\n        this.dataService.collection.createCollection(input).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'Collection',\r\n            });\r\n            this.assetChanges = {};\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Collection',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([category, languageCode]) => {\r\n            const input = this.getUpdatedCollection(category, this.detailForm, languageCode);\r\n            return this.dataService.collection.updateCollection(input);\r\n        }))\r\n            .subscribe(() => {\r\n            this.assetChanges = {};\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Collection',\r\n            });\r\n            this.contentsComponent.refresh();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Collection',\r\n            });\r\n        });\r\n    }\r\n    canDeactivate() {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n    toggleLivePreview() {\r\n        this.livePreview = !this.livePreview;\r\n        this.localStorageService.set('livePreviewCollectionContents', this.livePreview);\r\n    }\r\n    trackByFn(index, item) {\r\n        return JSON.stringify(item);\r\n    }\r\n    /**\r\n     * Sets the values of the form on changes to the category or current language.\r\n     */\r\n    setFormValues(entity, languageCode) {\r\n        const currentTranslation = findTranslation(entity, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            slug: currentTranslation ? currentTranslation.slug : '',\r\n            description: currentTranslation ? currentTranslation.description : '',\r\n            visible: !entity.isPrivate,\r\n            inheritFilters: entity.inheritFilters,\r\n        });\r\n        const formArray = this.detailForm.get('filters');\r\n        if (formArray.length !== entity.filters.length) {\r\n            formArray.clear();\r\n            this.filters = [];\r\n            entity.filters.forEach(f => this.addFilter(f));\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity, currentTranslation);\r\n        }\r\n    }\r\n    /**\r\n     * Given a category and the value of the form, this method creates an updated copy of the category which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedCollection(category, form, languageCode) {\r\n        const updatedCategory = createUpdatedTranslatable({\r\n            translatable: category,\r\n            updatedFields: form.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: category.name || '',\r\n                slug: category.slug || '',\r\n                description: category.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedCategory,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            isPrivate: !form.value.visible,\r\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\r\n        };\r\n    }\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    mapOperationsToInputs(operations, formValueOperations) {\r\n        return operations.map((o, i) => ({\r\n            code: o.code,\r\n            arguments: Object.entries(formValueOperations[i].args).map(([name, value], j) => ({\r\n                name,\r\n                value: encodeConfigArgValue(value),\r\n            })),\r\n        }));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }, { token: i1.LocalStorageService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CollectionDetailComponent, selector: \"vdr-collection-detail\", viewQueries: [{ propertyName: \"contentsComponent\", first: true, predicate: [\"collectionContents\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template></vdr-ab-right\\r\\n        >\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'catalog.filter-inheritance' | translate\\\"\\r\\n                    for=\\\"inheritFilters\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-right:10px}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-left:10px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ConfigurableInputComponent, selector: \"vdr-configurable-input\", inputs: [\"operation\", \"operationDefinition\", \"readonly\", \"removable\", \"position\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template></vdr-ab-right\\r\\n        >\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block *ngIf=\\\"entity$ | async as entity\\\"\\r\\n            ><nav role=\\\"navigation\\\">\\r\\n                <ul class=\\\"collection-breadcrumbs\\\">\\r\\n                    <li *ngFor=\\\"let breadcrumb of entity.breadcrumbs; let isFirst = first; let isLast = last\\\">\\r\\n                        <a [routerLink]=\\\"['/catalog/collections']\\\" *ngIf=\\\"isFirst\\\">{{\\r\\n                            'catalog.root-collection' | translate\\r\\n                        }}</a>\\r\\n                        <a\\r\\n                            [routerLink]=\\\"['/catalog/collections', breadcrumb.id]\\\"\\r\\n                            *ngIf=\\\"!isFirst && !isLast\\\"\\r\\n                            >{{ breadcrumb.name | translate }}</a\\r\\n                        >\\r\\n                        <ng-container *ngIf=\\\"isLast\\\">{{ breadcrumb.name | translate }}</ng-container>\\r\\n                    </li>\\r\\n                </ul>\\r\\n            </nav>\\r\\n        </vdr-page-block>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: ('catalog.slug-pattern-error' | translate) }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Collection\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"collection-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermission\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.filters' | translate\\\">\\r\\n                <vdr-form-field\\r\\n                    [label]=\\\"'catalog.filter-inheritance' | translate\\\"\\r\\n                    for=\\\"inheritFilters\\\"\\r\\n                >\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            formControlName=\\\"inheritFilters\\\"\\r\\n                            id=\\\"inheritFilters\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.inheritFilters; else noInherit\\\">{{\\r\\n                                'catalog.inherit-filters-from-parent' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #noInherit>{{\\r\\n                                'catalog.do-not-inherit-filters' | translate\\r\\n                            }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n                <div formArrayName=\\\"filters\\\">\\r\\n                    <ng-container *ngFor=\\\"let filter of filters; index as i; trackBy: trackByFn\\\">\\r\\n                        <vdr-configurable-input\\r\\n                            (remove)=\\\"removeFilter(i)\\\"\\r\\n                            [position]=\\\"i\\\"\\r\\n                            [operation]=\\\"filter\\\"\\r\\n                            [operationDefinition]=\\\"getFilterDefinition(filter)\\\"\\r\\n                            [formControlName]=\\\"i\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        ></vdr-configurable-input>\\r\\n                    </ng-container>\\r\\n                </div>\\r\\n                <div *vdrIfPermissions=\\\"updatePermission\\\">\\r\\n                    <vdr-dropdown>\\r\\n                        <button class=\\\"btn btn-outline\\\" vdrDropdownTrigger>\\r\\n                            <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                            <span>{{ 'marketing.add-condition' | translate }}</span>\\r\\n                            <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                        </button>\\r\\n                        <vdr-dropdown-menu vdrPosition=\\\"bottom-left\\\">\\r\\n                            <button\\r\\n                                *ngFor=\\\"let filter of allFilters\\\"\\r\\n                                type=\\\"button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"addFilter(filter)\\\"\\r\\n                            >\\r\\n                                {{ filter.description }}\\r\\n                            </button>\\r\\n                        </vdr-dropdown-menu>\\r\\n                    </vdr-dropdown>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'common.contents' | translate\\\" [paddingX]=\\\"false\\\">\\r\\n                <vdr-collection-contents\\r\\n                    [collectionId]=\\\"id\\\"\\r\\n                    [parentId]=\\\"parentId$ | async\\\"\\r\\n                    [updatedFilters]=\\\"updatedFilters$ | async\\\"\\r\\n                    [inheritFilters]=\\\"inheritFilters$ | async\\\"\\r\\n                    [previewUpdatedFilters]=\\\"livePreview\\\"\\r\\n                    #collectionContents\\r\\n                >\\r\\n                    <ng-template let-count>\\r\\n                        <div class=\\\"ml-3\\\">\\r\\n                            <div class=\\\"contents-title\\\">\\r\\n                                {{ 'catalog.collection-contents' | translate }} ({{\\r\\n                                    'common.results-count' | translate : { count: count }\\r\\n                                }})\\r\\n                            </div>\\r\\n                            <clr-checkbox-wrapper [class.disabled]=\\\"detailForm.get('filters')?.pristine\\\">\\r\\n                                <input\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    clrCheckbox\\r\\n                                    [ngModelOptions]=\\\"{ standalone: true }\\\"\\r\\n                                    [disabled]=\\\"detailForm.get('filters')?.pristine\\\"\\r\\n                                    [ngModel]=\\\"livePreview\\\"\\r\\n                                    (ngModelChange)=\\\"toggleLivePreview()\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.live-preview-contents' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </vdr-collection-contents>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"@charset \\\"UTF-8\\\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-right:10px}.collection-breadcrumbs li:not(:last-child):after{content:\\\"\\\\203a\\\";top:0;color:var(--color-grey-400);margin-left:10px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }, { type: i1.LocalStorageService }]; }, propDecorators: { contentsComponent: [{\r\n                type: ViewChild,\r\n                args: ['collectionContents']\r\n            }] } });\n\n/**\r\n * Removes the root collection and self breadcrumb from the collection breadcrumb list.\r\n */\r\nclass CollectionBreadcrumbPipe {\r\n    transform(value) {\r\n        return value?.breadcrumbs.slice(1, -1);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionBreadcrumbPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\r\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionBreadcrumbPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'collectionBreadcrumb',\r\n                }]\r\n        }] });\n\nclass MoveCollectionsDialogComponent {\r\n    constructor(dataService, i18nService) {\r\n        this.dataService = dataService;\r\n        this.i18nService = i18nService;\r\n        this.searchTermControl = new FormControl('');\r\n        this.currentPage$ = new BehaviorSubject(1);\r\n        this.itemsPerPage$ = new BehaviorSubject(10);\r\n        this.expandedIds$ = new Subject();\r\n        this.expandedIds = [];\r\n    }\r\n    ngOnInit() {\r\n        const getCollectionsResult = this.dataService.collection.getCollections();\r\n        const searchTerm$ = this.searchTermControl.valueChanges.pipe(debounceTime(250), distinctUntilChanged(), startWith(''));\r\n        const currentPage$ = this.currentPage$.pipe(distinctUntilChanged());\r\n        const itemsPerPage$ = this.itemsPerPage$.pipe(distinctUntilChanged());\r\n        combineLatest(searchTerm$, currentPage$, itemsPerPage$).subscribe(([searchTerm, currentPage, itemsPerPage]) => {\r\n            const topLevelOnly = searchTerm === '';\r\n            getCollectionsResult.ref.refetch({\r\n                options: {\r\n                    skip: (currentPage - 1) * itemsPerPage,\r\n                    take: itemsPerPage,\r\n                    filter: {\r\n                        name: { contains: searchTerm },\r\n                    },\r\n                    topLevelOnly,\r\n                },\r\n            });\r\n        });\r\n        const rootCollectionId$ = this.dataService.collection\r\n            .getCollections({\r\n            take: 1,\r\n            topLevelOnly: true,\r\n        })\r\n            .mapSingle(data => data.collections.items[0].parentId);\r\n        this.items$ = combineLatest(getCollectionsResult.mapStream(({ collections }) => collections), rootCollectionId$).pipe(map(([collections, rootCollectionId]) => [\r\n            ...(rootCollectionId\r\n                ? [\r\n                    {\r\n                        id: rootCollectionId,\r\n                        name: this.i18nService.translate('catalog.root-collection'),\r\n                        slug: '',\r\n                        parentId: '__',\r\n                        position: 0,\r\n                        featuredAsset: null,\r\n                        children: [],\r\n                        breadcrumbs: [],\r\n                        isPrivate: false,\r\n                        createdAt: '',\r\n                        updatedAt: '',\r\n                    },\r\n                ]\r\n                : []),\r\n            ...collections.items,\r\n        ]));\r\n        this.totalItems$ = getCollectionsResult.mapStream(data => data.collections.totalItems);\r\n        this.subCollections$ = this.expandedIds$.pipe(tap(val => (this.expandedIds = val)), switchMap(ids => {\r\n            if (ids.length) {\r\n                return this.dataService.collection\r\n                    .getCollections({\r\n                    take: 999,\r\n                    filter: {\r\n                        parentId: { in: ids },\r\n                    },\r\n                })\r\n                    .mapStream(data => data.collections.items);\r\n            }\r\n            else {\r\n                return of([]);\r\n            }\r\n        }));\r\n    }\r\n    toggleExpanded(collection) {\r\n        let expandedIds = this.expandedIds;\r\n        if (!expandedIds.includes(collection.id)) {\r\n            expandedIds.push(collection.id);\r\n        }\r\n        else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.expandedIds$.next(expandedIds);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: MoveCollectionsDialogComponent, deps: [{ token: i1.DataService }, { token: i1.I18nService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: MoveCollectionsDialogComponent, selector: \"vdr-move-collections-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-left:var(--indent-spacing)}.indent-2{padding-left:calc(var(--indent-spacing) * 2)}.indent-3{padding-left:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-left:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: MoveCollectionsDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-move-collections-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.move-collections' | translate }}\\r\\n</ng-template>\\r\\n<vdr-collection-data-table\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"move-collection-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [subCollections]=\\\"subCollections$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    (pageChange)=\\\"currentPage$.next($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"itemsPerPage$.next($event)\\\"\\r\\n>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\">\\r\\n        <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n            <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n            <clr-icon\\r\\n                class=\\\"child-arrow\\\"\\r\\n                [class.transparent]=\\\"depth === 0\\\"\\r\\n                shape=\\\"child-arrow\\\"\\r\\n                *ngIf=\\\"!collection.children?.length && collection.parentId !== '__'\\\"\\r\\n            ></clr-icon>\\r\\n            <button\\r\\n                class=\\\"icon-button folder-button\\\"\\r\\n                *ngIf=\\\"collection.children?.length\\\"\\r\\n                (click)=\\\"toggleExpanded(collection)\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"icon-button folder-button\\\" *ngIf=\\\"collection.parentId === '__'\\\" disabled>\\r\\n                <clr-icon shape=\\\"folder\\\" class=\\\"is-solid\\\"></clr-icon>\\r\\n            </button>\\r\\n            <button class=\\\"button-ghost\\\" (click)=\\\"resolveWith(collection)\\\">\\r\\n                <span>{{ 'catalog.move-collection-to' | translate : {name: collection.name} }}</span>\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            <div class=\\\"breadcrumb\\\">\\r\\n                <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                    <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                        <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                            <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                        </div>\\r\\n                    </ng-container>\\r\\n                    <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                </ng-container>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\">\\r\\n        <ng-template let-collection=\\\"item\\\">\\r\\n            {{ collection.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n</vdr-collection-data-table>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-left:var(--indent-spacing)}.indent-2{padding-left:calc(var(--indent-spacing) * 2)}.indent-3{padding-left:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-left:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.I18nService }]; } });\n\nconst deleteCollectionsBulkAction = createBulkDeleteAction({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCollection) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.collection.deleteCollections(ids).pipe(map(res => res.deleteCollections)),\r\n});\r\nconst moveCollectionsBulkAction = {\r\n    location: 'collection-list',\r\n    label: marker('catalog.move-collections'),\r\n    icon: 'drag-handle',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateCollection),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .fromComponent(MoveCollectionsDialogComponent, {\r\n            size: 'xl',\r\n            closable: true,\r\n        })\r\n            .pipe(switchMap(result => {\r\n            if (result) {\r\n                const inputs = selection.map(c => ({\r\n                    collectionId: c.id,\r\n                    parentId: result.id,\r\n                    index: 0,\r\n                }));\r\n                return dataService.collection.moveCollection(inputs);\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        }))\r\n            .subscribe(result => {\r\n            notificationService.success(marker('catalog.move-collections-success'), {\r\n                count: selection.length,\r\n            });\r\n            clearSelection();\r\n            hostComponent.refresh();\r\n        });\r\n    },\r\n};\r\nconst assignCollectionsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateCollection),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, collectionIds, channelId) => dataService.collection\r\n        .assignCollectionsToChannel({\r\n        collectionIds,\r\n        channelId,\r\n    })\r\n        .pipe(map(res => res.assignCollectionsToChannel)),\r\n});\r\nconst removeCollectionsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'collection-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteCollection),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, collectionIds, channelId) => dataService.collection\r\n        .removeCollectionsFromChannel({\r\n        channelId: channelId,\r\n        collectionIds,\r\n    })\r\n        .pipe(map(res => res.removeCollectionsFromChannel)),\r\n});\n\nclass CollectionListComponent extends TypedBaseListComponent {\r\n    constructor(dataService, notificationService) {\r\n        super();\r\n        this.dataService = dataService;\r\n        this.notificationService = notificationService;\r\n        this.expandedIds = [];\r\n        this.customFields = this.getCustomFieldConfig('Collection');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'slug',\r\n            label: marker('common.slug'),\r\n            type: { kind: 'text' },\r\n            filterField: 'slug',\r\n        })\r\n            .addFilter({\r\n            name: 'visibility',\r\n            type: { kind: 'boolean' },\r\n            label: marker('common.visibility'),\r\n            toFilterInput: value => ({\r\n                isPrivate: { eq: !value },\r\n            }),\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('position', 'ASC')\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'slug' })\r\n            .addSort({ name: 'position' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetCollectionListDocument,\r\n            getItems: data => data.collections,\r\n            setVariables: (skip, _take) => {\r\n                const topLevelOnly = this.searchTermControl.value === '' && this.filters.activeFilters.length === 0\r\n                    ? true\r\n                    : undefined;\r\n                return {\r\n                    options: {\r\n                        skip,\r\n                        take: _take,\r\n                        filter: {\r\n                            name: { contains: this.searchTermControl.value },\r\n                            ...this.filters.createFilterInput(),\r\n                        },\r\n                        topLevelOnly,\r\n                        sort: this.sorts.createSortInput(),\r\n                    },\r\n                };\r\n            },\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.activeCollectionId$ = this.route.paramMap.pipe(map(pm => pm.get('contents')), distinctUntilChanged());\r\n        const expandedIds$ = this.route.queryParamMap.pipe(map(qpm => qpm.get('expanded')), distinctUntilChanged(), map(ids => (ids ? ids.split(',') : [])));\r\n        expandedIds$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\r\n            this.expandedIds = ids;\r\n        });\r\n        this.subCollections$ = combineLatest(expandedIds$, this.refresh$).pipe(switchMap(([ids]) => {\r\n            if (ids.length) {\r\n                return this.dataService.collection\r\n                    .getCollections({\r\n                    take: 999,\r\n                    filter: {\r\n                        parentId: { in: ids },\r\n                    },\r\n                })\r\n                    .mapStream(data => data.collections.items);\r\n            }\r\n            else {\r\n                return of([]);\r\n            }\r\n        }));\r\n        this.activeCollectionTitle$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\r\n            if (id) {\r\n                const match = [...collections, ...subCollections].find(c => c.id === id);\r\n                return match ? match.name : '';\r\n            }\r\n            return '';\r\n        }));\r\n        this.activeCollectionIndex$ = combineLatest(this.activeCollectionId$, this.items$, this.subCollections$).pipe(map(([id, collections, subCollections]) => {\r\n            if (id) {\r\n                const allCollections = [];\r\n                for (const collection of collections) {\r\n                    allCollections.push(collection);\r\n                    const subCollectionMatches = subCollections.filter(c => c.parentId && c.parentId === collection.id);\r\n                    allCollections.push(...subCollectionMatches);\r\n                }\r\n                return allCollections.findIndex(c => c.id === id);\r\n            }\r\n            return -1;\r\n        }));\r\n    }\r\n    onRearrange(event) {\r\n        this.dataService.collection.moveCollection([event]).subscribe({\r\n            next: () => {\r\n                this.notificationService.success(marker('common.notify-saved-changes'));\r\n                this.refresh();\r\n            },\r\n            error: err => {\r\n                this.notificationService.error(marker('common.notify-save-changes-error'));\r\n            },\r\n        });\r\n    }\r\n    closeContents() {\r\n        const params = { ...this.route.snapshot.params };\r\n        delete params.contents;\r\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\r\n    }\r\n    setLanguage(code) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n    toggleExpanded(collection) {\r\n        let expandedIds = this.expandedIds;\r\n        if (!expandedIds.includes(collection.id)) {\r\n            expandedIds.push(collection.id);\r\n        }\r\n        else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.router.navigate(['./'], {\r\n            queryParams: {\r\n                expanded: expandedIds.filter(id => !!id).join(','),\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            relativeTo: this.route,\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionListComponent, deps: [{ token: i1.DataService }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CollectionListComponent, selector: \"vdr-collection-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            id=\\\"collection-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\"\", \":host{--indent-spacing: 18px}.indent-1{padding-left:var(--indent-spacing)}.indent-2{padding-left:calc(var(--indent-spacing) * 2)}.indent-3{padding-left:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-left:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.SplitViewComponent, selector: \"vdr-split-view\", inputs: [\"rightPanelOpen\"], outputs: [\"closeClicked\"] }, { kind: \"directive\", type: i1.SplitViewLeftDirective, selector: \"[vdrSplitViewLeft]\" }, { kind: \"directive\", type: i1.SplitViewRightDirective, selector: \"[vdrSplitViewRight]\", inputs: [\"splitViewTitle\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: CollectionContentsComponent, selector: \"vdr-collection-contents\", inputs: [\"collectionId\", \"parentId\", \"inheritFilters\", \"updatedFilters\", \"previewUpdatedFilters\"] }, { kind: \"component\", type: CollectionDataTableComponent, selector: \"vdr-collection-data-table\", inputs: [\"subCollections\"], outputs: [\"changeOrder\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: CollectionBreadcrumbPipe, name: \"collectionBreadcrumb\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"collection-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-collection' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-split-view [rightPanelOpen]=\\\"activeCollectionId$ | async\\\" (closeClicked)=\\\"closeContents()\\\">\\r\\n    <ng-template vdrSplitViewLeft>\\r\\n        <vdr-collection-data-table\\r\\n            class=\\\"mt-2\\\"\\r\\n            id=\\\"collection-list\\\"\\r\\n            [items]=\\\"items$ | async\\\"\\r\\n            [subCollections]=\\\"subCollections$ | async\\\"\\r\\n            [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n            [totalItems]=\\\"totalItems$ | async\\\"\\r\\n            [currentPage]=\\\"currentPage$ | async\\\"\\r\\n            [filters]=\\\"filters\\\"\\r\\n            [activeIndex]=\\\"activeCollectionIndex$ | async\\\"\\r\\n            (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n            (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n            (changeOrder)=\\\"onRearrange($event)\\\"\\r\\n        >\\r\\n            <vdr-bulk-action-menu\\r\\n                locationId=\\\"collection-list\\\"\\r\\n                [hostComponent]=\\\"this\\\"\\r\\n                [selectionManager]=\\\"selectionManager\\\"\\r\\n            ></vdr-bulk-action-menu>\\r\\n            <vdr-dt2-search\\r\\n                [searchTermControl]=\\\"searchTermControl\\\"\\r\\n                [searchTermPlaceholder]=\\\"'common.search-by-name' | translate\\\"\\r\\n            ></vdr-dt2-search>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.id }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.created-at' | translate\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.createdAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.updatedAt | localeDate : 'short' }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.position' | translate\\\"\\r\\n                [hiddenByDefault]=\\\"true\\\"\\r\\n                [sort]=\\\"sorts.get('position')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.position }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column\\r\\n                [heading]=\\\"'common.name' | translate\\\"\\r\\n                [optional]=\\\"false\\\"\\r\\n                [sort]=\\\"sorts.get('name')\\\"\\r\\n            >\\r\\n                <ng-template let-collection=\\\"item\\\" let-depth=\\\"depth\\\">\\r\\n                    <div [ngClass]=\\\"'indent-' + depth\\\"></div>\\r\\n                    <clr-icon\\r\\n                        class=\\\"child-arrow\\\"\\r\\n                        [class.transparent]=\\\"depth === 0\\\"\\r\\n                        shape=\\\"child-arrow\\\"\\r\\n                        *ngIf=\\\"!collection.children?.length\\\"\\r\\n                    ></clr-icon>\\r\\n                    <button\\r\\n                        class=\\\"icon-button folder-button\\\"\\r\\n                        *ngIf=\\\"collection.children?.length\\\"\\r\\n                        (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                        <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"expandedIds.includes(collection.id)\\\"></clr-icon>\\r\\n                    </button>\\r\\n                    <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', collection.id]\\\"\\r\\n                        ><span>{{ collection.name }}</span>\\r\\n                        <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.breadcrumb' | translate\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <div class=\\\"breadcrumb\\\">\\r\\n                        <ng-container *ngIf=\\\"collection | collectionBreadcrumb as breadcrumbs\\\">\\r\\n                            <ng-container *ngIf=\\\"breadcrumbs.length\\\">\\r\\n                                <div *ngFor=\\\"let item of breadcrumbs\\\">\\r\\n                                    <span class=\\\"separator\\\">/</span>{{ item.name }}\\r\\n                                </div>\\r\\n                            </ng-container>\\r\\n                            <span class=\\\"separator\\\" *ngIf=\\\"!breadcrumbs.length\\\">/</span>\\r\\n                        </ng-container>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    {{ collection.slug }}\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <vdr-chip *ngIf=\\\"collection.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                        'common.private' | translate\\r\\n                        }}</vdr-chip>\\r\\n                    <vdr-chip *ngIf=\\\"!collection.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                        'common.public' | translate\\r\\n                        }}</vdr-chip>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-column [heading]=\\\"'common.view-contents' | translate\\\" [optional]=\\\"false\\\">\\r\\n                <ng-template let-collection=\\\"item\\\">\\r\\n                    <a\\r\\n                        class=\\\"button-small bg-weight-150\\\"\\r\\n                        [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                        queryParamsHandling=\\\"preserve\\\"\\r\\n                    >\\r\\n                        <span>{{ 'common.view-contents' | translate }}</span>\\r\\n                        <clr-icon shape=\\\"file-group\\\"></clr-icon>\\r\\n                    </a>\\r\\n                </ng-template>\\r\\n            </vdr-dt2-column>\\r\\n            <vdr-dt2-custom-field-column\\r\\n                *ngFor=\\\"let customField of customFields\\\"\\r\\n                [customField]=\\\"customField\\\"\\r\\n                [sorts]=\\\"sorts\\\"\\r\\n            />\\r\\n        </vdr-collection-data-table>\\r\\n    </ng-template>\\r\\n    <ng-template vdrSplitViewRight [splitViewTitle]=\\\"activeCollectionTitle$ | async\\\">\\r\\n        <ng-container *ngIf=\\\"activeCollectionId$ | async as activeGroup\\\">\\r\\n            <vdr-collection-contents [collectionId]=\\\"activeCollectionId$ | async\\\"></vdr-collection-contents>\\r\\n        </ng-container>\\r\\n    </ng-template>\\r\\n</vdr-split-view>\\r\\n\", styles: [\":host{--indent-spacing: 18px}.indent-1{padding-left:var(--indent-spacing)}.indent-2{padding-left:calc(var(--indent-spacing) * 2)}.indent-3{padding-left:calc(var(--indent-spacing) * 3)}.indent-4,.indent-5,.indent-6,.indent-7,.indent-8,.indent-9{padding-left:calc(var(--indent-spacing) * 4)}.child-arrow{margin:1px 6px}.child-arrow.transparent{opacity:0}.breadcrumb{display:flex}.separator{color:var(--color-weight-500);margin:0 3px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.NotificationService }]; } });\n\n/**\r\n * Facilitates communication between the CollectionTreeComponent and child CollectionTreeNodeComponents\r\n * without introducing a cyclic dependency.\r\n */\r\nclass CollectionTreeService {\r\n    constructor() {\r\n        this.allMoveListItems = [];\r\n        this._rearrange$ = new Subject();\r\n        this._delete$ = new Subject();\r\n        this.rearrange$ = this._rearrange$.asObservable();\r\n        this.delete$ = this._delete$.asObservable();\r\n    }\r\n    ngOnDestroy() {\r\n        this._rearrange$.complete();\r\n        this._delete$.complete();\r\n    }\r\n    setCollectionTree(tree) {\r\n        this.collectionTree = tree;\r\n    }\r\n    resetMoveList() {\r\n        this.allMoveListItems = [];\r\n    }\r\n    getMoveListItems(collection) {\r\n        if (this.allMoveListItems.length === 0) {\r\n            this.allMoveListItems = this.calculateAllMoveListItems();\r\n        }\r\n        return this.allMoveListItems.filter(item => item.id !== collection.id &&\r\n            !item.ancestorIdPath.has(collection.id) &&\r\n            item.id !== collection.parent?.id);\r\n    }\r\n    onDrop(event) {\r\n        const item = event.item.data;\r\n        const newParent = event.container.data;\r\n        const newParentId = newParent.id;\r\n        if (newParentId == null) {\r\n            throw new Error(`Could not determine the ID of the root Collection`);\r\n        }\r\n        this._rearrange$.next({\r\n            collectionId: item.id,\r\n            parentId: newParentId,\r\n            index: event.currentIndex,\r\n        });\r\n    }\r\n    onMove(event) {\r\n        this._rearrange$.next(event);\r\n    }\r\n    onDelete(id) {\r\n        this._delete$.next(id);\r\n    }\r\n    calculateAllMoveListItems() {\r\n        const visit = (node, parentPath, ancestorIdPath, output) => {\r\n            const path = parentPath.concat(node.name);\r\n            output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id, ancestorIdPath });\r\n            node.children.forEach(child => visit(child, path, new Set([...ancestorIdPath, node.id]), output));\r\n            return output;\r\n        };\r\n        return visit(this.collectionTree, [], new Set(), []);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionTreeService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\r\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionTreeService }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionTreeService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return []; } });\n\nclass CollectionTreeNodeComponent {\r\n    constructor(parent, dataService, collectionTreeService, router, route, changeDetectorRef) {\r\n        this.parent = parent;\r\n        this.dataService = dataService;\r\n        this.collectionTreeService = collectionTreeService;\r\n        this.router = router;\r\n        this.route = route;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.depth = 0;\r\n        this.expandAll = false;\r\n        this.moveListItems = [];\r\n        if (parent) {\r\n            this.depth = parent.depth + 1;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.parentName = this.collectionTree.name || '<root>';\r\n        const permissions$ = this.dataService.client\r\n            .userStatus()\r\n            .mapStream(data => data.userStatus.permissions)\r\n            .pipe(shareReplay(1));\r\n        this.hasUpdatePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection)));\r\n        this.hasDeletePermission$ = permissions$.pipe(map(perms => perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection)));\r\n        this.subscription = this.selectionManager?.selectionChanges$.subscribe(() => this.changeDetectorRef.markForCheck());\r\n    }\r\n    ngOnChanges(changes) {\r\n        const expandAllChange = changes['expandAll'];\r\n        if (expandAllChange) {\r\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\r\n                this.collectionTree.children.forEach(c => (c.expanded = false));\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription?.unsubscribe();\r\n    }\r\n    trackByFn(index, item) {\r\n        return item.id;\r\n    }\r\n    toggleExpanded(collection) {\r\n        collection.expanded = !collection.expanded;\r\n        let expandedIds = this.route.snapshot.queryParamMap.get('expanded')?.split(',') ?? [];\r\n        if (collection.expanded) {\r\n            expandedIds.push(collection.id);\r\n        }\r\n        else {\r\n            expandedIds = expandedIds.filter(id => id !== collection.id);\r\n        }\r\n        this.router.navigate(['./'], {\r\n            queryParams: {\r\n                expanded: expandedIds.filter(id => !!id).join(','),\r\n            },\r\n            queryParamsHandling: 'merge',\r\n            relativeTo: this.route,\r\n        });\r\n    }\r\n    getMoveListItems(collection) {\r\n        this.moveListItems = this.collectionTreeService.getMoveListItems(collection);\r\n    }\r\n    move(collection, parentId) {\r\n        this.collectionTreeService.onMove({\r\n            index: 0,\r\n            parentId,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n    moveUp(collection, currentIndex) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.collectionTreeService.onMove({\r\n            index: currentIndex - 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n    moveDown(collection, currentIndex) {\r\n        if (!collection.parent) {\r\n            return;\r\n        }\r\n        this.collectionTreeService.onMove({\r\n            index: currentIndex + 1,\r\n            parentId: collection.parent.id,\r\n            collectionId: collection.id,\r\n        });\r\n    }\r\n    drop(event) {\r\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\r\n        this.collectionTreeService.onDrop(event);\r\n    }\r\n    delete(id) {\r\n        this.collectionTreeService.onDelete(id);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionTreeNodeComponent, deps: [{ token: CollectionTreeNodeComponent, optional: true, skipSelf: true }, { token: i1.DataService }, { token: CollectionTreeService }, { token: i1$1.Router }, { token: i1$1.ActivatedRoute }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: { collectionTree: \"collectionTree\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", selectionManager: \"selectionManager\" }, usesOnChanges: true, ngImport: i0, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-left:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-left:36px}.collection .collection-detail.depth-2{padding-left:60px}.collection .collection-detail.depth-3{padding-left:84px}.collection .collection-detail.depth-4{padding-left:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-right:3px}.move-to-item .path{line-height:18px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"directive\", type: i2$1.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { kind: \"directive\", type: i2$1.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }, { kind: \"directive\", type: i2$1.CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: [\"cdkDragHandleDisabled\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionTreeNodeComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-tree-node', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\r\\n    cdkDropList\\r\\n    class=\\\"tree-node\\\"\\r\\n    #dropList\\r\\n    [cdkDropListData]=\\\"collectionTree\\\"\\r\\n    [cdkDropListDisabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n    (cdkDropListDropped)=\\\"drop($event)\\\"\\r\\n>\\r\\n    <div\\r\\n        class=\\\"collection\\\"\\r\\n        [class.private]=\\\"collection.isPrivate\\\"\\r\\n        *ngFor=\\\"let collection of collectionTree.children; index as i; trackBy: trackByFn\\\"\\r\\n        cdkDrag\\r\\n        [cdkDragData]=\\\"collection\\\"\\r\\n    >\\r\\n        <div\\r\\n            class=\\\"collection-detail\\\"\\r\\n            [ngClass]=\\\"'depth-' + depth\\\"\\r\\n            [class.active]=\\\"collection.id === activeCollectionId\\\"\\r\\n        >\\r\\n            <div>\\r\\n                <input\\r\\n                    type=\\\"checkbox\\\"\\r\\n                    clrCheckbox\\r\\n                    [checked]=\\\"selectionManager.isSelected(collection)\\\"\\r\\n                    (click)=\\\"selectionManager.toggleSelection(collection, $event)\\\"\\r\\n                />\\r\\n            </div>\\r\\n            <div class=\\\"name\\\">\\r\\n                <button\\r\\n                    class=\\\"icon-button folder-button\\\"\\r\\n                    [disabled]=\\\"expandAll\\\"\\r\\n                    *ngIf=\\\"collection.children?.length; else folderSpacer\\\"\\r\\n                    (click)=\\\"toggleExpanded(collection)\\\"\\r\\n                >\\r\\n                    <clr-icon shape=\\\"folder\\\" *ngIf=\\\"!collection.expanded && !expandAll\\\"></clr-icon>\\r\\n                    <clr-icon shape=\\\"folder-open\\\" *ngIf=\\\"collection.expanded || expandAll\\\"></clr-icon>\\r\\n                </button>\\r\\n                <ng-template #folderSpacer>\\r\\n                    <div class=\\\"folder-button-spacer\\\"></div>\\r\\n                </ng-template>\\r\\n                {{ collection.name }}\\r\\n            </div>\\r\\n            <div class=\\\"flex-spacer\\\"></div>\\r\\n            <vdr-chip *ngIf=\\\"collection.isPrivate\\\">{{ 'catalog.private' | translate }}</vdr-chip>\\r\\n            <a\\r\\n                class=\\\"btn btn-link btn-sm\\\"\\r\\n                [routerLink]=\\\"['./', { contents: collection.id }]\\\"\\r\\n                queryParamsHandling=\\\"preserve\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"view-list\\\"></clr-icon>\\r\\n                {{ 'catalog.view-contents' | translate }}\\r\\n            </a>\\r\\n            <a class=\\\"btn btn-link btn-sm\\\" [routerLink]=\\\"['/catalog/collections/', collection.id]\\\">\\r\\n                <clr-icon shape=\\\"edit\\\"></clr-icon>\\r\\n                {{ 'common.edit' | translate }}\\r\\n            </a>\\r\\n            <div class=\\\"drag-handle\\\" cdkDragHandle *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateCollection']\\\">\\r\\n                <clr-icon shape=\\\"drag-handle\\\" size=\\\"24\\\"></clr-icon>\\r\\n            </div>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger (click)=\\\"getMoveListItems(collection)\\\">\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <a\\r\\n                        class=\\\"dropdown-item\\\"\\r\\n                        [routerLink]=\\\"['./', 'create', { parentId: collection.id }]\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateCollection']\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.create-new-collection' | translate }}\\r\\n                    </a>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"i === 0 || !(hasUpdatePermission$ | async)\\\"\\r\\n                        (click)=\\\"moveUp(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret up\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-up' | translate }}\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        [disabled]=\\\"\\r\\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\\r\\n                        \\\"\\r\\n                        (click)=\\\"moveDown(collection, i)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                        {{ 'catalog.move-down' | translate }}\\r\\n                    </button>\\r\\n                    <h4 class=\\\"dropdown-header\\\">{{ 'catalog.move-to' | translate }}</h4>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        *ngFor=\\\"let item of moveListItems\\\"\\r\\n                        (click)=\\\"move(collection, item.id)\\\"\\r\\n                        [disabled]=\\\"!(hasUpdatePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <div class=\\\"move-to-item\\\">\\r\\n                            <div class=\\\"move-icon\\\">\\r\\n                                <clr-icon shape=\\\"child-arrow\\\"></clr-icon>\\r\\n                            </div>\\r\\n                            <div class=\\\"path\\\">\\r\\n                                {{ item.path }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </button>\\r\\n                    <div class=\\\"dropdown-divider\\\"></div>\\r\\n                    <button\\r\\n                        class=\\\"button\\\"\\r\\n                        vdrDropdownItem\\r\\n                        (click)=\\\"delete(collection.id)\\\"\\r\\n                        [disabled]=\\\"!(hasDeletePermission$ | async)\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                        {{ 'common.delete' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </div>\\r\\n        <vdr-collection-tree-node\\r\\n            *ngIf=\\\"collection.expanded || expandAll\\\"\\r\\n            [expandAll]=\\\"expandAll\\\"\\r\\n            [collectionTree]=\\\"collection\\\"\\r\\n            [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n            [selectionManager]=\\\"selectionManager\\\"\\r\\n        ></vdr-collection-tree-node>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-left:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-left:36px}.collection .collection-detail.depth-2{padding-left:60px}.collection .collection-detail.depth-3{padding-left:84px}.collection .collection-detail.depth-4{padding-left:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-right:3px}.move-to-item .path{line-height:18px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: CollectionTreeNodeComponent, decorators: [{\r\n                    type: SkipSelf\r\n                }, {\r\n                    type: Optional\r\n                }] }, { type: i1.DataService }, { type: CollectionTreeService }, { type: i1$1.Router }, { type: i1$1.ActivatedRoute }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { collectionTree: [{\r\n                type: Input\r\n            }], activeCollectionId: [{\r\n                type: Input\r\n            }], expandAll: [{\r\n                type: Input\r\n            }], selectionManager: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * Builds a tree from an array of nodes which have a parent.\r\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\r\n */\r\nfunction arrayToTree(nodes, currentState, expandedIds = []) {\r\n    const topLevelNodes = [];\r\n    const mappedArr = {};\r\n    const currentStateMap = treeToMap(currentState);\r\n    // First map the nodes of the array to an object -> create a hash table.\r\n    for (const node of nodes) {\r\n        mappedArr[node.id] = { ...node, children: [] };\r\n    }\r\n    for (const id of nodes.map(n => n.id)) {\r\n        if (mappedArr.hasOwnProperty(id)) {\r\n            const mappedElem = mappedArr[id];\r\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? expandedIds.includes(id);\r\n            const parent = mappedElem.parent;\r\n            if (!parent) {\r\n                continue;\r\n            }\r\n            // If the element is not at the root level, add it to its parent array of children.\r\n            const parentIsRoot = !mappedArr[parent.id];\r\n            if (!parentIsRoot) {\r\n                if (mappedArr[parent.id]) {\r\n                    mappedArr[parent.id].children.push(mappedElem);\r\n                }\r\n                else {\r\n                    mappedArr[parent.id] = { children: [mappedElem] };\r\n                }\r\n            }\r\n            else {\r\n                topLevelNodes.push(mappedElem);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent.id : undefined;\r\n    return { id: rootId, children: topLevelNodes };\r\n}\r\n/**\r\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\r\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\r\n * tree.\r\n */\r\nfunction treeToMap(tree) {\r\n    const nodeMap = new Map();\r\n    function visit(node) {\r\n        nodeMap.set(node.id, node);\r\n        node.children.forEach(visit);\r\n    }\r\n    if (tree) {\r\n        visit(tree);\r\n    }\r\n    return nodeMap;\r\n}\n\nclass CollectionTreeComponent {\r\n    constructor(collectionTreeService) {\r\n        this.collectionTreeService = collectionTreeService;\r\n        this.expandAll = false;\r\n        this.expandedIds = [];\r\n        this.rearrange = new EventEmitter();\r\n        this.deleteCollection = new EventEmitter();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if ('collections' in changes && this.collections) {\r\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree, this.expandedIds);\r\n            this.collectionTreeService.setCollectionTree(this.collectionTree);\r\n            this.collectionTreeService.resetMoveList();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.collectionTreeService.rearrange$.subscribe(event => this.rearrange.emit(event));\r\n        this.collectionTreeService.delete$.subscribe(id => this.deleteCollection.emit(id));\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionTreeComponent, deps: [{ token: CollectionTreeService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: CollectionTreeComponent, selector: \"vdr-collection-tree\", inputs: { collections: \"collections\", activeCollectionId: \"activeCollectionId\", expandAll: \"expandAll\", expandedIds: \"expandedIds\", selectionManager: \"selectionManager\" }, outputs: { rearrange: \"rearrange\", deleteCollection: \"deleteCollection\" }, providers: [CollectionTreeService], usesOnChanges: true, ngImport: i0, template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: [\"cdkDropListGroupDisabled\"], exportAs: [\"cdkDropListGroup\"] }, { kind: \"component\", type: CollectionTreeNodeComponent, selector: \"vdr-collection-tree-node\", inputs: [\"collectionTree\", \"activeCollectionId\", \"expandAll\", \"selectionManager\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CollectionTreeComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-collection-tree', changeDetection: ChangeDetectionStrategy.OnPush, providers: [CollectionTreeService], template: \"<vdr-collection-tree-node\\r\\n    *ngIf=\\\"collectionTree\\\"\\r\\n    cdkDropListGroup\\r\\n    [expandAll]=\\\"expandAll\\\"\\r\\n    [collectionTree]=\\\"collectionTree\\\"\\r\\n    [selectionManager]=\\\"selectionManager\\\"\\r\\n    [activeCollectionId]=\\\"activeCollectionId\\\"\\r\\n></vdr-collection-tree-node>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: CollectionTreeService }]; }, propDecorators: { collections: [{\r\n                type: Input\r\n            }], activeCollectionId: [{\r\n                type: Input\r\n            }], expandAll: [{\r\n                type: Input\r\n            }], expandedIds: [{\r\n                type: Input\r\n            }], selectionManager: [{\r\n                type: Input\r\n            }], rearrange: [{\r\n                type: Output\r\n            }], deleteCollection: [{\r\n                type: Output\r\n            }] } });\n\nclass ConfirmVariantDeletionDialogComponent {\r\n    constructor() {\r\n        this.variants = [];\r\n    }\r\n    confirm() {\r\n        this.resolveWith(true);\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ConfirmVariantDeletionDialogComponent, selector: \"vdr-confirm-variant-deletion-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ConfirmVariantDeletionDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-confirm-variant-deletion-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>\\r\\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\\r\\n</ng-template>\\r\\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\\r\\n<ul>\\r\\n    <li *ngFor=\\\"let variant of variants\\\">{{ variant.name }} ({{ variant.sku }})</li>\\r\\n</ul>\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button type=\\\"submit\\\" (click)=\\\"confirm()\\\" class=\\\"btn btn-primary\\\">\\r\\n        {{ 'common.confirm' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }] });\n\nconst FACET_DETAIL_QUERY = gql `\r\n    query GetFacetDetail($id: ID!) {\r\n        facet(id: $id) {\r\n            ...FacetWithValues\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\nclass FacetDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService, modalService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.modalService = modalService;\r\n        this.customFields = this.getCustomFieldConfig('Facet');\r\n        this.customValueFields = this.getCustomFieldConfig('FacetValue');\r\n        this.detailForm = this.formBuilder.group({\r\n            facet: this.formBuilder.group({\r\n                code: ['', Validators.required],\r\n                name: '',\r\n                visible: true,\r\n                customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n            }),\r\n            values: this.formBuilder.array([]),\r\n        });\r\n        this.values = [];\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    updateCode(currentCode, nameValue) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['facet', 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n    updateValueCode(currentCode, nameValue, index) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['values', index, 'code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n    customValueFieldIsSet(index, name) {\r\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\r\n    }\r\n    getValuesFormArray() {\r\n        return this.detailForm.get('values');\r\n    }\r\n    addFacetValue() {\r\n        const valuesFormArray = this.detailForm.get('values');\r\n        if (valuesFormArray) {\r\n            const valueGroup = this.formBuilder.group({\r\n                id: '',\r\n                name: ['', Validators.required],\r\n                code: '',\r\n                customFields: this.formBuilder.group({}),\r\n            });\r\n            const newValue = { name: '', code: '' };\r\n            if (this.customValueFields.length) {\r\n                const customValueFieldsGroup = new UntypedFormGroup({});\r\n                newValue.customFields = {};\r\n                for (const fieldDef of this.customValueFields) {\r\n                    const key = fieldDef.name;\r\n                    customValueFieldsGroup.addControl(key, new UntypedFormControl());\r\n                }\r\n                valueGroup.addControl('customFields', customValueFieldsGroup);\r\n            }\r\n            valuesFormArray.insert(valuesFormArray.length, valueGroup);\r\n            this.values.push(newValue);\r\n        }\r\n    }\r\n    create() {\r\n        const facetForm = this.detailForm.get('facet');\r\n        if (!facetForm || !facetForm.dirty) {\r\n            return;\r\n        }\r\n        const newFacet = this.getUpdatedFacet({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            isPrivate: false,\r\n            languageCode: this.languageCode,\r\n            name: '',\r\n            code: '',\r\n            translations: [],\r\n            values: [],\r\n        }, facetForm, this.languageCode);\r\n        this.dataService.facet.createFacet(newFacet).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), { entity: 'Facet' });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Facet',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        const valuesArray = this.detailForm.get('values');\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([facet, languageCode]) => {\r\n            const facetForm = this.detailForm.get('facet');\r\n            const updateOperations = [];\r\n            if (facetForm && facetForm.dirty) {\r\n                const newFacet = this.getUpdatedFacet(facet, facetForm, languageCode);\r\n                if (newFacet) {\r\n                    updateOperations.push(this.dataService.facet.updateFacet(newFacet));\r\n                }\r\n            }\r\n            if (valuesArray && valuesArray.dirty) {\r\n                const createdValues = this.getCreatedFacetValues(facet, valuesArray, languageCode);\r\n                if (createdValues.length) {\r\n                    updateOperations.push(this.dataService.facet.createFacetValues(createdValues).pipe(switchMap(() => this.dataService.query(GetFacetDetailDocument, {\r\n                        id: this.id,\r\n                    }).single$)));\r\n                }\r\n                const updatedValues = this.getUpdatedFacetValues(facet, valuesArray, languageCode);\r\n                if (updatedValues.length) {\r\n                    updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\r\n                }\r\n            }\r\n            return forkJoin(updateOperations);\r\n        }))\r\n            .subscribe(() => {\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.notificationService.success(marker('common.notify-update-success'), { entity: 'Facet' });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Facet',\r\n            });\r\n        });\r\n    }\r\n    deleteFacetValue(facetValueId, index) {\r\n        if (!facetValueId) {\r\n            // deleting a newly-added (not persisted) FacetValue\r\n            const valuesFormArray = this.detailForm.get('values');\r\n            if (valuesFormArray) {\r\n                valuesFormArray.removeAt(index);\r\n            }\r\n            this.values.splice(index, 1);\r\n            return;\r\n        }\r\n        this.showModalAndDelete(facetValueId)\r\n            .pipe(switchMap(response => {\r\n            if (response.result === DeletionResult.DELETED) {\r\n                return [true];\r\n            }\r\n            else {\r\n                return this.showModalAndDelete(facetValueId, response.message || '').pipe(map(r => r.result === DeletionResult.DELETED));\r\n            }\r\n        }), switchMap(deleted => deleted\r\n            ? this.dataService.query(GetFacetDetailDocument, {\r\n                id: this.id,\r\n            }).single$\r\n            : []))\r\n            .subscribe(() => {\r\n            const valuesFormArray = this.detailForm.get('values');\r\n            if (valuesFormArray) {\r\n                valuesFormArray.removeAt(index);\r\n            }\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'FacetValue',\r\n            });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'FacetValue',\r\n            });\r\n        });\r\n    }\r\n    showModalAndDelete(facetValueId, message) {\r\n        return this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-facet-value'),\r\n            body: message,\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(result => result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY), map(result => result.deleteFacetValues[0]));\r\n    }\r\n    /**\r\n     * Sets the values of the form on changes to the facet or current language.\r\n     */\r\n    setFormValues(facet, languageCode) {\r\n        const currentTranslation = findTranslation(facet, languageCode);\r\n        this.detailForm.patchValue({\r\n            facet: {\r\n                code: facet.code,\r\n                visible: !facet.isPrivate,\r\n                name: currentTranslation?.name ?? '',\r\n            },\r\n        });\r\n        if (this.customFields.length) {\r\n            const customFieldsGroup = this.detailForm.get(['facet', 'customFields']);\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['facet', 'customFields']), facet, currentTranslation);\r\n        }\r\n        const currentValuesFormArray = this.detailForm.get('values');\r\n        this.values = [...facet.values];\r\n        facet.values.forEach(value => {\r\n            const valueTranslation = findTranslation(value, languageCode);\r\n            const group = {\r\n                id: value.id,\r\n                code: value.code,\r\n                name: valueTranslation ? valueTranslation.name : '',\r\n            };\r\n            let valueControl = currentValuesFormArray.controls.find(control => control.value.id === value.id);\r\n            if (valueControl) {\r\n                valueControl.get('id')?.setValue(group.id);\r\n                valueControl.get('code')?.setValue(group.code);\r\n                valueControl.get('name')?.setValue(group.name);\r\n            }\r\n            else {\r\n                valueControl = this.formBuilder.group(group);\r\n                currentValuesFormArray.push(valueControl);\r\n            }\r\n            if (this.customValueFields.length) {\r\n                let customValueFieldsGroup = valueControl.get(['customFields']);\r\n                if (!customValueFieldsGroup) {\r\n                    customValueFieldsGroup = new UntypedFormGroup({});\r\n                    valueControl.addControl('customFields', customValueFieldsGroup);\r\n                }\r\n                if (customValueFieldsGroup) {\r\n                    for (const fieldDef of this.customValueFields) {\r\n                        const key = fieldDef.name;\r\n                        const fieldValue = fieldDef.type === 'localeString'\r\n                            ? valueTranslation?.customFields?.[key]\r\n                            : value.customFields[key];\r\n                        const control = customValueFieldsGroup.get(key);\r\n                        if (control) {\r\n                            control.setValue(fieldValue);\r\n                        }\r\n                        else {\r\n                            customValueFieldsGroup.addControl(key, new UntypedFormControl(fieldValue));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedFacet(facet, facetFormGroup, languageCode) {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: facet,\r\n            updatedFields: facetFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: facet.name || '',\r\n            },\r\n        });\r\n        input.isPrivate = !facetFormGroup.value.visible;\r\n        return input;\r\n    }\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via a createFacetValues mutation.\r\n     */\r\n    getCreatedFacetValues(facet, valuesFormArray, languageCode) {\r\n        return valuesFormArray.controls\r\n            .filter(c => !c.value?.id)\r\n            .map(c => c.value)\r\n            .map(value => createUpdatedTranslatable({\r\n            translatable: { ...value, translations: [] },\r\n            updatedFields: value ?? {},\r\n            customFieldConfig: this.customValueFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: '',\r\n            },\r\n        }))\r\n            .map(input => ({\r\n            facetId: facet.id,\r\n            code: input.code ?? '',\r\n            ...input,\r\n        }));\r\n    }\r\n    /**\r\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\r\n     * which can be persisted to the API via an updateFacetValues mutation.\r\n     */\r\n    getUpdatedFacetValues(facet, valuesFormArray, languageCode) {\r\n        const dirtyValues = facet.values.filter((v, i) => {\r\n            const formRow = valuesFormArray.get(i.toString());\r\n            return formRow && formRow.dirty && formRow.value.id;\r\n        });\r\n        const dirtyValueValues = valuesFormArray.controls\r\n            .filter(c => c.dirty && c.value.id)\r\n            .map(c => c.value);\r\n        if (dirtyValues.length !== dirtyValueValues.length) {\r\n            throw new Error(marker(`error.facet-value-form-values-do-not-match`));\r\n        }\r\n        return dirtyValues\r\n            .map((value, i) => createUpdatedTranslatable({\r\n            translatable: value,\r\n            updatedFields: dirtyValueValues[i],\r\n            customFieldConfig: this.customValueFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: '',\r\n            },\r\n        }))\r\n            .filter(notNullOrUndefined);\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: FacetDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }, { token: i1.ModalService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: FacetDetailComponent, selector: \"vdr-facet-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <table\\r\\n                    class=\\\"facet-values-list table\\\"\\r\\n                    formArrayName=\\\"values\\\"\\r\\n                    *ngIf=\\\"0 < getValuesFormArray().length\\\"\\r\\n                >\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th></th>\\r\\n                            <th>{{ 'common.name' | translate }}</th>\\r\\n                            <th>{{ 'common.code' | translate }}</th>\\r\\n                            <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                            </ng-container>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr\\r\\n                            class=\\\"facet-value\\\"\\r\\n                            *ngFor=\\\"let value of values; let i = index\\\"\\r\\n                            [formGroup]=\\\"detailForm.get(['values', i])\\\"\\r\\n                        >\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    formControlName=\\\"name\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    (input)=\\\"updateValueCode(entity?.values[i]?.code, $event.target.value, i)\\\"\\r\\n                                />\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                            </td>\\r\\n                            <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"FacetValue\\\"\\r\\n                                    [customFields]=\\\"customValueFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"detailForm.get(['values', i, 'customFields'])\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <vdr-dropdown>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" vdrDropdownTrigger>\\r\\n                                        {{ 'common.actions' | translate }}\\r\\n                                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                                    </button>\\r\\n                                    <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                        <button\\r\\n                                            type=\\\"button\\\"\\r\\n                                            class=\\\"delete-button\\\"\\r\\n                                            (click)=\\\"deleteFacetValue(entity?.values[i]?.id, i)\\\"\\r\\n                                            [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                            vdrDropdownItem\\r\\n                                        >\\r\\n                                            <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                            {{ 'common.delete' | translate }}\\r\\n                                        </button>\\r\\n                                    </vdr-dropdown-menu>\\r\\n                                </vdr-dropdown>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"directive\", type: i2.FormArrayName, selector: \"[formArrayName]\", inputs: [\"formArrayName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.EntityInfoComponent, selector: \"vdr-entity-info\", inputs: [\"small\", \"entity\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: FacetDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-facet-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermission\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar formGroupName=\\\"facet\\\">\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"visible\\\"\\r\\n                            id=\\\"visibility\\\"\\r\\n                        />\\r\\n                        <label class=\\\"visible-toggle\\\">\\r\\n                            <ng-container *ngIf=\\\"detailForm.value.facet?.visible; else private\\\">{{\\r\\n                                'catalog.public' | translate\\r\\n                            }}</ng-container>\\r\\n                            <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\\r\\n                        </label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card formGroupName=\\\"facet\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            (input)=\\\"updateCode(entity?.code, $event.target.value)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n                        <input\\r\\n                            id=\\\"code\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"code\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Facet\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('facet.customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"facet-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n\\r\\n            <vdr-card\\r\\n                *ngIf=\\\"!(isNew$ | async)\\\"\\r\\n                [title]=\\\"'catalog.facet-values' | translate\\\"\\r\\n                [paddingX]=\\\"false\\\"\\r\\n            >\\r\\n                <table\\r\\n                    class=\\\"facet-values-list table\\\"\\r\\n                    formArrayName=\\\"values\\\"\\r\\n                    *ngIf=\\\"0 < getValuesFormArray().length\\\"\\r\\n                >\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th></th>\\r\\n                            <th>{{ 'common.name' | translate }}</th>\\r\\n                            <th>{{ 'common.code' | translate }}</th>\\r\\n                            <ng-container *ngIf=\\\"customValueFields.length\\\">\\r\\n                                <th>{{ 'common.custom-fields' | translate }}</th>\\r\\n                            </ng-container>\\r\\n                            <th></th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr\\r\\n                            class=\\\"facet-value\\\"\\r\\n                            *ngFor=\\\"let value of values; let i = index\\\"\\r\\n                            [formGroup]=\\\"detailForm.get(['values', i])\\\"\\r\\n                        >\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <vdr-entity-info [entity]=\\\"value\\\"></vdr-entity-info>\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <input\\r\\n                                    type=\\\"text\\\"\\r\\n                                    formControlName=\\\"name\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                    (input)=\\\"updateValueCode(entity?.values[i]?.code, $event.target.value, i)\\\"\\r\\n                                />\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"code\\\" />\\r\\n                            </td>\\r\\n                            <td class=\\\"\\\" *ngIf=\\\"customValueFields.length\\\">\\r\\n                                <vdr-tabbed-custom-fields\\r\\n                                    entityName=\\\"FacetValue\\\"\\r\\n                                    [customFields]=\\\"customValueFields\\\"\\r\\n                                    [compact]=\\\"true\\\"\\r\\n                                    [customFieldsFormGroup]=\\\"detailForm.get(['values', i, 'customFields'])\\\"\\r\\n                                    [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                ></vdr-tabbed-custom-fields>\\r\\n                            </td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <vdr-dropdown>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-link btn-sm\\\" vdrDropdownTrigger>\\r\\n                                        {{ 'common.actions' | translate }}\\r\\n                                        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\r\\n                                    </button>\\r\\n                                    <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                                        <button\\r\\n                                            type=\\\"button\\\"\\r\\n                                            class=\\\"delete-button\\\"\\r\\n                                            (click)=\\\"deleteFacetValue(entity?.values[i]?.id, i)\\\"\\r\\n                                            [disabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                                            vdrDropdownItem\\r\\n                                        >\\r\\n                                            <clr-icon shape=\\\"trash\\\" class=\\\"is-danger\\\"></clr-icon>\\r\\n                                            {{ 'common.delete' | translate }}\\r\\n                                        </button>\\r\\n                                    </vdr-dropdown-menu>\\r\\n                                </vdr-dropdown>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n\\r\\n                <div>\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"button m-3\\\"\\r\\n                        *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n                        (click)=\\\"addFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"add\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facet-value' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".visible-toggle{margin-top:-3px!important}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }, { type: i1.ModalService }]; } });\n\nconst deleteFacetsBulkAction = createBulkDeleteAction({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteFacet) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    shouldRetryItem: (response, item) => !!response.message,\r\n    bulkDelete: (dataService, ids, retrying) => dataService.facet.deleteFacets(ids, retrying).pipe(map(res => res.deleteFacets)),\r\n});\r\nconst assignFacetsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateFacet),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, facetIds, channelId) => dataService.facet\r\n        .assignFacetsToChannel({\r\n        facetIds,\r\n        channelId,\r\n    })\r\n        .pipe(map(res => res.assignFacetsToChannel)),\r\n});\r\nconst removeFacetsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'facet-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteFacet),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, facetIds, channelId, retrying) => dataService.facet\r\n        .removeFacetsFromChannel({\r\n        channelId: channelId,\r\n        facetIds,\r\n        force: retrying,\r\n    })\r\n        .pipe(map(res => res.removeFacetsFromChannel)),\r\n    isErrorResult: result => (result.__typename === 'FacetInUseError' ? result.message : undefined),\r\n});\r\nconst removeFacetsFromChannelBulkAction2 = {\r\n    location: 'facet-list',\r\n    label: marker('catalog.remove-from-channel'),\r\n    getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\r\n    icon: 'layers',\r\n    iconClass: 'is-warning',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateFacet) ||\r\n        userPermissions.includes(Permission.UpdateCatalog),\r\n    isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        const activeChannelId$ = dataService.client\r\n            .userStatus()\r\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\r\n        function showModalAndDelete(facetIds, message) {\r\n            return modalService\r\n                .dialog({\r\n                title: marker('catalog.remove-from-channel'),\r\n                translationVars: {\r\n                    count: selection.length,\r\n                },\r\n                size: message ? 'lg' : 'md',\r\n                body: message,\r\n                buttons: [\r\n                    { type: 'secondary', label: marker('common.cancel') },\r\n                    {\r\n                        type: 'danger',\r\n                        label: message ? marker('common.force-remove') : marker('common.remove'),\r\n                        returnValue: true,\r\n                    },\r\n                ],\r\n            })\r\n                .pipe(switchMap(res => res\r\n                ? activeChannelId$.pipe(switchMap(activeChannelId => activeChannelId\r\n                    ? dataService.facet.removeFacetsFromChannel({\r\n                        channelId: activeChannelId,\r\n                        facetIds,\r\n                        force: !!message,\r\n                    })\r\n                    : EMPTY), map(res2 => res2.removeFacetsFromChannel))\r\n                : EMPTY));\r\n        }\r\n        showModalAndDelete(unique(selection.map(f => f.id)))\r\n            .pipe(switchMap(result => {\r\n            let removedCount = selection.length;\r\n            const errors = [];\r\n            const errorIds = [];\r\n            let i = 0;\r\n            for (const item of result) {\r\n                if (item.__typename === 'FacetInUseError') {\r\n                    errors.push(item.message);\r\n                    errorIds.push(selection[i]?.id);\r\n                    removedCount--;\r\n                }\r\n                i++;\r\n            }\r\n            if (0 < errorIds.length) {\r\n                return showModalAndDelete(errorIds, errors.join('\\n')).pipe(map(result2 => {\r\n                    const notRemovedCount = result2.filter(r => r.__typename === 'FacetInUseError').length;\r\n                    return selection.length - notRemovedCount;\r\n                }));\r\n            }\r\n            else {\r\n                return of(removedCount);\r\n            }\r\n        }), switchMap(removedCount => removedCount\r\n            ? getChannelCodeFromUserStatus(dataService).then(({ channelCode }) => ({\r\n                channelCode,\r\n                removedCount,\r\n            }))\r\n            : EMPTY))\r\n            .subscribe(({ removedCount, channelCode }) => {\r\n            if (removedCount) {\r\n                hostComponent.refresh();\r\n                clearSelection();\r\n                notificationService.success(marker('catalog.notify-remove-facets-from-channel-success'), {\r\n                    count: removedCount,\r\n                    channelCode,\r\n                });\r\n            }\r\n        });\r\n    },\r\n};\n\nconst FACET_LIST_QUERY = gql `\r\n    query GetFacetList($options: FacetListOptions) {\r\n        facets(options: $options) {\r\n            items {\r\n                ...FacetWithValues\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${FACET_WITH_VALUES_FRAGMENT}\r\n`;\r\nclass FacetListComponent extends TypedBaseListComponent {\r\n    constructor(dataService) {\r\n        super();\r\n        this.dataService = dataService;\r\n        this.initialLimit = 3;\r\n        this.displayLimit = {};\r\n        this.customFields = this.getCustomFieldConfig('Facet');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilter({\r\n            name: 'visibility',\r\n            type: { kind: 'boolean' },\r\n            label: marker('common.visibility'),\r\n            toFilterInput: value => ({\r\n                isPrivate: { eq: !value },\r\n            }),\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSort({ name: 'id' })\r\n            .addSort({ name: 'createdAt' })\r\n            .addSort({ name: 'updatedAt' })\r\n            .addSort({ name: 'name' })\r\n            .addSort({ name: 'code' })\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        super.configure({\r\n            document: GetFacetListDocument,\r\n            getItems: data => data.facets,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\r\n        });\r\n    }\r\n    toggleDisplayLimit(facet) {\r\n        if (this.displayLimit[facet.id] === facet.values.length) {\r\n            this.displayLimit[facet.id] = this.initialLimit;\r\n        }\r\n        else {\r\n            this.displayLimit[facet.id] = facet.values.length;\r\n        }\r\n    }\r\n    setLanguage(code) {\r\n        this.dataService.client.setContentLanguage(code).subscribe();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: FacetListComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: FacetListComponent, selector: \"vdr-facet-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"facet-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.values | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.values.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.values.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.values.length - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i3$1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: FacetListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-facet-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"facet-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateFacet']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-facet' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"facet-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"facet-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    ></vdr-dt2-search>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', facet.id]\\\"\\r\\n                ><span>{{ facet.name }}</span>\\r\\n                <clr-icon shape=\\\"arrow right\\\"></clr-icon>\\r\\n            </a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.code' | translate\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            {{ facet.code }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.visibility' | translate\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"facet.isPrivate\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.private' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!facet.isPrivate\\\" colorType=\\\"success\\\">{{\\r\\n                'common.public' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.values' | translate\\\">\\r\\n        <ng-template let-facet=\\\"item\\\">\\r\\n            <div class=\\\"facet-values-list\\\">\\r\\n                <vdr-facet-value-chip\\r\\n                    *ngFor=\\\"let value of facet.values | slice : 0 : displayLimit[facet.id] || 3\\\"\\r\\n                    [facetValue]=\\\"value\\\"\\r\\n                    [removable]=\\\"false\\\"\\r\\n                    [displayFacetName]=\\\"false\\\"\\r\\n                ></vdr-facet-value-chip>\\r\\n                <button\\r\\n                    class=\\\"button-small\\\"\\r\\n                    *ngIf=\\\"facet.values.length > initialLimit\\\"\\r\\n                    (click)=\\\"toggleDisplayLimit(facet)\\\"\\r\\n                >\\r\\n                    <ng-container *ngIf=\\\"(displayLimit[facet.id] || 0) < facet.values.length; else collapse\\\">\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ facet.values.length - initialLimit }}\\r\\n                    </ng-container>\\r\\n                    <ng-template #collapse>\\r\\n                        <clr-icon shape=\\\"minus\\\"></clr-icon>\\r\\n                    </ng-template>\\r\\n                </button>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let customField of customFields\\\" [customField]=\\\"customField\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".facet-values-list{max-width:500px;display:flex;flex-wrap:wrap;align-items:center;gap:4px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; } });\n\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\r\nclass GenerateProductVariantsComponent {\r\n    constructor(dataService, formBuilder) {\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.variantsChange = new EventEmitter();\r\n        this.optionGroups = [];\r\n        this.variantFormValues = {};\r\n        this.selectedStockLocationId = null;\r\n    }\r\n    ngOnInit() {\r\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\r\n            this.currencyCode = data.activeChannel.defaultCurrencyCode;\r\n        });\r\n        this.stockLocations$ = this.dataService\r\n            .query(GetStockLocationListDocument, {\r\n            options: {\r\n                take: 999,\r\n            },\r\n        })\r\n            .refetchOnChannelChange()\r\n            .mapStream(({ stockLocations }) => stockLocations.items)\r\n            .pipe(tap(items => {\r\n            if (items.length) {\r\n                this.selectedStockLocationId = items[0].id;\r\n            }\r\n        }));\r\n        this.generateVariants();\r\n    }\r\n    addOption() {\r\n        this.optionGroups.push({ name: '', values: [] });\r\n        const index = this.optionGroups.length - 1;\r\n        setTimeout(() => {\r\n            const input = this.groupNameInputs.get(index)?.nativeElement;\r\n            input?.focus();\r\n        });\r\n    }\r\n    removeOption(name) {\r\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\r\n        this.generateVariants();\r\n    }\r\n    generateVariants() {\r\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\r\n        const groups = totalValuesCount\r\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\r\n            : [[DEFAULT_VARIANT_CODE]];\r\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\r\n        this.variants.forEach((variant, index) => {\r\n            if (!this.variantFormValues[variant.id]) {\r\n                const formGroup = this.formBuilder.nonNullable.group({\r\n                    optionValues: [variant.values],\r\n                    enabled: true,\r\n                    price: this.copyFromDefault(variant.id, 'price', 0),\r\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\r\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\r\n                });\r\n                formGroup.valueChanges.subscribe(() => this.onFormChange());\r\n                if (index === 0) {\r\n                    formGroup.get('price')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('price', formGroup.get('price'));\r\n                    });\r\n                    formGroup.get('sku')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('sku', formGroup.get('sku'));\r\n                    });\r\n                    formGroup.get('stock')?.valueChanges.subscribe(value => {\r\n                        this.copyValuesToPristine('stock', formGroup.get('stock'));\r\n                    });\r\n                }\r\n                this.variantFormValues[variant.id] = formGroup;\r\n            }\r\n        });\r\n    }\r\n    trackByFn(index, variant) {\r\n        return variant.values.join('|');\r\n    }\r\n    handleEnter(event, optionValueInputComponent) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        optionValueInputComponent.focus();\r\n    }\r\n    copyValuesToPristine(field, formControl) {\r\n        if (!formControl) {\r\n            return;\r\n        }\r\n        Object.values(this.variantFormValues).forEach(formGroup => {\r\n            const correspondingFormControl = formGroup.get(field);\r\n            if (correspondingFormControl && correspondingFormControl.pristine) {\r\n                correspondingFormControl.setValue(formControl.value, { emitEvent: false });\r\n            }\r\n        });\r\n    }\r\n    onFormChange() {\r\n        const variantsToCreate = this.variants\r\n            .map(v => this.variantFormValues[v.id].value)\r\n            .filter(v => v.enabled);\r\n        this.variantsChange.emit({\r\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\r\n            variants: variantsToCreate,\r\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n            stockLocationId: this.selectedStockLocationId,\r\n        });\r\n    }\r\n    copyFromDefault(variantId, prop, value) {\r\n        return variantId !== DEFAULT_VARIANT_CODE\r\n            ? this.variantFormValues[DEFAULT_VARIANT_CODE].get(prop)?.value\r\n            : value;\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: GenerateProductVariantsComponent, deps: [{ token: i1.DataService }, { token: i2.FormBuilder }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: { variantsChange: \"variantsChange\" }, viewQueries: [{ propertyName: \"groupNameInputs\", predicate: [\"optionGroupName\"], descendants: true, read: ElementRef }], ngImport: i0, template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"], dependencies: [{ kind: \"component\", type: i3.ClrAlert, selector: \"clr-alert\", inputs: [\"clrAlertSizeSmall\", \"clrAlertClosable\", \"clrAlertAppLevel\", \"clrCloseButtonAriaLabel\", \"clrAlertClosed\", \"clrAlertType\", \"clrAlertIcon\"], outputs: [\"clrAlertClosedChange\"] }, { kind: \"component\", type: i3.ClrAlertItem, selector: \"clr-alert-item\" }, { kind: \"directive\", type: i3.ClrAlertText, selector: \".alert-text\" }, { kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: OptionValueInputComponent, selector: \"vdr-option-value-input\", inputs: [\"groupName\", \"options\", \"disabled\"], outputs: [\"add\", \"remove\", \"edit\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: GenerateProductVariantsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-generate-product-variants', template: \"<div *ngFor=\\\"let group of optionGroups\\\" class=\\\"option-groups\\\">\\r\\n    <div class=\\\"name\\\">\\r\\n        <label>{{ 'catalog.option' | translate }}</label>\\r\\n        <input\\r\\n            #optionGroupName\\r\\n            placeholder=\\\"e.g. Size\\\"\\r\\n            clrInput\\r\\n            [(ngModel)]=\\\"group.name\\\"\\r\\n            name=\\\"name\\\"\\r\\n            required\\r\\n            (keydown.enter)=\\\"handleEnter($event, optionValueInputComponent)\\\"\\r\\n        />\\r\\n    </div>\\r\\n    <div class=\\\"values\\\">\\r\\n        <label>{{ 'catalog.option-values' | translate }}</label>\\r\\n        <vdr-option-value-input\\r\\n            #optionValueInputComponent\\r\\n            [(ngModel)]=\\\"group.values\\\"\\r\\n            (ngModelChange)=\\\"generateVariants()\\\"\\r\\n            (edit)=\\\"generateVariants()\\\"\\r\\n            [groupName]=\\\"group.name\\\"\\r\\n            [disabled]=\\\"group.name === ''\\\"\\r\\n        ></vdr-option-value-input>\\r\\n    </div>\\r\\n    <div class=\\\"remove-group\\\">\\r\\n        <button\\r\\n            class=\\\"button-small mt-2\\\"\\r\\n            [title]=\\\"'catalog.remove-option' | translate\\\"\\r\\n            (click)=\\\"removeOption(group.name)\\\"\\r\\n        >\\r\\n            <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<button class=\\\"button mb-2\\\" (click)=\\\"addOption()\\\">\\r\\n    <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n    {{ 'catalog.add-option' | translate }}\\r\\n</button>\\r\\n\\r\\n<ng-container *ngIf=\\\"stockLocations$ | async as stockLocations\\\">\\r\\n    <clr-alert *ngIf=\\\"stockLocations.length === 0\\\" clrAlertType=\\\"warning\\\" [clrAlertClosable]=\\\"false\\\" class=\\\"\\\">\\r\\n        <clr-alert-item>\\r\\n            <span class=\\\"alert-text\\\">\\r\\n                {{ 'catalog.no-stock-locations-available-on-current-channel' | translate }}\\r\\n            </span>\\r\\n        </clr-alert-item>\\r\\n    </clr-alert>\\r\\n\\r\\n    <div class=\\\"form-grid mb-2\\\">\\r\\n        <vdr-form-field *ngIf=\\\"stockLocations.length\\\" [label]=\\\"'catalog.add-stock-to-location' | translate\\\">\\r\\n            <select [(ngModel)]=\\\"selectedStockLocationId\\\">\\r\\n                <option *ngFor=\\\"let location of stockLocations\\\" [value]=\\\"location.id\\\">\\r\\n                    {{ location.name }}\\r\\n                </option>\\r\\n            </select>\\r\\n        </vdr-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"variants-preview\\\" *ngIf=\\\"0 < stockLocations.length\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'common.create' | translate }}</th>\\r\\n                    <th *ngIf=\\\"1 < variants.length\\\">{{ 'catalog.variant' | translate }}</th>\\r\\n                    <th>{{ 'catalog.sku' | translate }}</th>\\r\\n                    <th>{{ 'catalog.price' | translate }}</th>\\r\\n                    <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tr\\r\\n                *ngFor=\\\"let variant of variants; trackBy: trackByFn\\\"\\r\\n                [class.disabled]=\\\"!variantFormValues[variant.id].value.enabled === false\\\"\\r\\n                [formGroup]=\\\"variantFormValues[variant.id]\\\"\\r\\n            >\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    <input type=\\\"checkbox\\\" formControlName=\\\"enabled\\\" clrCheckbox />\\r\\n                </td>\\r\\n                <td *ngIf=\\\"1 < variants.length\\\">\\r\\n                    {{ variant.values.join(' ') }}\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"text\\\" formControlName=\\\"sku\\\" [placeholder]=\\\"'catalog.sku' | translate\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <vdr-currency-input\\r\\n                            formControlName=\\\"price\\\"\\r\\n                            [currencyCode]=\\\"currencyCode\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                    <vdr-form-field>\\r\\n                        <input type=\\\"number\\\" formControlName=\\\"stock\\\" min=\\\"0\\\" step=\\\"1\\\" />\\r\\n                    </vdr-form-field>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </table>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\", styles: [\":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i2.FormBuilder }]; }, propDecorators: { variantsChange: [{\r\n                type: Output\r\n            }], groupNameInputs: [{\r\n                type: ViewChildren,\r\n                args: ['optionGroupName', { read: ElementRef }]\r\n            }] } });\n\nclass ProductVariantListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.hideLanguageSelect = false;\r\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilters([\r\n            {\r\n                name: 'name',\r\n                type: { kind: 'text' },\r\n                label: marker('common.name'),\r\n                filterField: 'name',\r\n            },\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'boolean' },\r\n                label: marker('common.enabled'),\r\n                filterField: 'enabled',\r\n            },\r\n            {\r\n                name: 'sku',\r\n                type: { kind: 'text' },\r\n                label: marker('catalog.sku'),\r\n                filterField: 'sku',\r\n            },\r\n            {\r\n                name: 'price',\r\n                type: { kind: 'number', inputType: 'currency' },\r\n                label: marker('common.price'),\r\n                filterField: 'price',\r\n            },\r\n            {\r\n                name: 'priceWithTax',\r\n                type: { kind: 'number', inputType: 'currency' },\r\n                label: marker('common.price-with-tax'),\r\n                filterField: 'priceWithTax',\r\n            },\r\n        ])\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'sku' },\r\n            { name: 'price' },\r\n            { name: 'priceWithTax' },\r\n        ])\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.configure({\r\n            document: ProductVariantListQueryDocument,\r\n            getItems: data => data.productVariants,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        sku: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                        ...(this.productId ? { productId: { eq: this.productId } } : {}),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: { productId: \"productId\", hideLanguageSelect: \"hideLanguageSelect\" }, usesInheritance: true, ngImport: i0, template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-variant-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/inventory', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-right:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variant-list', template: \"<vdr-page-block *ngIf=\\\"!hideLanguageSelect\\\">\\r\\n    <vdr-language-selector\\r\\n        [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n        [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n    ></vdr-language-selector>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-variant-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-variant-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-sku' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"variant.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <a\\r\\n                class=\\\"button-ghost\\\"\\r\\n                [routerLink]=\\\"['/catalog/inventory', variant.productId, 'variants', variant.id]\\\"\\r\\n                ><span>{{ variant.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.sku' | translate\\\" [sort]=\\\"sorts.get('sku')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.sku }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"variant.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!variant.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.price' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('price')\\\"\\r\\n    >\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.price | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.price-with-tax' | translate\\\" [sort]=\\\"sorts.get('priceWithTax')\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            {{ variant.priceWithTax | localeCurrency : variant.currencyCode }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.stock-on-hand' | translate\\\" [hiddenByDefault]=\\\"false\\\">\\r\\n        <ng-template let-variant=\\\"item\\\">\\r\\n            <vdr-chip *ngFor=\\\"let stockLevel of variant.stockLevels\\\" [title]=\\\"stockLevel.stockLocation?.name\\\">\\r\\n                <div class=\\\"flex center\\\">\\r\\n                    <div>\\r\\n                        {{ stockLevel.stockOnHand\\r\\n                        }}<span class=\\\"ml-1\\\" *ngIf=\\\"stockLevel.stockAllocated\\\"\\r\\n                            >({{ stockLevel.stockAllocated }} allocated)</span\\r\\n                        >\\r\\n                    </div>\\r\\n                </div>\\r\\n            </vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column *ngFor=\\\"let field of customFields\\\" [customField]=\\\"field\\\" [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-right:24px}.sku{color:var(--color-text-300)}\\n\"] }]\r\n        }], ctorParameters: function () { return []; }, propDecorators: { productId: [{\r\n                type: Input\r\n            }], hideLanguageSelect: [{\r\n                type: Input\r\n            }] } });\n\nconst GET_PRODUCT_DETAIL = gql `\r\n    query GetProductDetail($id: ID!) {\r\n        product(id: $id) {\r\n            ...ProductDetail\r\n        }\r\n    }\r\n    ${PRODUCT_DETAIL_FRAGMENT}\r\n`;\r\nclass ProductDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(route, router, serverConfigService, productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\r\n        super();\r\n        this.productDetailService = productDetailService;\r\n        this.formBuilder = formBuilder;\r\n        this.modalService = modalService;\r\n        this.notificationService = notificationService;\r\n        this.dataService = dataService;\r\n        this.changeDetector = changeDetector;\r\n        this.customFields = this.getCustomFieldConfig('Product');\r\n        this.detailForm = this.formBuilder.group({\r\n            enabled: true,\r\n            name: ['', Validators.required],\r\n            autoUpdateVariantNames: true,\r\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9._-]+$/)],\r\n            description: '',\r\n            facetValueIds: [[]],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.assetChanges = {};\r\n        this.createVariantsConfig = { groups: [], variants: [], stockLocationId: '' };\r\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        const productFacetValues$ = this.entity$.pipe(map(product => product.facetValues));\r\n        const productGroup = this.detailForm;\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const formFacetValueIdChanges$ = productGroup.get('facetValueIds').valueChanges.pipe(skip(1), distinctUntilChanged(), switchMap(ids => this.dataService.facet\r\n            .getFacetValues({ filter: { id: { in: ids } } })\r\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\r\n        this.facetValues$ = concat(productFacetValues$.pipe(take(1)), productFacetValues$.pipe(switchMapTo(formFacetValueIdChanges$)));\r\n        this.productChannels$ = this.entity$.pipe(map(p => p.channels));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    isDefaultChannel(channelCode) {\r\n        return channelCode === DEFAULT_CHANNEL_CODE;\r\n    }\r\n    assignToChannel() {\r\n        this.productChannels$\r\n            .pipe(take(1), switchMap(channels => this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productIds: [this.id],\r\n                currentChannelIds: channels.map(c => c.id),\r\n            },\r\n        })))\r\n            .subscribe();\r\n    }\r\n    removeFromChannel(channelId) {\r\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\r\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\r\n            title: marker('catalog.remove-product-from-channel'),\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                {\r\n                    type: 'danger',\r\n                    label: marker('catalog.remove-from-channel'),\r\n                    translationVars: { channelCode },\r\n                    returnValue: true,\r\n                },\r\n            ],\r\n        })), switchMap(response => response\r\n            ? this.dataService.product.removeProductsFromChannel({\r\n                channelId,\r\n                productIds: [this.id],\r\n            })\r\n            : EMPTY))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('catalog.notify-remove-product-from-channel-success'));\r\n        }, err => {\r\n            this.notificationService.error(marker('catalog.notify-remove-product-from-channel-error'));\r\n        });\r\n    }\r\n    assignVariantToChannel(variant) {\r\n        return this.modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productIds: [this.id],\r\n                productVariantIds: [variant.id],\r\n                currentChannelIds: variant.channels.map(c => c.id),\r\n            },\r\n        })\r\n            .subscribe();\r\n    }\r\n    removeVariantFromChannel({ channelId, variant }) {\r\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\r\n            .pipe(switchMap(({ channelCode }) => this.modalService.dialog({\r\n            title: marker('catalog.remove-product-variant-from-channel'),\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                {\r\n                    type: 'danger',\r\n                    label: marker('catalog.remove-from-channel'),\r\n                    translationVars: { channelCode },\r\n                    returnValue: true,\r\n                },\r\n            ],\r\n        })), switchMap(response => response\r\n            ? this.dataService.product.removeVariantsFromChannel({\r\n                channelId,\r\n                productVariantIds: [variant.id],\r\n            })\r\n            : EMPTY))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('catalog.notify-remove-variant-from-channel-success'));\r\n        }, err => {\r\n            this.notificationService.error(marker('catalog.notify-remove-variant-from-channel-error'));\r\n        });\r\n    }\r\n    assetsChanged() {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n    /**\r\n     * If creating a new product, automatically generate the slug based on the product name.\r\n     */\r\n    updateSlug(nameValue) {\r\n        const slugControl = this.detailForm.get('slug');\r\n        const currentTranslation = this.entity ? findTranslation(this.entity, this.languageCode) : undefined;\r\n        const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\r\n        if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\r\n            slugControl.setValue(normalizeString(`${nameValue}`, '-'));\r\n        }\r\n    }\r\n    selectProductFacetValue() {\r\n        this.displayFacetValueModal().subscribe(facetValueIds => {\r\n            if (facetValueIds) {\r\n                const productGroup = this.detailForm;\r\n                const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n                productGroup.patchValue({\r\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\r\n                });\r\n                productGroup.markAsDirty();\r\n            }\r\n        });\r\n    }\r\n    updateProductOption(input) {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([product, languageCode]) => this.productDetailService.updateProductOption(input, product, languageCode)))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'ProductOption',\r\n            });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'ProductOption',\r\n            });\r\n        });\r\n    }\r\n    removeProductFacetValue(facetValueId) {\r\n        const productGroup = this.detailForm;\r\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n        productGroup.patchValue({\r\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\r\n        });\r\n        productGroup.markAsDirty();\r\n    }\r\n    displayFacetValueModal() {\r\n        return this.modalService\r\n            .fromComponent(ApplyFacetDialogComponent, {\r\n            size: 'md',\r\n            closable: true,\r\n        })\r\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\r\n    }\r\n    create() {\r\n        const productGroup = this.detailForm;\r\n        if (!productGroup.dirty) {\r\n            return;\r\n        }\r\n        const newProduct = this.getUpdatedProduct({\r\n            id: '',\r\n            createdAt: '',\r\n            updatedAt: '',\r\n            enabled: true,\r\n            languageCode: this.languageCode,\r\n            name: '',\r\n            slug: '',\r\n            featuredAsset: null,\r\n            assets: [],\r\n            description: '',\r\n            translations: [],\r\n            optionGroups: [],\r\n            facetValues: [],\r\n            channels: [],\r\n        }, productGroup, this.languageCode);\r\n        this.productDetailService\r\n            .createProductWithVariants(newProduct, this.createVariantsConfig, this.languageCode)\r\n            .subscribe(({ createProductVariants, productId }) => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'Product',\r\n            });\r\n            this.assetChanges = {};\r\n            this.detailForm.markAsPristine();\r\n            this.router.navigate(['../', productId], { relativeTo: this.route });\r\n        }, err => {\r\n            // eslint-disable-next-line no-console\r\n            console.error(err);\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'Product',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([product, languageCode]) => {\r\n            const productGroup = this.detailForm;\r\n            let productInput;\r\n            let variantsInput;\r\n            if (productGroup.dirty || this.assetsChanged()) {\r\n                productInput = this.getUpdatedProduct(product, productGroup, languageCode);\r\n            }\r\n            return this.productDetailService.updateProduct({\r\n                product,\r\n                languageCode,\r\n                autoUpdate: this.detailForm.get(['product', 'autoUpdateVariantNames'])?.value ?? false,\r\n                productInput,\r\n                variantsInput,\r\n            });\r\n        }))\r\n            .subscribe(result => {\r\n            this.updateSlugAfterSave(result);\r\n            this.detailForm.markAsPristine();\r\n            this.assetChanges = {};\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'Product',\r\n            });\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'Product',\r\n            });\r\n        });\r\n    }\r\n    canDeactivate() {\r\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\r\n    }\r\n    /**\r\n     * Sets the values of the form on changes to the product or current language.\r\n     */\r\n    setFormValues(product, languageCode) {\r\n        const currentTranslation = findTranslation(product, languageCode);\r\n        this.detailForm.patchValue({\r\n            enabled: product.enabled,\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            slug: currentTranslation ? currentTranslation.slug : '',\r\n            description: currentTranslation ? currentTranslation.description : '',\r\n            facetValueIds: product.facetValues.map(fv => fv.id),\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), product, currentTranslation);\r\n        }\r\n    }\r\n    /**\r\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedProduct(product, productFormGroup, languageCode) {\r\n        const updatedProduct = createUpdatedTranslatable({\r\n            translatable: product,\r\n            updatedFields: productFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: product.name || '',\r\n                slug: product.slug || '',\r\n                description: product.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedProduct,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            facetValueIds: productFormGroup.value.facetValueIds,\r\n        };\r\n    }\r\n    /**\r\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\r\n     */\r\n    updateSlugAfterSave(results) {\r\n        const firstResult = results[0];\r\n        const slugControl = this.detailForm.get(['product', 'slug']);\r\n        function isUpdateMutation(input) {\r\n            return input.hasOwnProperty('updateProduct');\r\n        }\r\n        if (slugControl && isUpdateMutation(firstResult)) {\r\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductDetailComponent, deps: [{ token: i1$1.ActivatedRoute }, { token: i1$1.Router }, { token: i1.ServerConfigService }, { token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductDetailComponent, selector: \"vdr-product-detail2\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'catalog.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-left:none}.group-name{padding-right:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;max-height:144px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"directive\", type: i1.IfMultichannelDirective, selector: \"[vdrIfMultichannel]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.ChannelBadgeComponent, selector: \"vdr-channel-badge\", inputs: [\"channelCode\"] }, { kind: \"directive\", type: i1.IfDefaultChannelActiveDirective, selector: \"[vdrIfDefaultChannelActive]\", inputs: [\"vdrIfMultichannelElse\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: GenerateProductVariantsComponent, selector: \"vdr-generate-product-variants\", outputs: [\"variantsChange\"] }, { kind: \"component\", type: AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: ProductVariantListComponent, selector: \"vdr-product-variant-list\", inputs: [\"productId\", \"hideLanguageSelect\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.ChannelLabelPipe, name: \"channelCodeToLabel\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-detail2', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <div class=\\\"flex clr-flex-row\\\"></div>\\r\\n            <vdr-language-selector\\r\\n                [disabled]=\\\"isNew$ | async\\\"\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine || createVariantsConfig.variants.length === 0\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <ng-container *ngIf=\\\"!(isNew$ | async)\\\">\\r\\n                <vdr-card *vdrIfMultichannel [title]=\\\"'common.channels' | translate\\\">\\r\\n                    <vdr-form-item *vdrIfDefaultChannelActive>\\r\\n                        <div class=\\\"flex channel-assignment\\\">\\r\\n                            <div class=\\\"mb-2\\\">\\r\\n                                <ng-container *ngFor=\\\"let channel of productChannels$ | async\\\">\\r\\n                                    <vdr-chip\\r\\n                                        *ngIf=\\\"!isDefaultChannel(channel.code)\\\"\\r\\n                                        icon=\\\"times-circle\\\"\\r\\n                                        (iconClick)=\\\"removeFromChannel(channel.id)\\\"\\r\\n                                    >\\r\\n                                        <vdr-channel-badge [channelCode]=\\\"channel.code\\\"></vdr-channel-badge>\\r\\n                                        {{ channel.code | channelCodeToLabel }}\\r\\n                                    </vdr-chip>\\r\\n                                </ng-container>\\r\\n                            </div>\\r\\n                            <button class=\\\"button-small\\\" (click)=\\\"assignToChannel()\\\">\\r\\n                                <clr-icon shape=\\\"layers\\\"></clr-icon>\\r\\n                                {{ 'catalog.assign-to-channel' | translate }}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </vdr-form-item>\\r\\n                </vdr-card>\\r\\n            </ng-container>\\r\\n            <vdr-card *ngIf=\\\"entity?.optionGroups.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let optionGroup of entity?.optionGroups | sort : 'id'\\\"\\r\\n                        [colorFrom]=\\\"optionGroup.code\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        {{ optionGroup.name }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a [routerLink]=\\\"['options']\\\" class=\\\"button-small mt-2\\\" *vdrIfPermissions=\\\"updatePermissions\\\">\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeProductFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectProductFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\"></vdr-page-entity-info>\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <div>\\r\\n                        <vdr-form-field [label]=\\\"'catalog.product-name' | translate\\\" for=\\\"name\\\">\\r\\n                            <input\\r\\n                                id=\\\"name\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                formControlName=\\\"name\\\"\\r\\n                                [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                                (input)=\\\"updateSlug($event.target.value)\\\"\\r\\n                            />\\r\\n                        </vdr-form-field>\\r\\n                        <div *ngIf=\\\"(isNew$ | async) === false && detailForm.get(['name'])?.dirty\\\">\\r\\n                            <clr-checkbox-wrapper>\\r\\n                                <input\\r\\n                                    clrCheckbox\\r\\n                                    type=\\\"checkbox\\\"\\r\\n                                    id=\\\"auto-update\\\"\\r\\n                                    formControlName=\\\"autoUpdateVariantNames\\\"\\r\\n                                />\\r\\n                                <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\\r\\n                            </clr-checkbox-wrapper>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"'catalog.slug' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            id=\\\"slug\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"slug\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"Product\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || entity?.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || entity?.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                ></vdr-assets>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card [title]=\\\"'catalog.product-variants' | translate\\\" [paddingX]=\\\"isNew$ | async\\\">\\r\\n                <div *ngIf=\\\"isNew$ | async; else variantList\\\">\\r\\n                    <vdr-generate-product-variants\\r\\n                        (variantsChange)=\\\"createVariantsConfig = $event\\\"\\r\\n                    ></vdr-generate-product-variants>\\r\\n                </div>\\r\\n                <ng-template #variantList>\\r\\n                    <vdr-product-variant-list\\r\\n                        [productId]=\\\"this.id\\\"\\r\\n                        [hideLanguageSelect]=\\\"true\\\"\\r\\n                    ></vdr-product-variant-list>\\r\\n                </ng-template>\\r\\n                <div class=\\\"mx-3\\\" *ngIf=\\\"(isNew$ | async) === false\\\">\\r\\n                    <a class=\\\"button\\\" [routerLink]=\\\"['manage-variants']\\\">\\r\\n                        <clr-icon shape=\\\"add-text\\\"></clr-icon>\\r\\n                        {{ 'catalog.manage-variants' | translate }}</a\\r\\n                    >\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\":host ::ng-deep trix-toolbar{top:24px}.facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-left:none}.group-name{padding-right:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;max-height:144px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }, { type: i1$1.Router }, { type: i1.ServerConfigService }, { type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }]; } });\n\nconst deleteProductsBulkAction = {\r\n    location: 'product-list',\r\n    label: marker('common.delete'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-bulk-delete-products'),\r\n            translationVars: {\r\n                count: selection.length,\r\n            },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => response ? dataService.product.deleteProducts(unique(selection.map(p => p.id))) : EMPTY))\r\n            .subscribe(result => {\r\n            let deleted = 0;\r\n            const errors = [];\r\n            for (const item of result.deleteProducts) {\r\n                if (item.result === DeletionResult.DELETED) {\r\n                    deleted++;\r\n                }\r\n                else if (item.message) {\r\n                    errors.push(item.message);\r\n                }\r\n            }\r\n            if (0 < deleted) {\r\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\r\n                    count: deleted,\r\n                });\r\n            }\r\n            if (0 < errors.length) {\r\n                notificationService.error(errors.join('\\n'));\r\n            }\r\n            hostComponent.refresh();\r\n            clearSelection();\r\n        });\r\n    },\r\n};\r\nconst assignProductsToChannelBulkAction = {\r\n    location: 'product-list',\r\n    label: marker('catalog.assign-to-channel'),\r\n    icon: 'layers',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\r\n    onClick: ({ injector, selection, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productIds: unique(selection.map(p => p.id)),\r\n                currentChannelIds: [],\r\n            },\r\n        })\r\n            .subscribe(result => {\r\n            if (result) {\r\n                clearSelection();\r\n            }\r\n        });\r\n    },\r\n};\r\nconst removeProductsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'product-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, productIds, channelId) => dataService.product\r\n        .removeProductsFromChannel({\r\n        channelId: channelId,\r\n        productIds,\r\n    })\r\n        .pipe(map(res => res.removeProductsFromChannel)),\r\n});\r\nconst assignFacetValuesToProductsBulkAction = {\r\n    location: 'product-list',\r\n    label: marker('catalog.edit-facet-values'),\r\n    icon: 'tag',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        const mode = 'product';\r\n        const ids = unique(selection.map(p => p.id));\r\n        return modalService\r\n            .fromComponent(BulkAddFacetValuesDialogComponent, {\r\n            size: 'xl',\r\n            locals: {\r\n                mode,\r\n                ids,\r\n            },\r\n        })\r\n            .subscribe(result => {\r\n            if (result) {\r\n                notificationService.success(marker('common.notify-bulk-update-success'), {\r\n                    count: selection.length,\r\n                    entity: mode === 'product' ? 'Products' : 'ProductVariants',\r\n                });\r\n                clearSelection();\r\n            }\r\n        });\r\n    },\r\n};\n\nclass ProductListComponent extends TypedBaseListComponent {\r\n    constructor(dataService, modalService, notificationService, jobQueueService) {\r\n        super();\r\n        this.dataService = dataService;\r\n        this.modalService = modalService;\r\n        this.notificationService = notificationService;\r\n        this.jobQueueService = jobQueueService;\r\n        this.pendingSearchIndexUpdates = 0;\r\n        this.customFields = this.getCustomFieldConfig('Product');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilters([\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'boolean' },\r\n                label: marker('common.enabled'),\r\n                filterField: 'enabled',\r\n            },\r\n            {\r\n                name: 'slug',\r\n                type: { kind: 'text' },\r\n                label: marker('common.slug'),\r\n                filterField: 'slug',\r\n            },\r\n        ])\r\n            .addFilter({\r\n            name: 'facetValues',\r\n            type: {\r\n                kind: 'custom',\r\n                component: FacetValueFormInputComponent,\r\n                serializeValue: value => value.map(v => v.id).join(','),\r\n                deserializeValue: value => value.split(',').map(id => ({ id })),\r\n                getLabel: value => {\r\n                    if (value.length === 0) {\r\n                        return '';\r\n                    }\r\n                    if (value[0].name) {\r\n                        return value.map(v => v.name).join(', ');\r\n                    }\r\n                    else {\r\n                        return lastValueFrom(this.dataService.facet\r\n                            .getFacetValues({ filter: { id: { in: value.map(v => v.id) } } })\r\n                            .mapSingle(({ facetValues }) => facetValues.items.map(fv => fv.name).join(', ')));\r\n                    }\r\n                },\r\n            },\r\n            label: marker('catalog.facet-values'),\r\n            toFilterInput: (value) => ({\r\n                facetValueId: {\r\n                    in: value.map(v => v.id),\r\n                },\r\n            }),\r\n        })\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .defaultSort('createdAt', 'DESC')\r\n            .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'slug' },\r\n        ])\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.configure({\r\n            document: ProductListQueryDocument,\r\n            getItems: data => data.products,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n    rebuildSearchIndex() {\r\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\r\n            this.notificationService.info(marker('catalog.reindexing'));\r\n            this.jobQueueService.addJob(reindex.id, job => {\r\n                if (job.state === JobState.COMPLETED) {\r\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\r\n                    this.notificationService.success(marker('catalog.reindex-successful'), {\r\n                        count: job.result.indexedItemCount,\r\n                        time,\r\n                    });\r\n                    this.refresh();\r\n                }\r\n                else {\r\n                    this.notificationService.error(marker('catalog.reindex-error'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n    deleteProduct(productId) {\r\n        this.modalService\r\n            .dialog({\r\n            title: marker('catalog.confirm-delete-product'),\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)), \r\n        // Short delay to allow the product to be removed from the search index before\r\n        // refreshing.\r\n        delay(500))\r\n            .subscribe(() => {\r\n            this.notificationService.success(marker('common.notify-delete-success'), {\r\n                entity: 'Product',\r\n            });\r\n            this.refresh();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-delete-error'), {\r\n                entity: 'Product',\r\n            });\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductListComponent, deps: [{ token: i1.DataService }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.JobQueueService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductListComponent, selector: \"vdr-products-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                        <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                        {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <!--<ng-template #vdrDt2CustomSearch>\\r\\n            <div class=\\\"search-form\\\">\\r\\n                <vdr-product-search-input\\r\\n                    #productSearchInputComponent\\r\\n                    [facetValueResults]=\\\"facetValues$ | async\\\"\\r\\n                    (searchTermChange)=\\\"setSearchTerm($event)\\\"\\r\\n                    (facetValueChange)=\\\"setFacetValueIds($event)\\\"\\r\\n                ></vdr-product-search-input>\\r\\n                <vdr-dropdown class=\\\"search-settings-menu mr3\\\">\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"icon-button search-index-button\\\"\\r\\n                        [title]=\\\"\\r\\n                            (pendingSearchIndexUpdates\\r\\n                                ? 'catalog.pending-search-index-updates'\\r\\n                                : 'catalog.search-index-controls'\\r\\n                            ) | translate\\r\\n                        \\\"\\r\\n                        vdrDropdownTrigger\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"cog\\\"></clr-icon>\\r\\n                        <vdr-status-badge *ngIf=\\\"pendingSearchIndexUpdates\\\" type=\\\"warning\\\"></vdr-status-badge>\\r\\n                    </button>\\r\\n                    <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                        <h4 class=\\\"dropdown-header\\\">{{ 'catalog.search-index-controls' | translate }}</h4>\\r\\n                        <ng-container *ngIf=\\\"pendingSearchIndexUpdates\\\">\\r\\n                            <button\\r\\n                                type=\\\"button\\\"\\r\\n                                class=\\\"run-updates-button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"runPendingSearchIndexUpdates()\\\"\\r\\n                                [disabled]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                            >\\r\\n                                <vdr-status-badge type=\\\"warning\\\"></vdr-status-badge>\\r\\n                                {{\\r\\n                                    'catalog.run-pending-search-index-updates'\\r\\n                                        | translate : { count: pendingSearchIndexUpdates }\\r\\n                                }}\\r\\n                            </button>\\r\\n                            <div class=\\\"dropdown-divider\\\"></div>\\r\\n                        </ng-container>\\r\\n                        <button\\r\\n                            type=\\\"button\\\"\\r\\n                            vdrDropdownItem\\r\\n                            (click)=\\\"rebuildSearchIndex()\\\"\\r\\n                            [disabled]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        >\\r\\n                            {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                        </button>\\r\\n                    </vdr-dropdown-menu>\\r\\n                </vdr-dropdown>\\r\\n            </div>\\r\\n        </ng-template>-->\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-right:24px}.sku{color:var(--color-text-300)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-products-list', template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left>\\r\\n            <vdr-language-selector\\r\\n                [availableLanguageCodes]=\\\"availableLanguages$ | async\\\"\\r\\n                [currentLanguageCode]=\\\"contentLanguage$ | async\\\"\\r\\n                (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n            ></vdr-language-selector>\\r\\n        </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary mr-1\\\"\\r\\n                [routerLink]=\\\"['./create']\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateCatalog', 'CreateProduct']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-product' | translate }}\\r\\n            </a>\\r\\n            <vdr-dropdown>\\r\\n                <button class=\\\"icon-button\\\" vdrDropdownTrigger>\\r\\n                    <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                </button>\\r\\n                <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                    <button type=\\\"button\\\" vdrDropdownItem (click)=\\\"rebuildSearchIndex()\\\">\\r\\n                        <clr-icon shape=\\\"refresh\\\" class=\\\"\\\"></clr-icon>\\r\\n                        {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                    </button>\\r\\n                </vdr-dropdown-menu>\\r\\n            </vdr-dropdown>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"product-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"product-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    ></vdr-bulk-action-menu>\\r\\n    <!--<ng-template #vdrDt2CustomSearch>\\r\\n            <div class=\\\"search-form\\\">\\r\\n                <vdr-product-search-input\\r\\n                    #productSearchInputComponent\\r\\n                    [facetValueResults]=\\\"facetValues$ | async\\\"\\r\\n                    (searchTermChange)=\\\"setSearchTerm($event)\\\"\\r\\n                    (facetValueChange)=\\\"setFacetValueIds($event)\\\"\\r\\n                ></vdr-product-search-input>\\r\\n                <vdr-dropdown class=\\\"search-settings-menu mr3\\\">\\r\\n                    <button\\r\\n                        type=\\\"button\\\"\\r\\n                        class=\\\"icon-button search-index-button\\\"\\r\\n                        [title]=\\\"\\r\\n                            (pendingSearchIndexUpdates\\r\\n                                ? 'catalog.pending-search-index-updates'\\r\\n                                : 'catalog.search-index-controls'\\r\\n                            ) | translate\\r\\n                        \\\"\\r\\n                        vdrDropdownTrigger\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"cog\\\"></clr-icon>\\r\\n                        <vdr-status-badge *ngIf=\\\"pendingSearchIndexUpdates\\\" type=\\\"warning\\\"></vdr-status-badge>\\r\\n                    </button>\\r\\n                    <vdr-dropdown-menu vdrPosition=\\\"bottom-right\\\">\\r\\n                        <h4 class=\\\"dropdown-header\\\">{{ 'catalog.search-index-controls' | translate }}</h4>\\r\\n                        <ng-container *ngIf=\\\"pendingSearchIndexUpdates\\\">\\r\\n                            <button\\r\\n                                type=\\\"button\\\"\\r\\n                                class=\\\"run-updates-button\\\"\\r\\n                                vdrDropdownItem\\r\\n                                (click)=\\\"runPendingSearchIndexUpdates()\\\"\\r\\n                                [disabled]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                            >\\r\\n                                <vdr-status-badge type=\\\"warning\\\"></vdr-status-badge>\\r\\n                                {{\\r\\n                                    'catalog.run-pending-search-index-updates'\\r\\n                                        | translate : { count: pendingSearchIndexUpdates }\\r\\n                                }}\\r\\n                            </button>\\r\\n                            <div class=\\\"dropdown-divider\\\"></div>\\r\\n                        </ng-container>\\r\\n                        <button\\r\\n                            type=\\\"button\\\"\\r\\n                            vdrDropdownItem\\r\\n                            (click)=\\\"rebuildSearchIndex()\\\"\\r\\n                            [disabled]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        >\\r\\n                            {{ 'catalog.rebuild-search-index' | translate }}\\r\\n                        </button>\\r\\n                    </vdr-dropdown-menu>\\r\\n                </vdr-dropdown>\\r\\n            </div>\\r\\n        </ng-template>-->\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.image' | translate\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <div class=\\\"image-placeholder\\\">\\r\\n                <img\\r\\n                    *ngIf=\\\"product.featuredAsset as asset; else imagePlaceholder\\\"\\r\\n                    [src]=\\\"asset | assetPreview : 'tiny'\\\"\\r\\n                />\\r\\n                <ng-template #imagePlaceholder>\\r\\n                    <div class=\\\"placeholder\\\">\\r\\n                        <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', product.id]\\\"\\r\\n                ><span>{{ product.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.slug' | translate\\\" [sort]=\\\"sorts.get('slug')\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ product.slug }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.enabled' | translate\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            <vdr-chip *ngIf=\\\"product.enabled\\\" colorType=\\\"success\\\">{{\\r\\n                'common.enabled' | translate\\r\\n            }}</vdr-chip>\\r\\n            <vdr-chip *ngIf=\\\"!product.enabled\\\" colorType=\\\"warning\\\">{{\\r\\n                'common.disabled' | translate\\r\\n            }}</vdr-chip>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'catalog.number-of-variants' | translate\\\">\\r\\n        <ng-template let-product=\\\"item\\\">\\r\\n            {{ 'catalog.variant-count' | translate : { count: product.variantList?.totalItems } }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let customField of customFields\\\"\\r\\n        [customField]=\\\"customField\\\"\\r\\n        [sorts]=\\\"sorts\\\"\\r\\n    />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\".image-col{width:70px}.image-placeholder{width:50px;height:50px;margin-top:calc(var(--space-unit) * -1);margin-bottom:calc(var(--space-unit) * -1);background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-right:24px}.sku{color:var(--color-text-300)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.JobQueueService }]; } });\n\nclass VariantPriceDetailComponent {\r\n    constructor(dataService) {\r\n        this.dataService = dataService;\r\n        this.priceChange$ = new BehaviorSubject(0);\r\n        this.taxCategoryIdChange$ = new BehaviorSubject('');\r\n    }\r\n    ngOnInit() {\r\n        const taxRates$ = this.dataService.settings\r\n            .getTaxRatesSimple(999, 0, 'cache-first')\r\n            .mapStream(data => data.taxRates.items);\r\n        const activeChannel$ = this.dataService.settings\r\n            .getActiveChannel('cache-first')\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel);\r\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(map(([channel, taxRates, taxCategoryId]) => {\r\n            const defaultTaxZone = channel.defaultTaxZone;\r\n            if (!defaultTaxZone) {\r\n                return 0;\r\n            }\r\n            const applicableRate = taxRates.find(taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId);\r\n            if (!applicableRate) {\r\n                return 0;\r\n            }\r\n            return applicableRate.value;\r\n        }));\r\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(map(([taxRate, price]) => Math.round(price * ((100 + taxRate) / 100))));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if ('price' in changes) {\r\n            this.priceChange$.next(changes.price.currentValue);\r\n        }\r\n        if ('taxCategoryId' in changes) {\r\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: VariantPriceDetailComponent, deps: [{ token: i1.DataService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: { priceIncludesTax: \"priceIncludesTax\", price: \"price\", currencyCode: \"currencyCode\", taxCategoryId: \"taxCategoryId\" }, usesOnChanges: true, ngImport: i0, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyPipe, name: \"localeCurrency\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: VariantPriceDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-variant-price-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label class=\\\"clr-control-label\\\">{{ 'catalog.taxes' | translate }}</label>\\r\\n<div *ngIf=\\\"priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\\r\\n</div>\\r\\n<div *ngIf=\\\"!priceIncludesTax\\\" class=\\\"value\\\">\\r\\n    {{\\r\\n        'catalog.price-with-tax-in-default-zone'\\r\\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\\r\\n    }}\\r\\n</div>\\r\\n\", styles: [\":host{display:flex;flex-direction:column}.value{margin-top:3px}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }]; }, propDecorators: { priceIncludesTax: [{\r\n                type: Input\r\n            }], price: [{\r\n                type: Input\r\n            }], currencyCode: [{\r\n                type: Input\r\n            }], taxCategoryId: [{\r\n                type: Input\r\n            }] } });\n\nconst GET_PRODUCT_VARIANTS_QUICK_JUMP = gql `\r\n    query GetProductVariantsQuickJump($id: ID!) {\r\n        product(id: $id) {\r\n            id\r\n            variants {\r\n                id\r\n                name\r\n                sku\r\n            }\r\n        }\r\n    }\r\n`;\r\nclass ProductVariantQuickJumpComponent {\r\n    constructor(dataService, router) {\r\n        this.dataService = dataService;\r\n        this.router = router;\r\n        this.searchFn = (term, item) => item.name.toLowerCase().includes(term.toLowerCase()) ||\r\n            item.sku.toLowerCase().includes(term.toLowerCase());\r\n    }\r\n    ngOnInit() {\r\n        this.variants$ = this.dataService\r\n            .query(GetProductVariantsQuickJumpDocument, {\r\n            id: this.productId,\r\n        })\r\n            .mapSingle(data => data.product?.variants ?? []);\r\n    }\r\n    onSelect(item) {\r\n        if (item) {\r\n            this.router\r\n                .navigate(['catalog', 'inventory', this.productId, 'variants', item.id])\r\n                .then(() => (this.selectedVariantId = undefined));\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantQuickJumpComponent, deps: [{ token: i1.DataService }, { token: i1$1.Router }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: { productId: \"productId\" }, ngImport: i0, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i5$1.NgSelectComponent, selector: \"ng-select\", inputs: [\"bindLabel\", \"bindValue\", \"markFirst\", \"placeholder\", \"notFoundText\", \"typeToSearchText\", \"addTagText\", \"loadingText\", \"clearAllText\", \"appearance\", \"dropdownPosition\", \"appendTo\", \"loading\", \"closeOnSelect\", \"hideSelected\", \"selectOnTab\", \"openOnEnter\", \"maxSelectedItems\", \"groupBy\", \"groupValue\", \"bufferAmount\", \"virtualScroll\", \"selectableGroup\", \"selectableGroupAsModel\", \"searchFn\", \"trackByFn\", \"clearOnBackspace\", \"labelForId\", \"inputAttrs\", \"tabIndex\", \"readonly\", \"searchWhileComposing\", \"minTermLength\", \"editableSearchTerm\", \"keyDownFn\", \"typeahead\", \"multiple\", \"addTag\", \"searchable\", \"clearable\", \"isOpen\", \"items\", \"compareWith\", \"clearSearchOnAdd\"], outputs: [\"blur\", \"focus\", \"change\", \"open\", \"close\", \"search\", \"clear\", \"add\", \"remove\", \"scroll\", \"scrollToEnd\"] }, { kind: \"directive\", type: i5$1.NgOptionTemplateDirective, selector: \"[ng-option-tmp]\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantQuickJumpComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variant-quick-jump', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-select\\r\\n    *ngIf=\\\"(variants$ | async)?.length > 1\\\"\\r\\n    [items]=\\\"variants$ | async\\\"\\r\\n    appendTo=\\\"body\\\"\\r\\n    bindValue=\\\"id\\\"\\r\\n    [(ngModel)]=\\\"selectedVariantId\\\"\\r\\n    [searchFn]=\\\"searchFn\\\"\\r\\n    [clearable]=\\\"false\\\"\\r\\n    [placeholder]=\\\"'catalog.quick-jump-placeholder' | translate\\\"\\r\\n    (change)=\\\"onSelect($event)\\\"\\r\\n>\\r\\n    <ng-template ng-option-tmp let-item=\\\"item\\\" let-index=\\\"index\\\" let-search=\\\"searchTerm\\\">\\r\\n        {{ item.name }} ({{ item.sku }})\\r\\n    </ng-template>\\r\\n</ng-select>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i1.DataService }, { type: i1$1.Router }]; }, propDecorators: { productId: [{\r\n                type: Input\r\n            }] } });\n\nclass ProductVariantDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(productDetailService, formBuilder, modalService, notificationService, dataService, changeDetector) {\r\n        super();\r\n        this.productDetailService = productDetailService;\r\n        this.formBuilder = formBuilder;\r\n        this.modalService = modalService;\r\n        this.notificationService = notificationService;\r\n        this.dataService = dataService;\r\n        this.changeDetector = changeDetector;\r\n        this.updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n        this.customFields = this.getCustomFieldConfig('ProductVariant');\r\n        this.customOptionFields = this.getCustomFieldConfig('ProductOption');\r\n        this.detailForm = this.formBuilder.group({\r\n            id: '',\r\n            enabled: false,\r\n            sku: '',\r\n            name: '',\r\n            taxCategoryId: '',\r\n            stockOnHand: 0,\r\n            useGlobalOutOfStockThreshold: true,\r\n            outOfStockThreshold: 0,\r\n            trackInventory: GlobalFlag.TRUE,\r\n            facetValueIds: [],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n        this.stockLevelsForm = this.formBuilder.array([]);\r\n        this.pricesForm = this.formBuilder.array([]);\r\n        this.assetChanges = {};\r\n        this.GlobalFlag = GlobalFlag;\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\r\n            this.globalTrackInventory = globalSettings.trackInventory;\r\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\r\n            this.changeDetector.markForCheck();\r\n        });\r\n        this.taxCategories$ = this.result$.pipe(map(data => data.taxCategories.items));\r\n        const availableCurrencyCodes$ = this.result$.pipe(tap(data => (this.channelDefaultCurrencyCode = data.activeChannel.defaultCurrencyCode)), map(data => data.activeChannel.availableCurrencyCodes));\r\n        this.unusedCurrencyCodes$ = combineLatest(this.pricesForm.valueChanges, availableCurrencyCodes$).pipe(map(([prices, currencyCodes]) => currencyCodes.filter(code => !prices.map(p => p.currencyCode).includes(code))));\r\n        const stockLocations$ = this.result$.pipe(map(data => data.stockLocations.items));\r\n        this.unusedStockLocation$ = combineLatest(this.entity$, stockLocations$).pipe(map(([entity, stockLocations]) => {\r\n            const usedIds = entity.stockLevels.map(l => l.stockLocation.id);\r\n            return stockLocations.filter(l => !usedIds.includes(l.id));\r\n        }));\r\n        this.channelPriceIncludesTax$ = this.dataService.settings\r\n            .getActiveChannel('cache-first')\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\r\n            .pipe(shareReplay(1));\r\n        this.stockLevels$ = this.entity$.pipe(map(entity => entity?.stockLevels ?? []));\r\n        const facetValues$ = this.entity$.pipe(map(variant => variant.facetValues ?? []));\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        const formFacetValueIdChanges$ = this.detailForm.get('facetValueIds').valueChanges.pipe(skip(1), distinctUntilChanged(), switchMap(ids => this.dataService.facet\r\n            .getFacetValues({ filter: { id: { in: ids } } })\r\n            .mapSingle(({ facetValues }) => facetValues.items)), shareReplay(1));\r\n        this.facetValues$ = concat(facetValues$.pipe(take(1)), facetValues$.pipe(switchMapTo(formFacetValueIdChanges$)));\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    addPriceInCurrency(currencyCode) {\r\n        this.pricesForm.push(this.formBuilder.group({\r\n            currencyCode,\r\n            price: 0,\r\n            delete: false,\r\n        }));\r\n    }\r\n    toggleDeletePrice(deleteFormControl) {\r\n        deleteFormControl.setValue(!deleteFormControl.value);\r\n        deleteFormControl.markAsDirty();\r\n    }\r\n    addStockLocation(stockLocation) {\r\n        this.stockLevelsForm.push(this.formBuilder.group({\r\n            stockLocationId: stockLocation.id,\r\n            stockLocationName: stockLocation.name,\r\n            stockOnHand: 0,\r\n            stockAllocated: 0,\r\n        }));\r\n    }\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(take(1), mergeMap(([variant, languageCode]) => {\r\n            const input = pick(this.getUpdatedVariant(variant, this.detailForm, languageCode), [\r\n                'id',\r\n                'enabled',\r\n                'translations',\r\n                'sku',\r\n                'taxCategoryId',\r\n                'facetValueIds',\r\n                'featuredAssetId',\r\n                'assetIds',\r\n                'trackInventory',\r\n                'outOfStockThreshold',\r\n                'useGlobalOutOfStockThreshold',\r\n                'customFields',\r\n            ]);\r\n            if (this.stockLevelsForm.dirty) {\r\n                input.stockLevels = this.stockLevelsForm.controls\r\n                    .filter(control => control.dirty)\r\n                    .map(control => ({\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    stockLocationId: control.value.stockLocationId,\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    stockOnHand: control.value.stockOnHand,\r\n                }));\r\n            }\r\n            if (this.pricesForm.dirty) {\r\n                input.prices = this.pricesForm.controls\r\n                    .filter(control => control.dirty)\r\n                    .map(control => ({\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    price: control.value.price,\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    currencyCode: control.value.currencyCode,\r\n                    delete: control.value.delete === true,\r\n                }));\r\n            }\r\n            return this.dataService.mutate(ProductVariantUpdateMutationDocument, {\r\n                input: [input],\r\n            });\r\n        }))\r\n            .subscribe(result => {\r\n            this.detailForm.markAsPristine();\r\n            this.stockLevelsForm.markAsPristine();\r\n            this.pricesForm.markAsPristine();\r\n            this.assetChanges = {};\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'ProductVariant',\r\n            });\r\n        });\r\n    }\r\n    assetsChanged() {\r\n        return !!Object.values(this.assetChanges).length;\r\n    }\r\n    inventoryIsNotTracked(formGroup) {\r\n        const trackInventory = formGroup.get('trackInventory')?.value;\r\n        return (trackInventory === GlobalFlag.FALSE ||\r\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false));\r\n    }\r\n    optionGroupCode(optionGroupId) {\r\n        const group = this.entity?.product.optionGroups.find(g => g.id === optionGroupId);\r\n        return group?.code;\r\n    }\r\n    optionName(option) {\r\n        const translation = option.translations.find(t => t.languageCode === this.languageCode) ?? option.translations[0];\r\n        return translation.name;\r\n    }\r\n    removeFacetValue(facetValueId) {\r\n        const productGroup = this.detailForm;\r\n        const currentFacetValueIds = productGroup.value.facetValueIds ?? [];\r\n        productGroup.patchValue({\r\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\r\n        });\r\n        productGroup.markAsDirty();\r\n    }\r\n    selectFacetValue() {\r\n        this.displayFacetValueModal().subscribe(facetValueIds => {\r\n            if (facetValueIds) {\r\n                const currentFacetValueIds = this.detailForm.value.facetValueIds ?? [];\r\n                this.detailForm.patchValue({\r\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\r\n                });\r\n                this.detailForm.markAsDirty();\r\n            }\r\n        });\r\n    }\r\n    displayFacetValueModal() {\r\n        return this.modalService\r\n            .fromComponent(ApplyFacetDialogComponent, {\r\n            size: 'md',\r\n            closable: true,\r\n        })\r\n            .pipe(map(facetValues => facetValues && facetValues.map(v => v.id)));\r\n    }\r\n    setFormValues(variant, languageCode) {\r\n        const variantTranslation = findTranslation(variant, languageCode);\r\n        const facetValueIds = variant.facetValues.map(fv => fv.id);\r\n        this.detailForm.patchValue({\r\n            id: variant.id,\r\n            enabled: variant.enabled,\r\n            sku: variant.sku,\r\n            name: variantTranslation ? variantTranslation.name : '',\r\n            taxCategoryId: variant.taxCategory.id,\r\n            stockOnHand: variant.stockLevels[0]?.stockOnHand ?? 0,\r\n            useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\r\n            outOfStockThreshold: variant.outOfStockThreshold,\r\n            trackInventory: variant.trackInventory,\r\n            facetValueIds,\r\n        });\r\n        this.stockLevelsForm.clear();\r\n        for (const stockLevel of variant.stockLevels) {\r\n            this.stockLevelsForm.push(this.formBuilder.group({\r\n                stockLocationId: stockLevel.stockLocation.id,\r\n                stockLocationName: stockLevel.stockLocation.name,\r\n                stockOnHand: stockLevel.stockOnHand,\r\n                stockAllocated: stockLevel.stockAllocated,\r\n            }));\r\n        }\r\n        this.pricesForm.clear();\r\n        for (const price of variant.prices) {\r\n            this.pricesForm.push(this.formBuilder.group({\r\n                price: price.price,\r\n                currencyCode: price.currencyCode,\r\n                delete: false,\r\n            }));\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), variant, variantTranslation);\r\n        }\r\n    }\r\n    /**\r\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\r\n     * can then be persisted to the API.\r\n     */\r\n    getUpdatedVariant(variant, variantFormGroup, languageCode) {\r\n        const updatedProduct = createUpdatedTranslatable({\r\n            translatable: variant,\r\n            updatedFields: variantFormGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: variant.name || '',\r\n            },\r\n        });\r\n        return {\r\n            ...updatedProduct,\r\n            assetIds: this.assetChanges.assets?.map(a => a.id),\r\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\r\n            facetValueIds: variantFormGroup.value.facetValueIds,\r\n            taxCategoryId: variantFormGroup.value.taxCategoryId,\r\n        };\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantDetailComponent, deps: [{ token: ProductDetailService }, { token: i2.FormBuilder }, { token: i1.ModalService }, { token: i1.NotificationService }, { token: i1.DataService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductVariantDetailComponent, selector: \"vdr-product-variant-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-right:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ChipComponent, selector: \"vdr-chip\", inputs: [\"icon\", \"invert\", \"colorFrom\", \"colorType\"], outputs: [\"iconClick\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: i1.FacetValueChipComponent, selector: \"vdr-facet-value-chip\", inputs: [\"facetValue\", \"removable\", \"displayFacetName\"], outputs: [\"remove\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.FormItemComponent, selector: \"vdr-form-item\", inputs: [\"label\", \"tooltip\"] }, { kind: \"component\", type: i1.LanguageSelectorComponent, selector: \"vdr-language-selector\", inputs: [\"currentLanguageCode\", \"availableLanguageCodes\", \"disabled\"], outputs: [\"languageCodeChange\"] }, { kind: \"component\", type: i1.DropdownComponent, selector: \"vdr-dropdown\", inputs: [\"manualToggle\"] }, { kind: \"component\", type: i1.DropdownMenuComponent, selector: \"vdr-dropdown-menu\", inputs: [\"vdrPosition\", \"customClasses\"] }, { kind: \"directive\", type: i1.DropdownTriggerDirective, selector: \"[vdrDropdownTrigger]\" }, { kind: \"directive\", type: i1.DropdownItemDirective, selector: \"[vdrDropdownItem]\" }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"component\", type: AssetsComponent, selector: \"vdr-assets\", inputs: [\"assets\", \"featuredAsset\", \"compact\", \"updatePermissions\"], outputs: [\"change\"] }, { kind: \"component\", type: VariantPriceDetailComponent, selector: \"vdr-variant-price-detail\", inputs: [\"priceIncludesTax\", \"price\", \"currencyCode\", \"taxCategoryId\"] }, { kind: \"component\", type: ProductVariantQuickJumpComponent, selector: \"vdr-product-variant-quick-jump\", inputs: [\"productId\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleCurrencyNamePipe, name: \"localeCurrencyName\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variant-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left [grow]=\\\"true\\\">\\r\\n            <div class=\\\"flex center\\\">\\r\\n                <ng-container *ngIf=\\\"availableLanguages$ | async as availableLanguages\\\">\\r\\n                    <vdr-language-selector\\r\\n                        *ngIf=\\\"availableLanguages.length > 1\\\"\\r\\n                        class=\\\"mr-2\\\"\\r\\n                        [disabled]=\\\"isNew$ | async\\\"\\r\\n                        [availableLanguageCodes]=\\\"availableLanguages\\\"\\r\\n                        [currentLanguageCode]=\\\"languageCode$ | async\\\"\\r\\n                        (languageCodeChange)=\\\"setLanguage($event)\\\"\\r\\n                    ></vdr-language-selector>\\r\\n                </ng-container>\\r\\n                <vdr-product-variant-quick-jump [productId]=\\\"entity?.product.id\\\" />\\r\\n            </div>\\r\\n        </vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"product-variant-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\"\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                (click)=\\\"save()\\\"\\r\\n                [disabled]=\\\"\\r\\n                    (detailForm.invalid ||\\r\\n                        stockLevelsForm.invalid ||\\r\\n                        pricesForm.invalid ||\\r\\n                        (detailForm.pristine && stockLevelsForm.pristine && pricesForm.pristine)) &&\\r\\n                    !assetsChanged()\\r\\n                \\\"\\r\\n            >\\r\\n                {{ 'common.update' | translate }}\\r\\n            </button>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\" *ngIf=\\\"entity$ | async as variant\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar\\r\\n            ><vdr-card>\\r\\n                <vdr-form-field [label]=\\\"'catalog.visibility' | translate\\\" for=\\\"visibility\\\">\\r\\n                    <clr-toggle-wrapper *vdrIfPermissions=\\\"['UpdateCatalog', 'UpdateProduct']\\\">\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            [formControl]=\\\"detailForm.get(['enabled'])\\\"\\r\\n                        />\\r\\n                        <label>{{ 'common.enabled' | translate }}</label>\\r\\n                    </clr-toggle-wrapper>\\r\\n                </vdr-form-field>\\r\\n            </vdr-card>\\r\\n            <vdr-card *ngIf=\\\"variant.options.length\\\" [title]=\\\"'catalog.product-options' | translate\\\">\\r\\n                <div class=\\\"options\\\">\\r\\n                    <vdr-chip\\r\\n                        *ngFor=\\\"let option of variant.options | sort : 'groupId'\\\"\\r\\n                        [colorFrom]=\\\"optionGroupCode(option.groupId)\\\"\\r\\n                        [invert]=\\\"true\\\"\\r\\n                    >\\r\\n                        <span>{{ optionGroupCode(option.groupId) }}:</span>\\r\\n                        {{ optionName(option) }}\\r\\n                    </vdr-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <a\\r\\n                        [routerLink]=\\\"['../../', 'options']\\\"\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"pencil\\\"></clr-icon>\\r\\n                        {{ 'catalog.edit-options' | translate }}\\r\\n                    </a>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.facets' | translate\\\">\\r\\n                <div class=\\\"facets\\\">\\r\\n                    <vdr-facet-value-chip\\r\\n                        *ngFor=\\\"let facetValue of facetValues$ | async\\\"\\r\\n                        [facetValue]=\\\"facetValue\\\"\\r\\n                        [removable]=\\\"updatePermissions | hasPermission\\\"\\r\\n                        (remove)=\\\"removeFacetValue(facetValue.id)\\\"\\r\\n                    ></vdr-facet-value-chip>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <button\\r\\n                        class=\\\"button-small mt-2\\\"\\r\\n                        *vdrIfPermissions=\\\"updatePermissions\\\"\\r\\n                        (click)=\\\"selectFacetValue()\\\"\\r\\n                    >\\r\\n                        <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                        {{ 'catalog.add-facets' | translate }}\\r\\n                    </button>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n\\r\\n            <vdr-card>\\r\\n                <vdr-page-entity-info *ngIf=\\\"entity$ | async as entity\\\" [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n\\r\\n        <vdr-page-block>\\r\\n            <button type=\\\"submit\\\" hidden x-data=\\\"prevents enter key from triggering other buttons\\\"></button>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field [label]=\\\"'catalog.sku' | translate\\\" for=\\\"sku\\\">\\r\\n                        <input\\r\\n                            id=\\\"sku\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'common.custom-fields' | translate\\\" *ngIf=\\\"customFields.length\\\">\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"ProductVariant\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                    [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"product-variant-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            />\\r\\n            <vdr-card [title]=\\\"'catalog.assets' | translate\\\">\\r\\n                <vdr-assets\\r\\n                    [assets]=\\\"assetChanges.assets || variant.assets\\\"\\r\\n                    [featuredAsset]=\\\"assetChanges.featuredAsset || variant.featuredAsset\\\"\\r\\n                    [updatePermissions]=\\\"updatePermissions\\\"\\r\\n                    (change)=\\\"assetChanges = $event\\\"\\r\\n                />\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.price-and-tax' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'catalog.tax-category' | translate\\\" for=\\\"taxCategory\\\">\\r\\n                        <select name=\\\"taxCategory\\\" formControlName=\\\"taxCategoryId\\\">\\r\\n                            <option\\r\\n                                *ngFor=\\\"let taxCategory of taxCategories$ | async\\\"\\r\\n                                [value]=\\\"taxCategory.id\\\"\\r\\n                            >\\r\\n                                {{ taxCategory.name }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"form-grid prices\\\" *ngFor=\\\"let price of pricesForm.controls\\\" [formGroup]=\\\"price\\\">\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            ('catalog.price' | translate) +\\r\\n                            (1 < pricesForm.length ? ' (' + price.value.currencyCode + ')' : '')\\r\\n                        \\\"\\r\\n                        [tooltip]=\\\"\\r\\n                            1 < pricesForm.length && price.value.currencyCode === channelDefaultCurrencyCode\\r\\n                                ? ('catalog.default-currency' | translate)\\r\\n                                : undefined\\r\\n                        \\\"\\r\\n                        for=\\\"price\\\"\\r\\n                    >\\r\\n                        <div class=\\\"price-wrapper\\\" [class.pending-deletion]=\\\"price.value.delete === true\\\">\\r\\n                            <vdr-currency-input\\r\\n                                name=\\\"price\\\"\\r\\n                                [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                                [readonly]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || price.value.delete === true\\r\\n                                \\\"\\r\\n                                formControlName=\\\"price\\\"\\r\\n                            />\\r\\n                            <div *ngIf=\\\"1 < pricesForm.controls.length\\\">\\r\\n                                <button\\r\\n                                    class=\\\"button-small delete-button\\\"\\r\\n                                    [disabled]=\\\"price.value.currencyCode === channelDefaultCurrencyCode\\\"\\r\\n                                    (click)=\\\"toggleDeletePrice(price.get('delete'))\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"trash\\\"></clr-icon>\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-variant-price-detail\\r\\n                        [price]=\\\"price.value.price\\\"\\r\\n                        [currencyCode]=\\\"price.value.currencyCode\\\"\\r\\n                        [priceIncludesTax]=\\\"channelPriceIncludesTax$ | async\\\"\\r\\n                        [taxCategoryId]=\\\"detailForm.get('taxCategoryId')!.value\\\"\\r\\n                    />\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedCurrencyCodes$ | async as unusedCurrencyCodes\\\">\\r\\n                    <div *ngIf=\\\"unusedCurrencyCodes.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-price-in-another-currency' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let currencyCode of unusedCurrencyCodes\\\"\\r\\n                                    (click)=\\\"addPriceInCurrency(currencyCode)\\\"\\r\\n                                >\\r\\n                                    {{ currencyCode | localeCurrencyName }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n            <vdr-card [title]=\\\"'catalog.stock-levels' | translate\\\">\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field\\r\\n                        for=\\\"track-inventory\\\"\\r\\n                        [label]=\\\"'catalog.track-inventory' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.track-inventory-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <select\\r\\n                            name=\\\"track-inventory\\\"\\r\\n                            formControlName=\\\"trackInventory\\\"\\r\\n                            [disabled]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        >\\r\\n                            <option [value]=\\\"GlobalFlag.TRUE\\\">\\r\\n                                {{ 'catalog.track-inventory-true' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.FALSE\\\">\\r\\n                                {{ 'catalog.track-inventory-false' | translate }}\\r\\n                            </option>\\r\\n                            <option [value]=\\\"GlobalFlag.INHERIT\\\">\\r\\n                                {{ 'catalog.track-inventory-inherit' | translate }}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                    </vdr-form-field>\\r\\n\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"'catalog.out-of-stock-threshold' | translate\\\"\\r\\n                        [tooltip]=\\\"'catalog.out-of-stock-threshold-tooltip' | translate\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"outOfStockThreshold\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                            [vdrDisabled]=\\\"\\r\\n                                detailForm.get('useGlobalOutOfStockThreshold')?.value !== false ||\\r\\n                                inventoryIsNotTracked(detailForm)\\r\\n                            \\\"\\r\\n                        />\\r\\n                        <clr-toggle-wrapper>\\r\\n                            <input\\r\\n                                type=\\\"checkbox\\\"\\r\\n                                clrToggle\\r\\n                                name=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                formControlName=\\\"useGlobalOutOfStockThreshold\\\"\\r\\n                                [vdrDisabled]=\\\"\\r\\n                                    !(updatePermissions | hasPermission) || inventoryIsNotTracked(detailForm)\\r\\n                                \\\"\\r\\n                            />\\r\\n                            <label\\r\\n                                >{{ 'catalog.use-global-value' | translate }} ({{\\r\\n                                    globalOutOfStockThreshold\\r\\n                                }})</label\\r\\n                            >\\r\\n                        </clr-toggle-wrapper>\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <div\\r\\n                    class=\\\"form-grid stock-levels\\\"\\r\\n                    *ngFor=\\\"let stockLevel of stockLevelsForm.controls\\\"\\r\\n                    [formGroup]=\\\"stockLevel\\\"\\r\\n                >\\r\\n                    <vdr-form-field\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-on-hand' | translate)\\r\\n                        \\\"\\r\\n                        [for]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                    >\\r\\n                        <input\\r\\n                            [id]=\\\"'stockOnHand_' + stockLevel.get('stockLocationId')?.value\\\"\\r\\n                            type=\\\"number\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermissions | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-item\\r\\n                        [label]=\\\"\\r\\n                            stockLevel.get('stockLocationName')?.value +\\r\\n                            ': ' +\\r\\n                            ('catalog.stock-allocated' | translate)\\r\\n                        \\\"\\r\\n                    >\\r\\n                        {{ stockLevel.get('stockAllocated')?.value }}\\r\\n                    </vdr-form-item>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"unusedStockLocation$ | async as unusedStockLocations\\\">\\r\\n                    <div *ngIf=\\\"unusedStockLocations.length\\\">\\r\\n                        <vdr-dropdown>\\r\\n                            <button class=\\\"button mt-2\\\" vdrDropdownTrigger>\\r\\n                                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                                {{ 'catalog.add-stock-location' | translate }}\\r\\n                                <clr-icon shape=\\\"ellipsis-vertical\\\"></clr-icon>\\r\\n                            </button>\\r\\n                            <vdr-dropdown-menu>\\r\\n                                <button\\r\\n                                    vdrDropdownItem\\r\\n                                    *ngFor=\\\"let stockLocation of unusedStockLocations\\\"\\r\\n                                    (click)=\\\"addStockLocation(stockLocation)\\\"\\r\\n                                >\\r\\n                                    <clr-icon shape=\\\"map-marker\\\"></clr-icon> {{ stockLocation.name }}\\r\\n                                </button>\\r\\n                            </vdr-dropdown-menu>\\r\\n                        </vdr-dropdown>\\r\\n                    </div>\\r\\n                </ng-container>\\r\\n            </vdr-card>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\".facets,.options{display:flex;flex-wrap:wrap;gap:3px}vdr-product-variant-quick-jump{flex:1;margin-right:calc(var(--space-unit) * 2)}.stock-levels,.prices{margin-top:calc(var(--space-unit) * 2);padding-top:calc(var(--space-unit) * 2);border-top:1px solid var(--color-weight-150)}.price-wrapper{display:flex;align-items:center;gap:var(--space-unit);width:100%}.price-wrapper.pending-deletion vdr-currency-input{opacity:.7}.price-wrapper.pending-deletion .delete-button{background-color:var(--color-error-700);color:var(--color-error-100)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: ProductDetailService }, { type: i2.FormBuilder }, { type: i1.ModalService }, { type: i1.NotificationService }, { type: i1.DataService }, { type: i0.ChangeDetectorRef }]; } });\n\nconst assignProductVariantsToChannelBulkAction = {\r\n    location: 'product-variant-list',\r\n    label: marker('catalog.assign-to-channel'),\r\n    icon: 'layers',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\r\n    onClick: ({ injector, selection, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        modalService\r\n            .fromComponent(AssignProductsToChannelDialogComponent, {\r\n            size: 'lg',\r\n            locals: {\r\n                productVariantIds: unique(selection.map(p => p.id)),\r\n                currentChannelIds: [],\r\n            },\r\n        })\r\n            .subscribe(result => {\r\n            if (result) {\r\n                clearSelection();\r\n            }\r\n        });\r\n    },\r\n};\r\nconst removeProductVariantsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'product-variant-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateProduct),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, ids, channelId) => dataService.product\r\n        .removeVariantsFromChannel({\r\n        channelId: channelId,\r\n        productVariantIds: ids,\r\n    })\r\n        .pipe(map(res => res.removeProductVariantsFromChannel)),\r\n});\r\nconst deleteProductVariantsBulkAction = {\r\n    location: 'product-variant-list',\r\n    label: marker('common.delete'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteProduct) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n        modalService\r\n            .dialog({\r\n            title: marker('common.confirm-bulk-delete'),\r\n            translationVars: {\r\n                count: selection.length,\r\n            },\r\n            buttons: [\r\n                { type: 'secondary', label: marker('common.cancel') },\r\n                { type: 'danger', label: marker('common.delete'), returnValue: true },\r\n            ],\r\n        })\r\n            .pipe(switchMap(response => response\r\n            ? dataService.product.deleteProductVariants(unique(selection.map(p => p.id)))\r\n            : EMPTY))\r\n            .subscribe(result => {\r\n            let deleted = 0;\r\n            const errors = [];\r\n            for (const item of result.deleteProductVariants) {\r\n                if (item.result === DeletionResult.DELETED) {\r\n                    deleted++;\r\n                }\r\n                else if (item.message) {\r\n                    errors.push(item.message);\r\n                }\r\n            }\r\n            if (0 < deleted) {\r\n                notificationService.success(marker('catalog.notify-bulk-delete-products-success'), {\r\n                    count: deleted,\r\n                });\r\n            }\r\n            if (0 < errors.length) {\r\n                notificationService.error(errors.join('\\n'));\r\n            }\r\n            hostComponent.refresh();\r\n            clearSelection();\r\n        });\r\n    },\r\n};\n\nclass ProductVariantsTableComponent {\r\n    constructor(changeDetector) {\r\n        this.changeDetector = changeDetector;\r\n        this.formGroupMap = new Map();\r\n        this.updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\r\n    }\r\n    ngOnInit() {\r\n        this.subscription = this.formArray.valueChanges\r\n            .pipe(map(value => value.length), debounceTime(1), distinctUntilChanged())\r\n            .subscribe(() => {\r\n            this.buildFormGroupMap();\r\n        });\r\n        this.buildFormGroupMap();\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n    trackByFn(index, item) {\r\n        if (item.id != null) {\r\n            return item.id;\r\n        }\r\n        else {\r\n            return index;\r\n        }\r\n    }\r\n    getFeaturedAsset(variant) {\r\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\r\n    }\r\n    optionGroupName(optionGroupId) {\r\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\r\n        return group && group.name;\r\n    }\r\n    buildFormGroupMap() {\r\n        this.formGroupMap.clear();\r\n        for (const controlGroup of this.formArray.controls) {\r\n            this.formGroupMap.set(controlGroup.value.id, controlGroup);\r\n        }\r\n        this.changeDetector.markForCheck();\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantsTableComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: ProductVariantsTableComponent, selector: \"vdr-product-variants-table\", inputs: { formArray: [\"productVariantsFormArray\", \"formArray\"], variants: \"variants\", paginationConfig: \"paginationConfig\", channelPriceIncludesTax: \"channelPriceIncludesTax\", optionGroups: \"optionGroups\", pendingAssetChanges: \"pendingAssetChanges\" }, ngImport: i0, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrDatagridItemsTrackBy, selector: \"[ngForTrackBy]\", inputs: [\"ngForTrackBy\"] }, { kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3.ClrInput, selector: \"[clrInput]\" }, { kind: \"component\", type: i3.ClrInputContainer, selector: \"clr-input-container\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: [\"min\"] }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i1.CurrencyInputComponent, selector: \"vdr-currency-input\", inputs: [\"disabled\", \"readonly\", \"value\", \"currencyCode\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DisabledDirective, selector: \"[vdrDisabled]\", inputs: [\"vdrDisabled\"] }, { kind: \"pipe\", type: i5$2.PaginatePipe, name: \"paginate\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.SortPipe, name: \"sort\" }, { kind: \"pipe\", type: i1.StringToColorPipe, name: \"stringToColor\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }, { kind: \"pipe\", type: i1.AssetPreviewPipe, name: \"assetPreview\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: ProductVariantsTableComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-product-variants-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th></th>\\r\\n            <th>{{ 'common.name' | translate }}</th>\\r\\n            <th>{{ 'catalog.sku' | translate }}</th>\\r\\n            <ng-container *ngFor=\\\"let optionGroup of optionGroups | sort: 'id'\\\">\\r\\n                <th>{{ optionGroup.name }}</th>\\r\\n            </ng-container>\\r\\n            <th>{{ 'catalog.price' | translate }}</th>\\r\\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\\r\\n            <th>{{ 'common.enabled' | translate }}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\\\">\\r\\n            <ng-container *ngIf=\\\"formGroupMap.get(variant.id) as formGroup\\\" [formGroup]=\\\"formGroup\\\">\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <div class=\\\"card-img\\\">\\r\\n                        <div class=\\\"featured-asset\\\">\\r\\n                            <img\\r\\n                                *ngIf=\\\"getFeaturedAsset(variant) as featuredAsset; else placeholder\\\"\\r\\n                                [src]=\\\"featuredAsset | assetPreview: 'tiny'\\\"\\r\\n                            />\\r\\n                            <ng-template #placeholder>\\r\\n                                <div class=\\\"placeholder\\\">\\r\\n                                    <clr-icon shape=\\\"image\\\" size=\\\"48\\\"></clr-icon>\\r\\n                                </div>\\r\\n                            </ng-template>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'common.name' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"sku\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            [placeholder]=\\\"'catalog.sku' | translate\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <ng-container *ngFor=\\\"let option of variant.options | sort: 'groupId'\\\">\\r\\n                    <td\\r\\n                        class=\\\"left align-middle\\\"\\r\\n                        [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\"\\r\\n                        [style.color]=\\\"optionGroupName(option.groupId) | stringToColor\\\"\\r\\n                    >\\r\\n                        {{ option.name }}\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <td class=\\\"left align-middle price\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"!channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"price\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                        <vdr-currency-input\\r\\n                            *ngIf=\\\"channelPriceIncludesTax\\\"\\r\\n                            clrInput\\r\\n                            [currencyCode]=\\\"variant.currencyCode\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                            formControlName=\\\"priceWithTax\\\"\\r\\n                        ></vdr-currency-input>\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-input-container>\\r\\n                        <input\\r\\n                            clrInput\\r\\n                            type=\\\"number\\\"\\r\\n                            min=\\\"0\\\"\\r\\n                            step=\\\"1\\\"\\r\\n                            formControlName=\\\"stockOnHand\\\"\\r\\n                            [readonly]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-input-container>\\r\\n                </td>\\r\\n                <td class=\\\"left align-middle stock\\\" [class.disabled]=\\\"!formGroup.get('enabled')!.value\\\">\\r\\n                    <clr-toggle-wrapper>\\r\\n                        <input\\r\\n                            type=\\\"checkbox\\\"\\r\\n                            clrToggle\\r\\n                            name=\\\"enabled\\\"\\r\\n                            formControlName=\\\"enabled\\\"\\r\\n                            [vdrDisabled]=\\\"!(updatePermission | hasPermission)\\\"\\r\\n                        />\\r\\n                    </clr-toggle-wrapper>\\r\\n                </td>\\r\\n            </ng-container>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\", styles: [\".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { formArray: [{\r\n                type: Input,\r\n                args: ['productVariantsFormArray']\r\n            }], variants: [{\r\n                type: Input\r\n            }], paginationConfig: [{\r\n                type: Input\r\n            }], channelPriceIncludesTax: [{\r\n                type: Input\r\n            }], optionGroups: [{\r\n                type: Input\r\n            }], pendingAssetChanges: [{\r\n                type: Input\r\n            }] } });\n\nconst STOCK_LOCATION_DETAIL_FRAGMENT = gql `\r\n    fragment StockLocationDetail on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\r\nconst GET_STOCK_LOCATION_DETAIL = gql `\r\n    query GetStockLocationDetail($id: ID!) {\r\n        stockLocation(id: $id) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\nconst CREATE_STOCK_LOCATION = gql `\r\n    mutation CreateStockLocation($input: CreateStockLocationInput!) {\r\n        createStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\nconst UPDATE_STOCK_LOCATION = gql `\r\n    mutation UpdateStockLocation($input: UpdateStockLocationInput!) {\r\n        updateStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\nclass StockLocationDetailComponent extends TypedBaseDetailComponent {\r\n    constructor(changeDetector, dataService, formBuilder, notificationService) {\r\n        super();\r\n        this.changeDetector = changeDetector;\r\n        this.dataService = dataService;\r\n        this.formBuilder = formBuilder;\r\n        this.notificationService = notificationService;\r\n        this.customFields = this.getCustomFieldConfig('StockLocation');\r\n        this.detailForm = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            description: [''],\r\n            customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { name, description, customFields } = this.detailForm.value;\r\n        if (!name) {\r\n            return;\r\n        }\r\n        const input = {\r\n            name,\r\n            description,\r\n            customFields,\r\n        };\r\n        this.dataService.mutate(CreateStockLocationDocument, { input }).subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-create-success'), {\r\n                entity: 'StockLocation',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n            this.router.navigate(['../', data.createStockLocation.id], { relativeTo: this.route });\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-create-error'), {\r\n                entity: 'StockLocation',\r\n            });\r\n        });\r\n    }\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(take(1), mergeMap(taxRate => {\r\n            const input = {\r\n                id: taxRate.id,\r\n                name: formValue.name,\r\n                description: formValue.description,\r\n                customFields: formValue.customFields,\r\n            };\r\n            return this.dataService.mutate(UpdateStockLocationDocument, { input });\r\n        }))\r\n            .subscribe(data => {\r\n            this.notificationService.success(marker('common.notify-update-success'), {\r\n                entity: 'StockLocation',\r\n            });\r\n            this.detailForm.markAsPristine();\r\n            this.changeDetector.markForCheck();\r\n        }, err => {\r\n            this.notificationService.error(marker('common.notify-update-error'), {\r\n                entity: 'StockLocation',\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    setFormValues(entity) {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            description: entity.description,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: StockLocationDetailComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.DataService }, { token: i2.FormBuilder }, { token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: StockLocationDetailComponent, selector: \"vdr-stock-location-detail\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i2.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i2.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i2.FormGroupName, selector: \"[formGroupName]\", inputs: [\"formGroupName\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"component\", type: i1.RichTextEditorComponent, selector: \"vdr-rich-text-editor\", inputs: [\"label\", \"readonly\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"component\", type: i1.CustomDetailComponentHostComponent, selector: \"vdr-custom-detail-component-host\", inputs: [\"locationId\", \"entity$\", \"detailForm\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"component\", type: i1.PageEntityInfoComponent, selector: \"vdr-page-entity-info\", inputs: [\"entity\"] }, { kind: \"component\", type: i1.PageDetailLayoutComponent, selector: \"vdr-page-detail-layout\" }, { kind: \"component\", type: i1.PageDetailSidebarComponent, selector: \"vdr-page-detail-sidebar\" }, { kind: \"component\", type: i1.CardComponent, selector: \"vdr-card\", inputs: [\"title\", \"paddingX\"] }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: StockLocationDetailComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-stock-location-detail', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left></vdr-ab-left>\\r\\n\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-detail\\\"></vdr-action-bar-items>\\r\\n            <button\\r\\n                class=\\\"btn btn-primary\\\"\\r\\n                *ngIf=\\\"isNew$ | async; else updateButton\\\"\\r\\n                (click)=\\\"create()\\\"\\r\\n                [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n            >\\r\\n                {{ 'common.create' | translate }}\\r\\n            </button>\\r\\n            <ng-template #updateButton>\\r\\n                <button\\r\\n                    class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"save()\\\"\\r\\n                    [disabled]=\\\"detailForm.invalid || detailForm.pristine\\\"\\r\\n                    *vdrIfPermissions=\\\"'UpdateStockLocation'\\\"\\r\\n                >\\r\\n                    {{ 'common.update' | translate }}\\r\\n                </button>\\r\\n            </ng-template>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n\\r\\n<form class=\\\"form\\\" [formGroup]=\\\"detailForm\\\">\\r\\n    <vdr-page-detail-layout>\\r\\n        <vdr-page-detail-sidebar>\\r\\n            <vdr-card *ngIf=\\\"entity$ | async as entity\\\">\\r\\n                <vdr-page-entity-info [entity]=\\\"entity\\\" />\\r\\n            </vdr-card>\\r\\n        </vdr-page-detail-sidebar>\\r\\n        <vdr-page-block>\\r\\n            <vdr-card>\\r\\n                <div class=\\\"form-grid\\\">\\r\\n                    <vdr-form-field [label]=\\\"'common.name' | translate\\\" for=\\\"name\\\">\\r\\n                        <input\\r\\n                            id=\\\"name\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            formControlName=\\\"name\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        />\\r\\n                    </vdr-form-field>\\r\\n                    <vdr-form-field\\r\\n                        class=\\\"form-grid-span\\\"\\r\\n                        [label]=\\\"'common.description' | translate\\\"\\r\\n                        for=\\\"slug\\\"\\r\\n                        [errors]=\\\"{ pattern: 'catalog.slug-pattern-error' | translate }\\\"\\r\\n                    >\\r\\n                        <vdr-rich-text-editor\\r\\n                            formControlName=\\\"description\\\"\\r\\n                            [readonly]=\\\"!('UpdateStockLocation' | hasPermission)\\\"\\r\\n                        ></vdr-rich-text-editor>\\r\\n                    </vdr-form-field>\\r\\n                </div>\\r\\n            </vdr-card>\\r\\n            <vdr-card\\r\\n                formGroupName=\\\"customFields\\\"\\r\\n                *ngIf=\\\"customFields.length\\\"\\r\\n                [title]=\\\"'common.custom-fields' | translate\\\"\\r\\n            >\\r\\n                <vdr-tabbed-custom-fields\\r\\n                    entityName=\\\"StockLocation\\\"\\r\\n                    [customFields]=\\\"customFields\\\"\\r\\n                    [customFieldsFormGroup]=\\\"detailForm.get('customFields')\\\"\\r\\n                ></vdr-tabbed-custom-fields>\\r\\n            </vdr-card>\\r\\n            <vdr-custom-detail-component-host\\r\\n                locationId=\\\"stock-location-detail\\\"\\r\\n                [entity$]=\\\"entity$\\\"\\r\\n                [detailForm]=\\\"detailForm\\\"\\r\\n            ></vdr-custom-detail-component-host>\\r\\n        </vdr-page-block>\\r\\n    </vdr-page-detail-layout>\\r\\n</form>\\r\\n\" }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.DataService }, { type: i2.FormBuilder }, { type: i1.NotificationService }]; } });\n\nconst DELETE_STOCK_LOCATIONS = gql `\r\n    mutation DeleteStockLocations($input: [DeleteStockLocationInput!]!) {\r\n        deleteStockLocations(input: $input) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\nconst ASSIGN_STOCK_LOCATIONS_TO_CHANNEL = gql `\r\n    mutation AssignStockLocationsToChannel($input: AssignStockLocationsToChannelInput!) {\r\n        assignStockLocationsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst REMOVE_STOCK_LOCATIONS_FROM_CHANNEL = gql `\r\n    mutation RemoveStockLocationsFromChannel($input: RemoveStockLocationsFromChannelInput!) {\r\n        removeStockLocationsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nconst deleteStockLocationsBulkAction = createBulkDeleteAction({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteStockLocation) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService\r\n        .mutate(DeleteStockLocationsDocument, {\r\n        input: ids.map(id => ({ id })),\r\n    })\r\n        .pipe(map(res => res.deleteStockLocations)),\r\n    shouldRetryItem: response => response.result === DeletionResult.NOT_DELETED,\r\n});\r\nconst assignStockLocationsToChannelBulkAction = createBulkAssignToChannelAction({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, stockLocationIds, channelId) => dataService\r\n        .mutate(AssignStockLocationsToChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            stockLocationIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.assignStockLocationsToChannel)),\r\n});\r\nconst removeStockLocationsFromChannelBulkAction = createBulkRemoveFromChannelAction({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, stockLocationIds, channelId) => dataService\r\n        .mutate(RemoveStockLocationsFromChannelDocument, {\r\n        input: {\r\n            channelId,\r\n            stockLocationIds,\r\n        },\r\n    })\r\n        .pipe(map(res => res.removeStockLocationsFromChannel)),\r\n});\n\nconst GET_STOCK_LOCATION_LIST = gql `\r\n    query GetStockLocationList($options: StockLocationListOptions) {\r\n        stockLocations(options: $options) {\r\n            items {\r\n                ...StockLocationListItem\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    fragment StockLocationListItem on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\r\nclass StockLocationListComponent extends TypedBaseListComponent {\r\n    constructor() {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('StockLocation');\r\n        this.filters = this.createFilterCollection()\r\n            .addIdFilter()\r\n            .addDateFilters()\r\n            .addFilters([\r\n            {\r\n                name: 'enabled',\r\n                type: { kind: 'text' },\r\n                label: marker('common.enabled'),\r\n                filterField: 'name',\r\n            },\r\n            {\r\n                name: 'sku',\r\n                type: { kind: 'text' },\r\n                label: marker('catalog.sku'),\r\n                filterField: 'description',\r\n            },\r\n        ])\r\n            .addCustomFieldFilters(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.sorts = this.createSortCollection()\r\n            .addSorts([\r\n            { name: 'id' },\r\n            { name: 'createdAt' },\r\n            { name: 'updatedAt' },\r\n            { name: 'name' },\r\n            { name: 'description' },\r\n        ])\r\n            .addCustomFieldSorts(this.customFields)\r\n            .connectToRoute(this.route);\r\n        this.configure({\r\n            document: GetStockLocationListDocument,\r\n            getItems: data => data.stockLocations,\r\n            setVariables: (skip, take) => ({\r\n                options: {\r\n                    skip,\r\n                    take,\r\n                    filter: {\r\n                        name: {\r\n                            contains: this.searchTermControl.value,\r\n                        },\r\n                        ...this.filters.createFilterInput(),\r\n                    },\r\n                    sort: this.sorts.createSortInput(),\r\n                },\r\n            }),\r\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: StockLocationListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: StockLocationListComponent, selector: \"vdr-stock-location-list\", usesInheritance: true, ngImport: i0, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"stock-location-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"], dependencies: [{ kind: \"directive\", type: i3.ClrIconCustomTag, selector: \"clr-icon\" }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i1.ActionBarComponent, selector: \"vdr-action-bar\" }, { kind: \"component\", type: i1.ActionBarLeftComponent, selector: \"vdr-ab-left\", inputs: [\"grow\"] }, { kind: \"component\", type: i1.ActionBarRightComponent, selector: \"vdr-ab-right\", inputs: [\"grow\"] }, { kind: \"directive\", type: i1.IfPermissionsDirective, selector: \"[vdrIfPermissions]\", inputs: [\"vdrIfPermissions\", \"vdrIfPermissionsElse\"] }, { kind: \"component\", type: i1.ActionBarItemsComponent, selector: \"vdr-action-bar-items\", inputs: [\"locationId\"] }, { kind: \"component\", type: i1.BulkActionMenuComponent, selector: \"vdr-bulk-action-menu\", inputs: [\"locationId\", \"selectionManager\", \"hostComponent\"] }, { kind: \"component\", type: i1.DataTable2Component, selector: \"vdr-data-table-2\", inputs: [\"id\", \"items\", \"itemsPerPage\", \"currentPage\", \"totalItems\", \"emptyStateLabel\", \"filters\", \"activeIndex\"], outputs: [\"pageChange\", \"itemsPerPageChange\"] }, { kind: \"component\", type: i1.DataTable2ColumnComponent, selector: \"vdr-dt2-column\", inputs: [\"expand\", \"heading\", \"align\", \"sort\", \"optional\", \"hiddenByDefault\", \"orderable\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.DataTable2SearchComponent, selector: \"vdr-dt2-search\", inputs: [\"searchTermControl\", \"searchTermPlaceholder\"] }, { kind: \"component\", type: i1.DataTableCustomFieldColumnComponent, selector: \"vdr-dt2-custom-field-column\", inputs: [\"customField\", \"sorts\"], exportAs: [\"row\"] }, { kind: \"component\", type: i1.PageBlockComponent, selector: \"vdr-page-block\" }, { kind: \"pipe\", type: i3$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.LocaleDatePipe, name: \"localeDate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: StockLocationListComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-stock-location-list', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<vdr-page-block>\\r\\n    <vdr-action-bar>\\r\\n        <vdr-ab-left> </vdr-ab-left>\\r\\n        <vdr-ab-right>\\r\\n            <vdr-action-bar-items locationId=\\\"stock-location-list\\\"></vdr-action-bar-items>\\r\\n            <a\\r\\n                class=\\\"button primary\\\"\\r\\n                *vdrIfPermissions=\\\"['CreateStockLocation']\\\"\\r\\n                [routerLink]=\\\"['./', 'create']\\\"\\r\\n            >\\r\\n                <clr-icon shape=\\\"plus\\\"></clr-icon>\\r\\n                {{ 'catalog.create-new-stock-location' | translate }}\\r\\n            </a>\\r\\n        </vdr-ab-right>\\r\\n    </vdr-action-bar>\\r\\n</vdr-page-block>\\r\\n<vdr-data-table-2\\r\\n    class=\\\"mt-2\\\"\\r\\n    id=\\\"stock-location-list\\\"\\r\\n    [items]=\\\"items$ | async\\\"\\r\\n    [itemsPerPage]=\\\"itemsPerPage$ | async\\\"\\r\\n    [totalItems]=\\\"totalItems$ | async\\\"\\r\\n    [currentPage]=\\\"currentPage$ | async\\\"\\r\\n    [filters]=\\\"filters\\\"\\r\\n    (pageChange)=\\\"setPageNumber($event)\\\"\\r\\n    (itemsPerPageChange)=\\\"setItemsPerPage($event)\\\"\\r\\n>\\r\\n    <vdr-bulk-action-menu\\r\\n        locationId=\\\"stock-location-list\\\"\\r\\n        [hostComponent]=\\\"this\\\"\\r\\n        [selectionManager]=\\\"selectionManager\\\"\\r\\n    />\\r\\n    <vdr-dt2-search\\r\\n        [searchTermControl]=\\\"searchTermControl\\\"\\r\\n        [searchTermPlaceholder]=\\\"'catalog.filter-by-name' | translate\\\"\\r\\n    />\\r\\n    <vdr-dt2-column [heading]=\\\"'common.id' | translate\\\" [hiddenByDefault]=\\\"true\\\" [sort]=\\\"sorts.get('id')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.id }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.created-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('createdAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.createdAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column\\r\\n        [heading]=\\\"'common.updated-at' | translate\\\"\\r\\n        [hiddenByDefault]=\\\"true\\\"\\r\\n        [sort]=\\\"sorts.get('updatedAt')\\\"\\r\\n    >\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.name' | translate\\\" [optional]=\\\"false\\\" [sort]=\\\"sorts.get('name')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <a class=\\\"button-ghost\\\" [routerLink]=\\\"['./', stockLocation.id]\\\"\\r\\n                ><span>{{ stockLocation.name }}</span\\r\\n                ><clr-icon shape=\\\"arrow right\\\"\\r\\n            /></a>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-column [heading]=\\\"'common.description' | translate\\\" [sort]=\\\"sorts.get('description')\\\">\\r\\n        <ng-template let-stockLocation=\\\"item\\\">\\r\\n            <div class=\\\"description\\\" [innerHTML]=\\\"stockLocation.description\\\"></div>\\r\\n        </ng-template>\\r\\n    </vdr-dt2-column>\\r\\n    <vdr-dt2-custom-field-column\\r\\n        *ngFor=\\\"let field of customFields\\\"\\r\\n        [customField]=\\\"field\\\"\\r\\n        [sorts]=\\\"sorts\\\" />\\r\\n</vdr-data-table-2>\\r\\n\", styles: [\"::ng-deep .description>p{margin-top:0!important}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass UpdateProductOptionDialogComponent {\r\n    constructor() {\r\n        this.updateVariantName = true;\r\n        this.codeInputTouched = false;\r\n    }\r\n    ngOnInit() {\r\n        const currentTranslation = this.productOption.translations.find(t => t.languageCode === this.activeLanguage);\r\n        this.name = currentTranslation?.name ?? '';\r\n        this.code = this.productOption.code;\r\n        this.customFieldsForm = new UntypedFormGroup({});\r\n        if (this.customFields) {\r\n            const cfCurrentTranslation = (currentTranslation && currentTranslation.customFields) || {};\r\n            for (const fieldDef of this.customFields) {\r\n                const key = fieldDef.name;\r\n                const value = fieldDef.type === 'localeString'\r\n                    ? cfCurrentTranslation[key]\r\n                    : this.productOption.customFields[key];\r\n                this.customFieldsForm.addControl(fieldDef.name, new UntypedFormControl(value));\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        const result = createUpdatedTranslatable({\r\n            translatable: this.productOption,\r\n            languageCode: this.activeLanguage,\r\n            updatedFields: {\r\n                code: this.code,\r\n                name: this.name,\r\n                customFields: this.customFieldsForm.value,\r\n            },\r\n            customFieldConfig: this.customFields,\r\n            defaultTranslation: {\r\n                languageCode: this.activeLanguage,\r\n                name: '',\r\n            },\r\n        });\r\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\r\n    }\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n    updateCode(nameValue) {\r\n        if (!this.codeInputTouched && !this.productOption.code) {\r\n            this.code = normalizeString(nameValue, '-');\r\n        }\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: UpdateProductOptionDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\r\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: UpdateProductOptionDialogComponent, selector: \"vdr-update-product-option-dialog\", ngImport: i0, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.ClrLabel, selector: \"label\", inputs: [\"for\"] }, { kind: \"directive\", type: i3.ClrCheckbox, selector: \"[clrCheckbox],[clrToggle]\" }, { kind: \"component\", type: i3.ClrCheckboxWrapper, selector: \"clr-checkbox-wrapper,clr-toggle-wrapper\" }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i2.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"component\", type: i1.FormFieldComponent, selector: \"vdr-form-field\", inputs: [\"label\", \"for\", \"tooltip\", \"errors\", \"readOnlyToggle\"] }, { kind: \"directive\", type: i1.FormFieldControlDirective, selector: \"input, textarea, select\" }, { kind: \"directive\", type: i1.DialogButtonsDirective, selector: \"[vdrDialogButtons]\" }, { kind: \"directive\", type: i1.DialogTitleDirective, selector: \"[vdrDialogTitle]\" }, { kind: \"component\", type: i1.TabbedCustomFieldsComponent, selector: \"vdr-tabbed-custom-fields\", inputs: [\"entityName\", \"customFields\", \"customFieldsFormGroup\", \"readonly\", \"compact\", \"showLabel\"] }, { kind: \"pipe\", type: i5.TranslatePipe, name: \"translate\" }, { kind: \"pipe\", type: i1.HasPermissionPipe, name: \"hasPermission\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: UpdateProductOptionDialogComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'vdr-update-product-option-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\\r\\n<vdr-form-field [label]=\\\"'catalog.option-name' | translate\\\" for=\\\"name\\\">\\r\\n    <input\\r\\n        id=\\\"name\\\"\\r\\n        type=\\\"text\\\"\\r\\n        #nameInput=\\\"ngModel\\\"\\r\\n        [(ngModel)]=\\\"name\\\"\\r\\n        required\\r\\n        (input)=\\\"updateCode($event.target.value)\\\"\\r\\n    />\\r\\n</vdr-form-field>\\r\\n<vdr-form-field [label]=\\\"'common.code' | translate\\\" for=\\\"code\\\">\\r\\n    <input id=\\\"code\\\" type=\\\"text\\\" #codeInput=\\\"ngModel\\\" required [(ngModel)]=\\\"code\\\" pattern=\\\"[a-z0-9_-]+\\\" />\\r\\n</vdr-form-field>\\r\\n<clr-checkbox-wrapper>\\r\\n    <input type=\\\"checkbox\\\" clrCheckbox [(ngModel)]=\\\"updateVariantName\\\" />\\r\\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\\r\\n</clr-checkbox-wrapper>\\r\\n<section *ngIf=\\\"customFields.length\\\">\\r\\n    <label>{{ 'common.custom-fields' | translate }}</label>\\r\\n    <vdr-tabbed-custom-fields\\r\\n        entityName=\\\"ProductOption\\\"\\r\\n        [customFields]=\\\"customFields\\\"\\r\\n        [customFieldsFormGroup]=\\\"customFieldsForm\\\"\\r\\n        [readonly]=\\\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\\\"\\r\\n    ></vdr-tabbed-custom-fields>\\r\\n</section>\\r\\n\\r\\n<ng-template vdrDialogButtons>\\r\\n    <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">{{ 'common.cancel' | translate }}</button>\\r\\n    <button\\r\\n        type=\\\"submit\\\"\\r\\n        (click)=\\\"update()\\\"\\r\\n        [disabled]=\\\"\\r\\n            nameInput.invalid ||\\r\\n            codeInput.invalid ||\\r\\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\\r\\n        \\\"\\r\\n        class=\\\"btn btn-primary\\\"\\r\\n    >\\r\\n        {{ 'catalog.update-product-option' | translate }}\\r\\n    </button>\\r\\n</ng-template>\\r\\n\" }]\r\n        }] });\n\nconst CATALOG_COMPONENTS = [\r\n    ProductListComponent,\r\n    ProductDetailComponent,\r\n    FacetListComponent,\r\n    FacetDetailComponent,\r\n    GenerateProductVariantsComponent,\r\n    ApplyFacetDialogComponent,\r\n    AssetListComponent,\r\n    AssetsComponent,\r\n    VariantPriceDetailComponent,\r\n    CollectionListComponent,\r\n    CollectionDetailComponent,\r\n    CollectionTreeComponent,\r\n    CollectionTreeNodeComponent,\r\n    CollectionContentsComponent,\r\n    ProductVariantsTableComponent,\r\n    OptionValueInputComponent,\r\n    UpdateProductOptionDialogComponent,\r\n    ProductVariantsEditorComponent,\r\n    AssignProductsToChannelDialogComponent,\r\n    AssetDetailComponent,\r\n    ConfirmVariantDeletionDialogComponent,\r\n    ProductOptionsEditorComponent,\r\n    BulkAddFacetValuesDialogComponent,\r\n    CollectionDataTableComponent,\r\n    CollectionBreadcrumbPipe,\r\n    MoveCollectionsDialogComponent,\r\n    ProductVariantListComponent,\r\n    ProductDetailComponent,\r\n    ProductVariantDetailComponent,\r\n    CreateProductVariantDialogComponent,\r\n    CreateProductOptionGroupDialogComponent,\r\n    ProductVariantQuickJumpComponent,\r\n    StockLocationListComponent,\r\n];\r\nclass CatalogModule {\r\n    constructor(bulkActionRegistryService, pageService) {\r\n        this.bulkActionRegistryService = bulkActionRegistryService;\r\n        this.pageService = pageService;\r\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignProductsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignProductVariantsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeProductsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeProductVariantsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteProductsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteProductVariantsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignFacetsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeFacetsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteFacetsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(moveCollectionsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignCollectionsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeCollectionsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteCollectionsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(assignStockLocationsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeStockLocationsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteStockLocationsBulkAction);\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: marker('catalog.products'),\r\n            route: '',\r\n            component: ProductListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-detail',\r\n            tab: marker('catalog.product'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ProductDetailComponent,\r\n                query: GetProductDetailDocument,\r\n                entityKey: 'product',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-product'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: marker('catalog.product-variants'),\r\n            route: 'variants',\r\n            component: ProductVariantListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'stock-location-detail',\r\n            tab: marker('catalog.stock-location'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: StockLocationDetailComponent,\r\n                query: GetStockLocationDetailDocument,\r\n                entityKey: 'stockLocation',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-stock-location'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-list',\r\n            tab: marker('catalog.stock-locations'),\r\n            route: 'stock-locations',\r\n            component: StockLocationListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'product-variant-detail',\r\n            tab: marker('catalog.product-variants'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ProductVariantDetailComponent,\r\n                query: GetProductVariantDetailDocument,\r\n                entityKey: 'productVariant',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: `${entity?.product.name}`,\r\n                        link: ['/catalog', 'inventory', entity?.product.id],\r\n                    },\r\n                    {\r\n                        label: `${entity?.name} (${entity?.sku})`,\r\n                        link: ['variants', entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'facet-list',\r\n            tab: marker('catalog.facets'),\r\n            route: '',\r\n            component: FacetListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'facet-detail',\r\n            tab: marker('catalog.facet'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: FacetDetailComponent,\r\n                query: GetFacetDetailDocument,\r\n                entityKey: 'facet',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-facet'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'collection-list',\r\n            tab: marker('catalog.collections'),\r\n            route: '',\r\n            component: CollectionListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'collection-detail',\r\n            tab: marker('catalog.collection'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: CollectionDetailComponent,\r\n                query: CollectionDetailQueryDocument,\r\n                entityKey: 'collection',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : marker('catalog.create-new-collection'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'asset-list',\r\n            tab: marker('catalog.assets'),\r\n            route: '',\r\n            component: AssetListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'asset-detail',\r\n            tab: marker('catalog.asset'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: AssetDetailComponent,\r\n                query: AssetDetailQueryDocument,\r\n                entityKey: 'asset',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: `${entity?.name}`,\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n    }\r\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CatalogModule, deps: [{ token: i1.BulkActionRegistryService }, { token: i1.PageService }], target: i0.ɵɵFactoryTarget.NgModule }); }\r\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: CatalogModule, declarations: [ProductListComponent,\r\n            ProductDetailComponent,\r\n            FacetListComponent,\r\n            FacetDetailComponent,\r\n            GenerateProductVariantsComponent,\r\n            ApplyFacetDialogComponent,\r\n            AssetListComponent,\r\n            AssetsComponent,\r\n            VariantPriceDetailComponent,\r\n            CollectionListComponent,\r\n            CollectionDetailComponent,\r\n            CollectionTreeComponent,\r\n            CollectionTreeNodeComponent,\r\n            CollectionContentsComponent,\r\n            ProductVariantsTableComponent,\r\n            OptionValueInputComponent,\r\n            UpdateProductOptionDialogComponent,\r\n            ProductVariantsEditorComponent,\r\n            AssignProductsToChannelDialogComponent,\r\n            AssetDetailComponent,\r\n            ConfirmVariantDeletionDialogComponent,\r\n            ProductOptionsEditorComponent,\r\n            BulkAddFacetValuesDialogComponent,\r\n            CollectionDataTableComponent,\r\n            CollectionBreadcrumbPipe,\r\n            MoveCollectionsDialogComponent,\r\n            ProductVariantListComponent,\r\n            ProductDetailComponent,\r\n            ProductVariantDetailComponent,\r\n            CreateProductVariantDialogComponent,\r\n            CreateProductOptionGroupDialogComponent,\r\n            ProductVariantQuickJumpComponent,\r\n            StockLocationListComponent, StockLocationDetailComponent], imports: [SharedModule, i1$1.RouterModule], exports: [ProductListComponent,\r\n            ProductDetailComponent,\r\n            FacetListComponent,\r\n            FacetDetailComponent,\r\n            GenerateProductVariantsComponent,\r\n            ApplyFacetDialogComponent,\r\n            AssetListComponent,\r\n            AssetsComponent,\r\n            VariantPriceDetailComponent,\r\n            CollectionListComponent,\r\n            CollectionDetailComponent,\r\n            CollectionTreeComponent,\r\n            CollectionTreeNodeComponent,\r\n            CollectionContentsComponent,\r\n            ProductVariantsTableComponent,\r\n            OptionValueInputComponent,\r\n            UpdateProductOptionDialogComponent,\r\n            ProductVariantsEditorComponent,\r\n            AssignProductsToChannelDialogComponent,\r\n            AssetDetailComponent,\r\n            ConfirmVariantDeletionDialogComponent,\r\n            ProductOptionsEditorComponent,\r\n            BulkAddFacetValuesDialogComponent,\r\n            CollectionDataTableComponent,\r\n            CollectionBreadcrumbPipe,\r\n            MoveCollectionsDialogComponent,\r\n            ProductVariantListComponent,\r\n            ProductDetailComponent,\r\n            ProductVariantDetailComponent,\r\n            CreateProductVariantDialogComponent,\r\n            CreateProductOptionGroupDialogComponent,\r\n            ProductVariantQuickJumpComponent,\r\n            StockLocationListComponent] }); }\r\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CatalogModule, providers: [\r\n            {\r\n                provide: ROUTES,\r\n                useFactory: (pageService) => createRoutes(pageService),\r\n                multi: true,\r\n                deps: [PageService],\r\n            },\r\n        ], imports: [SharedModule, RouterModule.forChild([])] }); }\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: CatalogModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [SharedModule, RouterModule.forChild([])],\r\n                    exports: [...CATALOG_COMPONENTS],\r\n                    declarations: [...CATALOG_COMPONENTS, StockLocationDetailComponent],\r\n                    providers: [\r\n                        {\r\n                            provide: ROUTES,\r\n                            useFactory: (pageService) => createRoutes(pageService),\r\n                            multi: true,\r\n                            deps: [PageService],\r\n                        },\r\n                    ],\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.BulkActionRegistryService }, { type: i1.PageService }]; } });\n\nconst PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT = gql `\r\n    fragment ProductListQueryProductFragment on Product {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        slug\r\n        featuredAsset {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            preview\r\n            focalPoint {\r\n                x\r\n                y\r\n            }\r\n        }\r\n        variantList {\r\n            totalItems\r\n        }\r\n    }\r\n`;\r\nconst PRODUCT_LIST_QUERY = gql `\r\n    query ProductListQuery($options: ProductListOptions) {\r\n        products(options: $options) {\r\n            items {\r\n                ...ProductListQueryProductFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_LIST_QUERY_PRODUCT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantDetailQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        prices {\r\n            price\r\n            currencyCode\r\n        }\r\n        priceWithTax\r\n        stockOnHand\r\n        stockAllocated\r\n        trackInventory\r\n        outOfStockThreshold\r\n        useGlobalOutOfStockThreshold\r\n        taxRateApplied {\r\n            id\r\n            name\r\n            value\r\n        }\r\n        taxCategory {\r\n            id\r\n            name\r\n        }\r\n        sku\r\n        options {\r\n            ...ProductOption\r\n        }\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocationId\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        facetValues {\r\n            id\r\n            code\r\n            name\r\n            facet {\r\n                id\r\n                name\r\n            }\r\n        }\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n        assets {\r\n            ...Asset\r\n        }\r\n        translations {\r\n            id\r\n            languageCode\r\n            name\r\n        }\r\n        channels {\r\n            id\r\n            code\r\n        }\r\n        product {\r\n            id\r\n            name\r\n            optionGroups {\r\n                id\r\n                name\r\n                code\r\n                translations {\r\n                    id\r\n                    languageCode\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst PRODUCT_VARIANT_DETAIL_QUERY = gql `\r\n    query GetProductVariantDetail($id: ID!) {\r\n        productVariant(id: $id) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n        stockLocations(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                description\r\n            }\r\n        }\r\n        taxCategories(options: { take: 100 }) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n                isDefault\r\n            }\r\n            totalItems\r\n        }\r\n        activeChannel {\r\n            id\r\n            availableCurrencyCodes\r\n            defaultCurrencyCode\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\r\nconst PRODUCT_VARIANT_UPDATE_MUTATION = gql `\r\n    mutation ProductVariantUpdateMutation($input: [UpdateProductVariantInput!]!) {\r\n        updateProductVariants(input: $input) {\r\n            ...ProductVariantDetailQueryProductVariantFragment\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\nconst PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT = gql `\r\n    fragment ProductVariantListQueryProductVariantFragment on ProductVariant {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        productId\r\n        enabled\r\n        languageCode\r\n        name\r\n        price\r\n        currencyCode\r\n        priceWithTax\r\n        trackInventory\r\n        outOfStockThreshold\r\n        stockLevels {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            stockLocationId\r\n            stockOnHand\r\n            stockAllocated\r\n            stockLocation {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                name\r\n            }\r\n        }\r\n        useGlobalOutOfStockThreshold\r\n        sku\r\n        featuredAsset {\r\n            ...Asset\r\n        }\r\n    }\r\n\r\n    ${ASSET_FRAGMENT}\r\n`;\r\nconst PRODUCT_VARIANT_LIST_QUERY = gql `\r\n    query ProductVariantListQuery($options: ProductVariantListOptions!) {\r\n        productVariants(options: $options) {\r\n            items {\r\n                ...ProductVariantListQueryProductVariantFragment\r\n            }\r\n            totalItems\r\n        }\r\n    }\r\n    ${PRODUCT_VARIANT_LIST_QUERY_PRODUCT_VARIANT_FRAGMENT}\r\n`;\n\n// This file was generated by the build-public-api.ts script\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { ASSET_DETAIL_QUERY, ApplyFacetDialogComponent, AssetDetailComponent, AssetListComponent, AssetsComponent, AssignProductsToChannelDialogComponent, BulkAddFacetValuesDialogComponent, COLLECTION_DETAIL_QUERY, CREATE_STOCK_LOCATION, CatalogModule, CollectionBreadcrumbPipe, CollectionContentsComponent, CollectionDataTableComponent, CollectionDetailComponent, CollectionListComponent, CollectionTreeComponent, CollectionTreeNodeComponent, CollectionTreeService, ConfirmVariantDeletionDialogComponent, CreateProductOptionGroupDialogComponent, CreateProductVariantDialogComponent, FACET_DETAIL_QUERY, FACET_LIST_QUERY, FacetDetailComponent, FacetListComponent, GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, GET_PRODUCT_DETAIL, GET_STOCK_LOCATION_DETAIL, GET_STOCK_LOCATION_LIST, GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, GenerateProductVariantsComponent, GeneratedVariant, MoveCollectionsDialogComponent, OPTION_VALUE_INPUT_VALUE_ACCESSOR, OptionValueInputComponent, PRODUCT_LIST_QUERY, PRODUCT_VARIANT_DETAIL_QUERY, PRODUCT_VARIANT_DETAIL_QUERY_PRODUCT_VARIANT_FRAGMENT, PRODUCT_VARIANT_LIST_QUERY, PRODUCT_VARIANT_UPDATE_MUTATION, ProductDetailComponent, ProductDetailService, ProductListComponent, ProductOptionsEditorComponent, ProductVariantDetailComponent, ProductVariantListComponent, ProductVariantQuickJumpComponent, ProductVariantsEditorComponent, ProductVariantsResolver, ProductVariantsTableComponent, StockLocationDetailComponent, StockLocationListComponent, UPDATE_PRODUCTS_BULK, UPDATE_STOCK_LOCATION, UPDATE_VARIANTS_BULK, UpdateProductOptionDialogComponent, VariantPriceDetailComponent, arrayToTree, assignCollectionsToChannelBulkAction, assignFacetValuesToProductsBulkAction, assignFacetsToChannelBulkAction, assignProductVariantsToChannelBulkAction, assignProductsToChannelBulkAction, assignStockLocationsToChannelBulkAction, createRoutes, deleteCollectionsBulkAction, deleteFacetsBulkAction, deleteProductVariantsBulkAction, deleteProductsBulkAction, deleteStockLocationsBulkAction, moveCollectionsBulkAction, productOptionsEditorBreadcrumb, removeCollectionsFromChannelBulkAction, removeFacetsFromChannelBulkAction, removeFacetsFromChannelBulkAction2, removeProductVariantsFromChannelBulkAction, removeProductsFromChannelBulkAction, removeStockLocationsFromChannelBulkAction, replaceLast };\n"],"x_google_ignoreList":[0,1]}